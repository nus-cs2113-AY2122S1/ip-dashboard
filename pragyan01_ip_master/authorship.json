[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"Duke is a CLI optimised bot that helps you create and manage 3 types of tasks - Deadlines, Events","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"and todo tasks. Users have the ability to create these tasks, mark them as done, delete","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"and find them. Users can also view their tasks in a list format.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":"* [Usage](#usage)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":"  * [Adding a task](#adding-a-task)","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":"  * [Marking a task](#marking-a-task)","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"  * [Deleting a task](#deleting-a-task)","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"  * [Finding a task](#finding-a-task)","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"  * [Listing all tasks](#listing-all-tasks)","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"  * [Exiting the program](#exiting-the-program)","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"* [Command Summary](#command-summary)    ","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"## Quick Start","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"2. Download the latest iP.jar under v2.0 from [here](https://github.com/pragyan01/ip/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"3. Go to the folder you saved iP.jar and note the absolute file path.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"4. If you are using Windows, open up a Command prompt terminal cmd.exe or powershell.exe and for ","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"   Mac and Linux users, do the same with the terminal of your respective systems.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"5. Navigate to the folder where iP.jar is stored.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"6. Execute java -jar iP.jar in the terminal, and the application will start running.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"You should be able to see something like this:","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"Hello! I\u0027m Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":" ____        _        ","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"What can i do for you?","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"Enter your wish: ","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"1. Add any of the 3 task types: todo, deadline and events","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"2. Mark a task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"3. Delete a task","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"4. Find a specific task or tasks containing the searched keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"5. List out all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"6. Exit the program","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"pragyan01"},"content":"### Adding a task","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"pragyan01"},"content":"Add tasks from any 3 types available: Todo, deadline and event","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"pragyan01"},"content":"1. A todo task only has a description associated with it. ","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"pragyan01"},"content":"   This command allows you to add a new todo task to your list.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"pragyan01"},"content":"`todo {task description}` - Adds a new todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"pragyan01"},"content":"`todo buy dinner`","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"pragyan01"},"content":"That\u0027s the spirit! I\u0027ve added this task:","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"pragyan01"},"content":"[T][ ] buy dinner","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"pragyan01"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"pragyan01"},"content":"2. A deadline task has a description, and a deadline associated with it. ","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"pragyan01"},"content":"   This command allows you to add a new deadline task to your list.","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"pragyan01"},"content":"`deadline {task description} /by {yyyy-mm-dd}` - Adds a new deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"pragyan01"},"content":"`deadline submit assignment /by 2021-10-30`","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"pragyan01"},"content":"Deadline Entered: Oct 30 2021","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"pragyan01"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"pragyan01"},"content":"[D][ ] submit assignment (by: 2021-10-30)","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"pragyan01"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"pragyan01"},"content":"3. An event task has a description, and a duration associated with it. ","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"pragyan01"},"content":"   This command allows you to add a new event task to your list.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"pragyan01"},"content":"`event {task description} /at {duration}` - Adds a new event task","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"pragyan01"},"content":"`event team meeting /at Monday 5-6pm`","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"pragyan01"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"pragyan01"},"content":"[E][ ] team meeting (at: Monday 5-6pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"pragyan01"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"pragyan01"},"content":"### Marking a task","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"pragyan01"},"content":"Marks a task\u0027s status as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"pragyan01"},"content":"`done {task number}` - Updates the task as completed","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"pragyan01"},"content":"`done 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"pragyan01"},"content":"Kudos! One less thing to stress about!","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"pragyan01"},"content":"  [T][X] buy dinner","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"pragyan01"},"content":"### Deleting a task","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"pragyan01"},"content":"Deletes a specific task from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"pragyan01"},"content":"`delete {task number}` - Removes the specific task","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"pragyan01"},"content":"`delete 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"pragyan01"},"content":"One more thing outta your life as always...","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"pragyan01"},"content":"  [T][X] buy dinner","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"pragyan01"},"content":"You now have 2 tasks left.","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"pragyan01"},"content":"### Finding a task","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"pragyan01"},"content":"Searches for a specific task from the list or tasks containing the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"pragyan01"},"content":"`find {keyword}` - Searches for tasks containing keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"pragyan01"},"content":"`find assingment`","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"pragyan01"},"content":"Lucky for you, i\u0027m really good at digging through your mess:","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"pragyan01"},"content":"1. [D][ ] submit assignment (by: 2021-10-30)","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"pragyan01"},"content":"Enter your wish: ","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"pragyan01"},"content":"### Listing all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"pragyan01"},"content":"Prints all existing tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"pragyan01"},"content":"`list` - Lists everything","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"pragyan01"},"content":"`list`","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"pragyan01"},"content":"1. [D][ ] submit assignment (by: 2021-10-30)","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"pragyan01"},"content":"2. [E][ ] team meeting (at: Monday 5-6pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"pragyan01"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"pragyan01"},"content":"### Exiting the program","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"pragyan01"},"content":"Terminates the program and exits.","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"pragyan01"},"content":"`bye` - Terminates program","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"pragyan01"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"pragyan01"},"content":"`bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"pragyan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"pragyan01"},"content":"Ciao! More tasks to do later!","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"pragyan01"},"content":"------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":197,"author":{"gitId":"pragyan01"},"content":"## Command Summary","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"pragyan01"},"content":"Description | Syntax | Example","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"pragyan01"},"content":"------------|--------|--------","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"pragyan01"},"content":"Add todo task | todo {task description} | todo buy dinner","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"pragyan01"},"content":"Add deadline task | deadline {task description} /by {yyyy-mm-dd} | deadline submit assignment /by 2021-10-30","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"pragyan01"},"content":"Add event task | event {task description} /at {duration} | event team meeting /at Monday 5-6pm","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"pragyan01"},"content":"Mark task as done | done {task number} | done 1","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"pragyan01"},"content":"Delete a task | delete {task number} | delete 1","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"pragyan01"},"content":"Find a task | find {keyword} | find assignment","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"pragyan01"},"content":"Exit the program | bye | bye","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"pragyan01":178,"-":30}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * Class that is used in order to create a new deadline task.","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"    protected String by;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"     * Constructor to instantiate new deadline object","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"     * @param by Due date of the deadline task","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"        LocalDate time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"        this.by \u003d time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"pragyan01"},"content":"        return \"deadline \" + description + \"/by \" + by + \" | \" + done;","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"pragyan01":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import static duke.Parser.inputSort;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import static duke.Ui.start;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * Main class of Duke bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"     * Main method of Duke bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"        start();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"        inputSort();","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"pragyan01":17,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"pragyan01":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":" * Class that is used in order to create a new event task.","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"     * Constructor to instantiate new event object","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"     * @param description Description of the event task","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"     * @param at Due date of the event task","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"        return \"[E][\" + super.getStatusIcon() + \"] \" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"        return \"event \" + description + \"/at \" + at + \" | \" + done;","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"pragyan01":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"import static duke.Storage.saveData;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"import static duke.TaskList.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":" * Class responsible for filtering out user commands and determining the flow of the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"     * Method that determines the control flow of the duke bot based on user input","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message when list is asked to be printed but empty","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"     * @throws DateTimeParseException if format entered by user is not correct","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"    public static void inputSort() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"        while (quitFlag \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"Enter your wish: \" + \"\\n\" + line);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"            Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"            String input \u003d scan.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"            String actionWord \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"            switch (actionWord) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"                sayBye(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"            case \"list\":","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"                try {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"                    sayList();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"                    System.out.println(line + \"\\n\" + \"Hold your horses, you didn\u0027t even tell me about your wishes yet!\" + \"\\n\" + line + \"\\n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"            case \"done\":","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"                sayDone(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"                saveData(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"                sayTodo(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"                saveData(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"                try {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"pragyan01"},"content":"                    sayDeadline(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"pragyan01"},"content":"                    saveData(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"pragyan01"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"pragyan01"},"content":"                    System.out.println(\"Please enter in the format: deadline (desc) /by yyyy-mm-dd\");","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"pragyan01"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"pragyan01"},"content":"            case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"pragyan01"},"content":"                sayEvent(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"pragyan01"},"content":"                saveData(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"pragyan01"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"pragyan01"},"content":"                sayDelete(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"pragyan01"},"content":"                saveData(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"pragyan01"},"content":"            case \"find\":","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"pragyan01"},"content":"                sayFind(input);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"pragyan01"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line + \"\\n☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"pragyan01":69}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import java.io.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":"import static duke.TaskList.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":" * Class responsible for saving and loading of tasks to/from a local file.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"     * Writes tasks in Arraylist and saves to local file in offline storage.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"     * @param t storing all tasks in the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"    public static void saveData(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"            String path \u003d new File(\"userData.txt\").getAbsolutePath();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"            FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"            PrintWriter pw \u003d new PrintWriter(fw, false);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"            pw.flush();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"            pw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"            fw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"                String input \u003d t.get(i).toSave() + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"                Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"ERROR: Could not write to file\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"     * Method that loads the offline txt file tasks into the bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"     * @throws FileNotFoundException if file does not exist in path specified","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"    public static void loadData() throws FileNotFoundException, DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"        String path \u003d new File(\"userData.txt\").getAbsolutePath();","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"pragyan01"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"pragyan01"},"content":"        Scanner scan \u003d new Scanner(f);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"pragyan01"},"content":"        String taskType;","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"pragyan01"},"content":"        String s;","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"pragyan01"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"pragyan01"},"content":"        while(scan.hasNext())","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"pragyan01"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"pragyan01"},"content":"            String data \u003d scan.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"pragyan01"},"content":"            String[] arrayString \u003d data.split(\" \\\\| \");","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"pragyan01"},"content":"            String[] arrayString2 \u003d arrayString[0].split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"pragyan01"},"content":"            taskType \u003d arrayString2[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"pragyan01"},"content":"            s \u003d Integer.toString(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"pragyan01"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"pragyan01"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"pragyan01"},"content":"                sayTodo(arrayString[0]);","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"pragyan01"},"content":"                if (arrayString[1].equals(\"1\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"pragyan01"},"content":"                    sayDone(s);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"pragyan01"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"pragyan01"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"pragyan01"},"content":"                sayDeadline(arrayString[0]);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"pragyan01"},"content":"                if (arrayString[1].equals(\"1\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"pragyan01"},"content":"                    sayDone(s);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"pragyan01"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"pragyan01"},"content":"            case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"pragyan01"},"content":"                sayEvent(arrayString[0]);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"pragyan01"},"content":"                if (arrayString[1].equals(\"1\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"pragyan01"},"content":"                    sayDone(s);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"pragyan01"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"pragyan01"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"pragyan01"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"pragyan01"},"content":"            taskNumber++;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"pragyan01"},"content":"        scan.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"pragyan01":87}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":" * Task class used by bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":"public class Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"    protected String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"     * Constructor of task","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"     * Return status of task as string.","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"     * @return String status of task","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"     * Setter method of task","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"     * Getter method of task.","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"     * @return String description of task","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"pragyan01"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"pragyan01"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"pragyan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"pragyan01"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"pragyan01"},"content":"        return \"taskType\" + description + \" | \" + done;","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pragyan01":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" * Class that contains methods to handle respective user inputs.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"    public static String line \u003d \"------------------------------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"    public static ArrayList\u003cTask\u003e t \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"    public static int quitFlag \u003d 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"     * Method that updates quitFlag to 1 when user wants to terminate the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"    public static void updateQuitFlag() {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"        quitFlag \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"     * Terminates the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message if bye command not entered in correct format by user","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"    public static void sayBye(String input) throws DukeException{","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"        if (input.length() !\u003d 3) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"            throw new DukeException(\"You didn\u0027t say bye properly, but i get it! Adios for now!\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\n\" + \"Ciao! More tasks to do later!\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"            updateQuitFlag();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"     * Prints out all the tasks, their types and statuses stored by the bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message when user asks to print list but is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"pragyan01"},"content":"    public static void sayList() throws DukeException{","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"pragyan01"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"pragyan01"},"content":"            throw new DukeException(line + \"\\n\" + \"Hold your horses, you didn\u0027t even tell me about your wishes yet!\" + \"\\n\" + line + \"\\n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"pragyan01"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"pragyan01"},"content":"                System.out.println((i + 1) + \". \" + t.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"pragyan01"},"content":"     * Marks a specific task stored as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives containing the position of task","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message when user enters task number in array out of bounds","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message when user tries to mark a task as done which doesn\u0027t exist","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"pragyan01"},"content":"    public static void sayDone(String input) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"pragyan01"},"content":"        if (taskCount !\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"pragyan01"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"pragyan01"},"content":"                String taskNumber \u003d input.substring(input.lastIndexOf(\" \") + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"pragyan01"},"content":"                int finalTaskNumber \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"pragyan01"},"content":"                t.get(finalTaskNumber).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line + \"\\n\" + \"Kudos! One less thing to stress about!\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"pragyan01"},"content":"                System.out.println(\"  \" + t.get(finalTaskNumber).toString() + \"\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"pragyan01"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line + \"\\nInvalid task number entered! Please try again!\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"pragyan01"},"content":"            throw new DukeException(\"Calm down, we haven\u0027t even started listing out tasks yet!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"pragyan01"},"content":"     * Adds a todo task.","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"pragyan01"},"content":"    public static void sayTodo(String input) {","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"pragyan01"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\nDid you forget what you were gonna say?\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"pragyan01"},"content":"            int endIndex \u003d input.length();","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"pragyan01"},"content":"            String taskName \u003d input.substring(5, endIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"pragyan01"},"content":"            t.add(taskCount, new Todo(taskName));","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"That\u0027s the spirit! I\u0027ve added this task:\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"pragyan01"},"content":"            System.out.println(t.get(taskCount).toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"pragyan01"},"content":"            taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"\\nNow you have \" + taskCount + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"pragyan01"},"content":"     * Adds a deadline task.","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"pragyan01"},"content":"    public static void sayDeadline(String input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"pragyan01"},"content":"        if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\nAre you kidding me? You didn\u0027t even tell me what you were supposed to do!\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"pragyan01"},"content":"        } else if (!input.contains(\"/\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\nAre you kidding me? You forgot to tell me your deadline again?\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"pragyan01"},"content":"            int endIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"pragyan01"},"content":"            String taskName \u003d input.substring(9, endIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"pragyan01"},"content":"            int endIndex2 \u003d input.length();","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"pragyan01"},"content":"            String by \u003d input.substring(endIndex + 4, endIndex2);","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"pragyan01"},"content":"            LocalDate dateTime \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"pragyan01"},"content":"            t.add(taskCount, new Deadline(taskName, by));","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"Deadline Entered: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"pragyan01"},"content":"            System.out.println(t.get(taskCount).toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"pragyan01"},"content":"            taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"\\nNow you have \" + taskCount + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"pragyan01"},"content":"     * Adds a event task.","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"pragyan01"},"content":"    public static void sayEvent(String input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"pragyan01"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\nAre you kidding me? You didn\u0027t even tell me what you were supposed to do!\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"pragyan01"},"content":"        } else if (!input.contains(\"/\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\nAre you kidding me? You forgot to tell me your event timing again?\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"pragyan01"},"content":"            int endIndex \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"pragyan01"},"content":"            String taskName \u003d input.substring(6, endIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"pragyan01"},"content":"            int endIndex2 \u003d input.length();","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"pragyan01"},"content":"            String at \u003d input.substring(endIndex + 4, endIndex2);","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"pragyan01"},"content":"            t.add(taskCount, new Event(taskName, at));","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"pragyan01"},"content":"            System.out.println(t.get(taskCount).toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"pragyan01"},"content":"            taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"\\nNow you have \" + taskCount + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"pragyan01"},"content":"     * Deletes a specific task.","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives containing the position of task","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message when user deletes task number in array out of bounds","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"pragyan01"},"content":"    public static void sayDelete(String input) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"pragyan01"},"content":"        if (taskCount !\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"pragyan01"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"pragyan01"},"content":"                String taskNumber \u003d input.substring(input.lastIndexOf(\" \") + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"pragyan01"},"content":"                int finalTaskNumber \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"pragyan01"},"content":"                Task taskRemoved \u003d t.get(finalTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"pragyan01"},"content":"                t.remove(finalTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"pragyan01"},"content":"                taskCount--;","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line + \"\\n\" + \"One more thing outta your life as always...\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"pragyan01"},"content":"                System.out.println(\"  \" + taskRemoved.toString() + \"\\n\" + \"\\nYou now have \" + taskCount + \" tasks left.\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"pragyan01"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"pragyan01"},"content":"                System.out.println(line + \"\\nInvalid task number entered! Please try again!\\n\" + line);","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"pragyan01"},"content":"            throw new DukeException(\"Calm down, we don\u0027t even have tasks yet!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"pragyan01"},"content":"     * Finds and prints a specific task.","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"pragyan01"},"content":"     * @param input that user gives containing the position of task","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"pragyan01"},"content":"    public static void sayFind(String input){","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"pragyan01"},"content":"        String[] arrayString \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"pragyan01"},"content":"        String keyWord \u003d arrayString[1];","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"pragyan01"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"pragyan01"},"content":"        ArrayList\u003cString\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"pragyan01"},"content":"        for (Task task : t) {","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"pragyan01"},"content":"            if (task.toString().contains(keyWord)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"pragyan01"},"content":"                filteredList.add(task.toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"pragyan01"},"content":"                matchCount++;","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"pragyan01"},"content":"        if (matchCount !\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"\\n\" + \"Lucky for you, i\u0027m really good at digging through your mess:\" + \"\\n\" + line);","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"pragyan01"},"content":"            for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"pragyan01"},"content":"                System.out.println((i + 1) + \". \" + filteredList.get(i) + \"\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"pragyan01"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"pragyan01"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"pragyan01"},"content":"            System.out.println(\"Too bad i couldn\u0027t find anything similar. Let\u0027s not get too ambitious and just stick to the tasks on hand shall we?\" + \"\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"pragyan01":205}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":" * Class that is used in order to create a new todo task.","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"     * Constructor to instantiate new todo object","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"pragyan01"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"pragyan01"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"pragyan01"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"pragyan01"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"pragyan01"},"content":"        return \"todo \" + description + \" | \" + done;","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"pragyan01":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"pragyan01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"pragyan01"},"content":"import static duke.Storage.loadData;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"pragyan01"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pragyan01"},"content":" * Class responsible for displaying the welcome messages by the bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"pragyan01"},"content":" *","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pragyan01"},"content":" * @author pragyan01","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pragyan01"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"pragyan01"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"pragyan01"},"content":"    public static String line \u003d \"------------------------------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"    public static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"pragyan01"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"pragyan01"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"pragyan01"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"pragyan01"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"pragyan01"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pragyan01"},"content":"     * Method that prints a greeting and loads previously saved tasks into the bot.","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pragyan01"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"pragyan01"},"content":"     * @throws DukeException custom error message if file not found","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"pragyan01"},"content":"    public static void start() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"pragyan01"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"pragyan01"},"content":"            loadData();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"Hello! I\u0027m Duke.\\n\" + logo + \"What can i do for you?\\n\" + line);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"pragyan01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"\\n\" + \"Saved file could not be found. I\u0027ve used one of your wishes to create a new file for you! Thank me later.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"pragyan01"},"content":"            System.out.println(line + \"Hello! I\u0027m Duke.\\n\" + logo + \"What can i do for you?\\n\" + line);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"pragyan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"pragyan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"pragyan01"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"pragyan01":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pragyan01"},"content":"","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"pragyan01":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"pragyan01"},"content":"    pause","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"pragyan01"},"content":"pause","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"pragyan01":2,"-":21}}]
