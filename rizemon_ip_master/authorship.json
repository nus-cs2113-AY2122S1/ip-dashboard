[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"**Task Monitor** (**`taskmon`**) is a **Command Line Interface (CLI) app to assist in the management of your everyday tasks with a hacker-like feel**. If you are curious about hacking, and you type fast like a hacker, get ready to immerse yourself in the world of hacking as you compromise the `taskmon` chatbot and use it as your personal task manager!","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"  * [Add a task: `todo`, `deadline`, `event`](#add-a-task-todo-deadline-event)","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"  * [List all tasks: `list`](#list-all-tasks-list)","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"  * [Mark a task as completed: `done`](#mark-a-task-as-completed-done)","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"  * [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"  * [Find tasks: `find`](#find-tasks-find)","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"  * [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"  * [Save the data to a save file](#save-the-data-to-a-save-file)","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"  * [Edit the save file](#edit-the-save-file)","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"## Quick start ","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"----","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"1. Ensure that you have `Java 11` or above installed on your machine.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"2. Download the latest copy of `taskmon.jar` from [here](https://github.com/rizemon/ip/releases/latest).","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"3. Create or find a suitable directory and move `taskmon.jar` into it.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"4. Open a command prompt by executing `cmd.exe` and navigate to the directory mentioned in the previous step.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"5. Execute the command `java -jar  taskmon.jar` and you see something like this:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"![](taskmon1.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"[X] Error reading save file! Starting from clean slate...","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"[*] Detecting chat-bot version...","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"[+] Chat-bot version is *VULNERABLE*!","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"[*] Hacking into the chat-bot...","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"[*] Escalating privileges...","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"[+] Interactive shell spawned. You can now manipulate the chat-bot directly!","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"### Add a task: `todo`, `deadline`, `event`","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"A task is injected into `taskmon`\u0027s memory. Three different types of tasks are supported.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"#### Add a Todo: `todo`","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"A Todo task contains only a task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"Format: `todo \u003cTask Description\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"Example usage and outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"![](taskmon2.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ todo my homework","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"[+] Task added:","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"   [T][ ] my homework","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"[\u003d] You now have 1 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"#### Add a Deadline: `deadline`","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"A Deadline task contains a task description and the timestamp that indicate when the task needs to be done by.","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"Format: `deadline \u003cTask Description\u003e /by \u003cTimestamp\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"\u003e 💡 `\u003cTimestamp\u003e` needs to be in the format of `yyyy-MM-dd \u003cTime\u003e` or `dd/MM/yyyy \u003cTime\u003e`. If no `\u003cTime\u003e` is supplied, it will be assumed to be `0000`.  ","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"Example usage and outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"![](taskmon3.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ deadline assignment /by 2021-10-01 2359","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"[+] Task added:","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"   [D][ ] assignment (by: Oct 1 2021 2359)","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"[\u003d] You now have 1 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"#### Add an Event: `event`","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"A Event task contains a task description and the timestamp that indicate the time of occurrence of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"Format: `event \u003cTask Description\u003e /at \u003cTimestamp\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"\u003e 💡 `\u003cTimestamp\u003e` needs to be in the format of `yyyy-MM-dd \u003cTime\u003e` or `dd/MM/yyyy \u003cTime\u003e`. If no `\u003cTime\u003e` is supplied, it will be assumed to be `0000`.","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"Example usage and outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"![](taskmon4.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ event midterms /at 2021-10-01 1800","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"[+] Task added:","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"   [E][ ] midterms (at: Oct 1 2021 1800)","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"[\u003d] You now have 1 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"### List all tasks: `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"Prints all the tasks currently in `taskmon`\u0027s memory.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"Format: `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"![](taskmon5.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ list","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"[*] Here are your list of tasks:","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"   1.[T][ ] my homework","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"   2.[D][ ] assignment (by: Oct 1 2021 2359)","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"   3.[E][ ] midterms (at: Oct 1 2021 1800)","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"### Mark a task as completed: `done`","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"Indicate a task as completed after you have finished it.","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"Format: `done \u003cTask Index\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"![](taskmon6.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ done 1","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"[+] Task marked as done:","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"   [T][X] my homework","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"### Delete a task: `delete`","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"Delete a task from `taskmon`\u0027s memory.","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"Format: `delete \u003cTask Index\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"![](taskmon7.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ delete 1","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"[+] Task removed:","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"   [T][X] my homework","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"[\u003d] You now have 3 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"### Find tasks: `find`","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"Prints all the tasks in `taskmon`\u0027s memory whose descriptions contain the given keyword.","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"Format: `find \u003cKeyword\u003e`","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"![](taskmon8.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ find cs2113","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"[*] Here are the matching tasks in your list:","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"   1.[T][ ] cs2113\u0027s assignment","lastModifiedDate":"2021-09-18"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"### Exit the program: `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"Terminates the `taskmon` program.","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"Format: `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"![](taskmon9.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"\u003c!--```","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"[root@taskmon ~]$ bye","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"[*] Deleting traces of compromise...","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"[+] Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"```--\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"### Save the data to a save file","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"The tasks in `taskmon`\u0027s memory are automatically saved to a save file `[JAR_LOCATION]/data/duke.txt` after the execution of every command.","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"rizemon"},"content":"### Edit the save file","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":185,"author":{"gitId":"rizemon"},"content":"Advanced users are able to update the tasks directly by editing the save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"rizemon"},"content":"\u003e ❗ Note that if the save file is detected to be corrupted or does not conform to `taskmon`\u0027s save file format, it will still run without loading from it.","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"rizemon"},"content":"## FAQ","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"rizemon"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"rizemon"},"content":"**Question**: What happens if there is no save file in the directory?  ","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"rizemon"},"content":"**Answer**: `taskmon` will start from a clean slate and will automatically create one after running the first command.","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"rizemon"},"content":"**Question**: How can I share my save file to another computer?  ","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"rizemon"},"content":"**Answer**:  Install `taskmon` on that computer and place the save file at `[JAR_LOCATION]/data/duke.txt` before running `taskmon`.","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"rizemon"},"content":"## Command Summary","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"rizemon"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":203,"author":{"gitId":"rizemon"},"content":"| Action                      | Format                                                                                                                       | Example |","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"rizemon"},"content":"| --------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ------- |","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"rizemon"},"content":"| Add a task                  | `todo \u003cTask Description\u003e` \u003cbr\u003e\u003cbr\u003e `deadline \u003cTask Description\u003e /by \u003cTimestamp\u003e` \u003cbr\u003e\u003cbr\u003e `event \u003cTask Description\u003e /at \u003cTimestamp\u003e` | `todo my homework` \u003cbr\u003e\u003cbr\u003e `deadline assignment /by 2021-10-01 2359` \u003cbr\u003e\u003cbr\u003e `event midterms /at 2021-10-01 1800`  ","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"rizemon"},"content":"| List all tasks              | `list` | `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"rizemon"},"content":"| Mark task as \u003cbr\u003e completed | `done \u003cTask Index\u003e` | `done 1` |","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"rizemon"},"content":"| Delete a task               | `delete \u003cTask Index\u003e` | `delete 1` |","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"rizemon"},"content":"| Find tasks                  | `find \u003cKeyword\u003e ` | `find cs2113t` |","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"rizemon"},"content":"| Exit the program            | `bye` | `bye` |","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":212,"author":{"gitId":"rizemon"},"content":"1. testing","lastModifiedDate":"2021-11-14"},{"lineNumber":213,"author":{"gitId":"rizemon"},"content":"    a. testing","lastModifiedDate":"2021-11-14"},{"lineNumber":214,"author":{"gitId":"rizemon"},"content":"2. testing","lastModifiedDate":"2021-11-14"},{"lineNumber":215,"author":{"gitId":"rizemon"},"content":"    b. testing","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"rizemon":199,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import duke.command.CommandExecutor;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" * The Duke application serves to aid users in the management of their tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"     * Instantiates the Duke application.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public Duke() {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"        commandExecutor \u003d new CommandExecutor();","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"     * Starts the Duke application.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"            String rawLine \u003d ui.readInput();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"            commandExecutor.execute(rawLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        } while (!commandExecutor.isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rizemon":37,"-":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * The Command class handles the validation of a supported command and printing of its usage.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    /* The supported command */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"    private String command;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"     * Instantiates a new supported command.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"     * @param command Command to support.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public Command(String command) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        return command;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"     * Returns the command syntax of the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"     * @return Command syntax.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    public String getUsage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s\", command);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"     * Checks if the given input is indicating that the user is attempting to run this command.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     * @return True if the user is trying to run this command.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    public boolean isCommand(String inputLine) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        boolean isExactCommand \u003d strippedLine.equals(command);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        boolean isStartWithCommand \u003d strippedLine.startsWith(command + \" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        return isExactCommand || isStartWithCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"     * Checks if the given input is a valid command.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * @return True if the input is valid.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    public boolean isValidCommandLine(String inputLine) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        return strippedLine.equals(command);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"     * Returns the parsed values (if any) from the given command line.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to parse.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     * @return List of parsed values.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    public String[] extractCommandLineValues(String inputLine) {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        return new String[] {};","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":66}},{"path":"src/main/java/duke/command/CommandExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import duke.file.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import duke.exception.CommandException;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":" * The CommandExecutor class deals with the execution of supported commands.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"public class CommandExecutor {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    /* Indexes used in referencing results from command execution */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    private final static int ARGUMENT_VALUE_INDEX \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    private final static int FLAG_VALUE_INDEX \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    /* Supported commands */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    private final static String END_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    private final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    private final static String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    private final static String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    private final static String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    private final static String ADD_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    private final static String ADD_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    private final static String ADD_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    /* Names of supported arguments/flags */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    private final static String ARGUMENT_TASK_INDEX \u003d \"Task Index\";","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    private final static String ARGUMENT_TASK_DESCRIPTION \u003d \"Task Description\";","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    private final static String ARGUMENT_TASK_KEYWORD \u003d \"Keyword\";","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    private final static String FLAG_TASK_TIMESTAMP \u003d \"Timestamp\";","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    private final static String FLAG_DEADLINE_OPTION \u003d \"by\";","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    private final static String FLAG_EVENT_OPTION \u003d \"at\";","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    /* Names of used files and directories */","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    private final static String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    private final static String DATA_PATH \u003d \"data\";","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    /* Used to store tasks */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    private TaskList taskManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    /* Used to store supported commands */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    private Command[] commandList;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    /* Used to perform parsing operations */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    /* Used to save tasks to file system */","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"    private Storage fileManager;","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    /* Used to print meaningful messages */","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"    /* State of whether interaction has terminated. True if interaction has terminated. */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"     * Instantiates a new handler for command executions.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"    public CommandExecutor() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        isExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        fileManager \u003d new Storage(DATA_PATH);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        commandList \u003d new Command[] {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"                new Command(END_COMMAND),","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"                new Command(LIST_COMMAND),","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"                new CommandWithArgument(DONE_COMMAND, ARGUMENT_TASK_INDEX),","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"                new CommandWithArgument(DELETE_COMMAND, ARGUMENT_TASK_INDEX),","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"                new CommandWithArgument(FIND_COMMAND, ARGUMENT_TASK_KEYWORD),","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"                new CommandWithArgument(ADD_TODO_COMMAND, ARGUMENT_TASK_DESCRIPTION),","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"                new CommandWithFlag(ADD_DEADLINE_COMMAND, ARGUMENT_TASK_DESCRIPTION,","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"                        FLAG_DEADLINE_OPTION, FLAG_TASK_TIMESTAMP),","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"                new CommandWithFlag(ADD_EVENT_COMMAND, ARGUMENT_TASK_DESCRIPTION,","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"                        FLAG_EVENT_OPTION, FLAG_TASK_TIMESTAMP)","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        parser \u003d new Parser(commandList);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"            taskManager \u003d fileManager.readTaskManagerFromFile(FILE_PATH);","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        } catch (IOException | DateTimeParseException err) {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"            ui.printFileReadError();","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"            taskManager \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"        return isExit;","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"     * Validates the given input string before executing it.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"    public void execute(String inputLine) {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"            runCommandUsingInput(inputLine);","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"        } catch (CommandException err) {","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"            ui.printError(err.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"        } catch (NumberFormatException | DateTimeParseException err) {","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"            ui.printConvertError();","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"            ui.printFileUpdateError();","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"     * Performs execution of the given command using the given input string. After every successful command execution,","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"     * state of the task manager is saved to a file.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to read from.","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"     * @throws CommandException If an illegal command is executed or there is an error parsing the user\u0027s command.","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"     * @throws IOException      If a file-related operation errors.","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"    private void runCommandUsingInput(String inputLine) throws CommandException, IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"        Command command \u003d parser.findCommand(inputLine);","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"        String[] commandLineValues \u003d parser.parseCommandLineValues(command, inputLine);","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"        switch (command.getCommand()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"            executeListCommand();","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"        case DONE_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"            executeDoneCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"            executeDeleteCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"            executeFindCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"        case ADD_TODO_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"            executeTodoCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"        case ADD_DEADLINE_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"            executeDeadlineCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"        case ADD_EVENT_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"            executeEventCommand(commandLineValues);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"        case END_COMMAND:","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"            executeExitCommand();","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(\"Illegal operation\");","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"        fileManager.writeTaskManagerToFile(taskManager, FILE_PATH);","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to print the list of current tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"    private void executeListCommand() {","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"        taskManager.printTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to mark a task as completed.","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"    private void executeDoneCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"        int taskIndex \u003d Integer.parseInt(commandLineValues[ARGUMENT_VALUE_INDEX]);","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"        taskManager.complete(taskIndex);","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to delete a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"    private void executeDeleteCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"        int taskIndex \u003d Integer.parseInt(commandLineValues[ARGUMENT_VALUE_INDEX]);","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"        taskManager.deleteTask(taskIndex);","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to print a selected list of tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"rizemon"},"content":"    private void executeFindCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"rizemon"},"content":"        String keyword \u003d commandLineValues[ARGUMENT_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"rizemon"},"content":"        taskManager.printFilteredTasks(keyword);","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to add a new Todo to itself.","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"rizemon"},"content":"    private void executeTodoCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"rizemon"},"content":"        String taskDescription \u003d commandLineValues[ARGUMENT_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"rizemon"},"content":"        Todo newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"rizemon"},"content":"        taskManager.addTask(newTask);","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to add a new Deadline to itself.","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"rizemon"},"content":"    private void executeDeadlineCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"rizemon"},"content":"        String taskDescription \u003d commandLineValues[ARGUMENT_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"rizemon"},"content":"        String taskDateTime \u003d commandLineValues[FLAG_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"rizemon"},"content":"        Deadline newTask \u003d new Deadline(taskDescription, taskDateTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"rizemon"},"content":"        taskManager.addTask(newTask);","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"rizemon"},"content":"     * Tells the task manager to add a new Event to itself.","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"rizemon"},"content":"     * @param commandLineValues List of values parsed from the user\u0027s command.","lastModifiedDate":"2021-09-21"},{"lineNumber":214,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"rizemon"},"content":"    private void executeEventCommand(String[] commandLineValues) {","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"rizemon"},"content":"        String taskDescription \u003d commandLineValues[ARGUMENT_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"rizemon"},"content":"        String taskDateTime \u003d commandLineValues[FLAG_VALUE_INDEX];","lastModifiedDate":"2021-09-21"},{"lineNumber":218,"author":{"gitId":"rizemon"},"content":"        Event newTask \u003d new Event(taskDescription, taskDateTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"rizemon"},"content":"        taskManager.addTask(newTask);","lastModifiedDate":"2021-09-21"},{"lineNumber":220,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":223,"author":{"gitId":"rizemon"},"content":"     * Sets the program to the exited state.","lastModifiedDate":"2021-09-21"},{"lineNumber":224,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":225,"author":{"gitId":"rizemon"},"content":"    private void executeExitCommand() {","lastModifiedDate":"2021-09-21"},{"lineNumber":226,"author":{"gitId":"rizemon"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-09-21"},{"lineNumber":227,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":228,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":229}},{"path":"src/main/java/duke/command/CommandWithArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The CommandWithArgument class extends the Command class by allowing the supported command to have an argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"public class CommandWithArgument extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    /* Name of the argument */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    private String argumentName;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"     * Instantiates a new supported command that has an argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"     * @param command      Command to support.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"     * @param argumentName Name of the argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public CommandWithArgument(String command, String argumentName) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        super(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        this.argumentName \u003d argumentName;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public String getArgumentName() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        return argumentName;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"     * Returns the command syntax of the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"     * @return Command syntax.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    public String getUsage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s \u003c%s\u003e\", super.getCommand(), argumentName);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"     * Checks if the given input is a valid command.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"     * @return True if the input is valid.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    public boolean isValidCommandLine(String inputLine) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d strippedLine.split(\" \", -1);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        String[] argumentTokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        String argumentValue \u003d String.join(\" \", argumentTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        boolean isStartWithCommand \u003d strippedLine.startsWith(super.getCommand() + \" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        boolean isNonEmptyArgument \u003d argumentValue.length() \u003e 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        return isStartWithCommand \u0026\u0026 isNonEmptyArgument;","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"     * Returns the parsed values from the argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to parse.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     * @return List of parsed values.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"    public String[] extractCommandLineValues(String inputLine) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d strippedLine.split(\" \", -1);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        String[] argumentTokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"        String argumentValue \u003d String.join(\" \", argumentTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        return new String[] {argumentValue};","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":72}},{"path":"src/main/java/duke/command/CommandWithFlag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The CommandWithFlag class extends the CommandWithArgument class by allowing the supported command to have an","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" * additional flag.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"public class CommandWithFlag extends CommandWithArgument {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    /* Used to denote a flag */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    private final static String FLAG_PREFIX \u003d \"/\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    /* Default index if element cannot be found */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    private final static int NOT_FOUND \u003d -1;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    /* Option to indicate the flag on the command line */","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    private String flagOption;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    /* Name of the flag */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    private String flagName;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"     * Instantiates a new supported command that has an argument and a flag.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"     * @param command      Command to support.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     * @param argumentName Name of the argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"     * @param flagOption   Option to indicate the flag on the command line.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"     * @param flagName     Name of the flag.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    public CommandWithFlag(String command, String argumentName, String flagOption, String flagName) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        super(command, argumentName);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        this.flagOption \u003d flagOption;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        this.flagName \u003d flagName;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     * Returns the command syntax of the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"     * @return Command syntax.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public String getUsage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s \u003c%s\u003e %s%s \u003c%s\u003e\", super.getCommand(), super.getArgumentName(), FLAG_PREFIX, flagOption,","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"                flagName);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"     * Checks if the given input is a valid command.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     * @return True if the input is valid.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"    public boolean isValidCommandLine(String inputLine) {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d strippedLine.split(\" \", -1);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        int flagIndex \u003d findFlagIndex(tokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        if (flagIndex \u003d\u003d NOT_FOUND) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        String[] argumentTokens \u003d Arrays.copyOfRange(tokens, 1, flagIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        String[] flagTokens \u003d Arrays.copyOfRange(tokens, flagIndex + 1, tokens.length);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        String argumentValue \u003d String.join(\" \", argumentTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        String flagValue \u003d String.join(\" \", flagTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        boolean isStartWithCommand \u003d strippedLine.startsWith(super.getCommand() + \" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        boolean isNonEmptyArgument \u003d argumentValue.length() \u003e 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        boolean isNonEmptyFlag \u003d flagValue.length() \u003e 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        return isStartWithCommand \u0026\u0026 isNonEmptyArgument \u0026\u0026 isNonEmptyFlag;","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"     * Returns the parsed values from the argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to parse.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"     * @return List of parsed values.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"    public String[] extractCommandLineValues(String inputLine) {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d strippedLine.split(\" \", -1);","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"        int flagIndex \u003d findFlagIndex(tokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"        String[] argumentTokens \u003d Arrays.copyOfRange(tokens, 1, flagIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"        String[] flagTokens \u003d Arrays.copyOfRange(tokens, flagIndex + 1, tokens.length);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"        String argumentValue \u003d String.join(\" \", argumentTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"        String flagValue \u003d String.join(\" \", flagTokens);","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"        return new String[] {argumentValue, flagValue};","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"     * Returns the index of element containing the flag option.","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"     * @param tokens List of tokens to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"     * @return Index of the flag option. NOT_FOUND if cannot be found.","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"    private int findFlagIndex(String[] tokens) {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"            if (tokens[i].equals(FLAG_PREFIX + flagOption)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"                return i;","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"        return NOT_FOUND;","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":111}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import duke.exception.CommandException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The Parser class deals with understanding the command entered by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    /* Used to store supported commands */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    private Command[] commandList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    public Parser(Command[] commandList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"        this.commandList \u003d commandList;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"     * Finds the correct command according to the given input string.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to search.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"     * @return Command that user is trying to run.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"     * @throws CommandException If unable to detect the command in the given input.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public Command findCommand(String inputLine) throws CommandException {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        for (Command command : commandList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"            if (command.isCommand(inputLine)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"                return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        throw new CommandException(\"Command not found\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"     * Parses the user\u0027s command and returns the extracted values.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     * @param command   Command that user is trying to run.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     * @param inputLine Raw input line to parse.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     * @return Array containing the extracted argument and flag values.","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"     * @throws CommandException If unable to correctly parse user\u0027s command and arguments.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    public String[] parseCommandLineValues(Command command, String inputLine) throws CommandException {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        if (!command.isValidCommandLine(inputLine)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(\"Usage: \" + command.getUsage());","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        return command.extractCommandLineValues(inputLine);","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"rizemon":48}},{"path":"src/main/java/duke/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error relating to command execution occurs.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class CommandException extends Exception{","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/duke/exception/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error relating to parsing of tasks occurs.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class TaskException extends Exception{","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public TaskException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/duke/file/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.file;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import duke.exception.TaskException;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":" * The Storage class deals with file-related operations.","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"public class Storage {","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    /* List of Task type icons */","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    private static final String TODO_ICON \u003d \"T\";","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    private static final String DEADLINE_ICON \u003d \"D\";","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    private static final String EVENT_ICON \u003d \"E\";","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    /* Constants used for parsing */","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    private static final int FIELD_COUNT \u003d 4;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    private static final int TASK_STATUS_INDEX \u003d 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    private static final int TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    private static final int TASK_OTHERS_INDEX \u003d 3;","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    private static final String DELIMITER \u003d \"|\";","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    private static final String ESCAPED_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    private static final String COMPLETE_NUMBER_STATUS \u003d \"1\";","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    private static final String INCOMPLETE_NUMBER_STATUS \u003d \"0\";","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    private static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    /* Name of directory where files are saved to */","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    private String dataDirPath;","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"     * Instantiates a new file storage handler.","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    public Storage(String dataDir) {","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        this.dataDirPath \u003d dataDir;","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"     * Overwrites the file at the given file path with the contents of the contents of the given task manager.","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     * @param taskManager Task Manager to write to the file.","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"     * @param filePath    Path of the file to write to.","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"     * @throws IOException If a file-related operation has errors.","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    public void writeTaskManagerToFile(TaskList taskManager, String filePath) throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        File dataDir \u003d new File(dataDirPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        dataDir.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        FileWriter writer \u003d new FileWriter(new File(dataDirPath, filePath));","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"            try {","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"                writer.write(convertTaskToFileString(task) + NEW_LINE);","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"            } catch (TaskException err) {","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"                // if unable to stringify the task, skip it.","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        writer.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"     * Returns the task manager parsed from the given file.","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"     * @param filePath File to parse from.","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"     * @return Task Manager that is extracted from the given file.","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"     * @throws IOException If a file-related operation has errors.","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"    public TaskList readTaskManagerFromFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"        File file \u003d new File(dataDirPath, filePath);","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"            throw new FileNotFoundException(String.format(\"%s does not exist\", filePath));","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"            throw new IOException(String.format(\"%s is not a file\", filePath));","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"            try {","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"                String line \u003d in.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"                Task newTask \u003d convertFileStringToTask(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"                taskList.add(newTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"            } catch (TaskException err) {","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"                // if unable to parse the line, skip it.","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"        in.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"     * Returns the string representation of a given task for saving into a file.","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"     * @param task Task object to represent as a string.","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"     * @return The string representation.","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"     * @throws TaskException If given task is of unsupported task type.","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"    private static String convertTaskToFileString(Task task) throws TaskException {","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"        Todo todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"        Deadline deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"        Event event;","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"        String output;","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"        String numberStatus \u003d task.isCompleted() ? COMPLETE_NUMBER_STATUS : INCOMPLETE_NUMBER_STATUS;","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"        switch (task.getTaskIcon()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"        case TODO_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"            todo \u003d (Todo) task;","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"            output \u003d String.join(DELIMITER, todo.getTaskIcon(), numberStatus, todo.getDescription(), \"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"        case DEADLINE_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"            deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"            output \u003d String.join(DELIMITER, deadline.getTaskIcon(), numberStatus, deadline.getDescription(),","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"                    deadline.getDateTime());","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"        case EVENT_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"            event \u003d (Event) task;","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"            output \u003d String.join(DELIMITER, event.getTaskIcon(), numberStatus, event.getDescription(),","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"                    event.getDateTime());","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"            throw new TaskException(\"Unknown task\");","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"        return output;","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"     * Returns the task parsed from the given string.","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"     * @param inputLine String to parse.","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"     * @return Task object converted from the string.","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"     * @throws TaskException If there is a problem parsing the given string.","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"    public static Task convertFileStringToTask(String inputLine) throws TaskException {","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"        String strippedLine \u003d inputLine.strip();","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d strippedLine.split(ESCAPED_DELIMITER, -1);","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"        if (tokens.length !\u003d FIELD_COUNT) {","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"            throw new TaskException(\"Invalid number of fields\");","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"        String type \u003d tokens[TASK_TYPE_INDEX].strip();","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"        String status \u003d tokens[TASK_STATUS_INDEX].strip();","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"        String description \u003d tokens[TASK_DESCRIPTION_INDEX].strip();","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"        String others \u003d tokens[TASK_OTHERS_INDEX].strip();","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"        Task newTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"        switch (type) {","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"        case TODO_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"        case DEADLINE_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"            newTask \u003d new Deadline(description, others);","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"        case EVENT_ICON:","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"            newTask \u003d new Event(description, others);","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"            throw new TaskException(\"Unknown task type\");","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"        switch (status) {","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"        case COMPLETE_NUMBER_STATUS:","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"            newTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"        case INCOMPLETE_NUMBER_STATUS:","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"rizemon"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"            throw new TaskException(\"Invalid status\");","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"rizemon"},"content":"        return newTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"rizemon":186}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" * The Deadline class manages a task that need to be done before a specific date/time.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    /* Indexes used in extracting date and time */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    private static final int DATE_INDEX \u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    private static final int TIME_INDEX \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    /* Default time used when time cannot be extracted or found */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    private static final String DEFAULT_TIME \u003d \"0000\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    /* Date of deadline */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    /* Timestamp of deadline */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    protected String time;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"     * Initialises a new incomplete task with a deadline.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"     * @param dateTime    When the task need to be done by.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        date \u003d extractDate(dateTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        time \u003d extractTime(dateTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     * Returns the description along with the date time of the deadline.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     * @return Full description of task.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    public String getFullDescription() {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        String dateTime \u003d String.format(\"%s %s\", date.format(formatter), time);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s (by: %s)\", super.getDescription(), dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"     * Returns the date and time as a string.","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * @return String containing the date and time seperated by a space.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s %s\", date.format(formatter), time);","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"     * Returns the Deadline icon.","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     * @return Deadline icon.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        return \"D\";","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"     * Extracts the date from the given string.","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"     * @param dateTime String to extract from.","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"     * @return LocalDate representation of the date.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    private LocalDate extractDate(String dateTime) {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d dateTime.split(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-M-d\"))","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy\"))","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"                .toFormatter();","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        return LocalDate.parse(tokens[DATE_INDEX], formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"     * Extracts the time from the given string.","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"     * @param dateTime String to extract from.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"     * @return Timestamp of the extracted time.","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"    private String extractTime(String dateTime) {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"        String[] tokens \u003d dateTime.split(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"        if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"            return DEFAULT_TIME;","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"        return tokens[TIME_INDEX];","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":95}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The Event class manages a task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"public class Event extends Deadline {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"     * Initialises a new incomplete task with time of occurrence.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"     * @param dateTime    When the task is occurring at.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"     * Returns description along with the date time of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"     * @return Full description of task.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public String getFullDescription() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        String dateTime \u003d String.format(\"%s %s\", date.format(formatter), time);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        return String.format(\"%s (at: %s)\", super.getDescription(), dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"     * Returns the Event icon.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"     * @return Event icon.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        return \"E\";","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * The Task class manages the description and status of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    /* Contents of the task */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"    private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    /* State of the task. True if task is completed. */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"     * Initialises a new incomplete task.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        return isCompleted;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"     * Returns description along with other relevant information.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"     * @return Full description of task.","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    public String getFullDescription() {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        return description;","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"     * Returns the icon representing whether the task is completed.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"     * @return Status task icon.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * Returns the icon representing the type of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"     * @return Task icon.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        return \"?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     * Sets the task to the completed state.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rizemon":64}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" * The TaskManager class manages the list of tasks, including adding and printing.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"public class TaskList {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    /* List of tasks */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    /* Used to print meaningful messages */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"     * Initialises a new list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     * Initialises using an existing list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"     * @param taskList Existing list of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     * Returns a copy of the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     * @return List of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        return new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        boolean isEmpty \u003d taskList.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        if (isEmpty) {","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"            ui.printTaskListEmptyError();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListHeader();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListFormatted(taskList);","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"     * Adds the given task to the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     * @param task New task.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListAddMessage(taskList, task);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"     * Marks the task at the given index as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"     * @param taskIndex 1-Based index of selected task.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    public void complete(int taskIndex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"            ui.printTaskListNotFoundError();","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        Task taskSelected \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"        taskSelected.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListCompleteMessage(taskSelected);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"     * Removes the task at the given index.","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"     * @param taskIndex 1-Based index of selected task.","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"            ui.printTaskListNotFoundError();","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"            return;","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"        Task taskSelected \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"        taskList.remove(taskIndex - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListDeleteMessage(taskList, taskSelected);","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"     * Prints a list of tasks with descriptions containing the given keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"     * @param keyword String to search by.","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"    public void printFilteredTasks(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) taskList.stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"        boolean isEmpty \u003d filteredTasks.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"        if (isEmpty) {","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"            ui.printTaskListEmptyError();","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListFilterHeader();","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"        ui.printTaskListFormatted(filteredTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"     * Checks if the given index is valid.","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"     * @param taskIndex 1-Based index of selected task.","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"     * @return True if index is valid. False otherwise.","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"    private boolean isValidIndex(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"        boolean isNonPositiveIndex \u003d taskIndex \u003c\u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"        boolean isUnusedIndex \u003d taskIndex \u003e taskList.size();","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"        return !isNonPositiveIndex \u0026\u0026 !isUnusedIndex;","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rizemon":131}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * The Todo class manages a task that has no date/time attached to it.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"     * Initialises a new incomplete Todo.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"     * Returns the Todo icon.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"     * @return Todo icon.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        return \"T\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" * The Ui class deals with printing of messages and reading of user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    private final static String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    /* Name of chat-bot */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    private final static String BOT_NAME \u003d \"taskmon\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    /* List of chat-bot messages */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    private final static String WELCOME_MESSAGE \u003d \"\"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"            + \"[*] Detecting chat-bot version...\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"            + \"[+] Chat-bot version is *VULNERABLE*!\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"            + \"[*] Hacking into the chat-bot...\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"            + \"[*] Escalating privileges...\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            + \"[+] Interactive shell spawned. You can now manipulate the chat-bot directly!\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    private final static String BYE_MESSAGE \u003d \"[*] Deleting traces of compromise...\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"            + \"[+] Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    /* Used to read input from user */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    private Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"     * Prints the given string in between 2 horizontal lines.","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"     * @param section The string to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    private static void printSection(String section) {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        System.out.println(section);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"     * Prints the welcome message as a section.","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        printSection(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"     * Prints the bye message as a section.","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        printSection(BYE_MESSAGE);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"     * Prints the header for the list command.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    public void printTaskListHeader() {","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[*] Here are your list of tasks:\");","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"     * Prints the given list of tasks in a neatly formatted way.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"    public void printTaskListFormatted(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        Task task;","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"            task \u003d taskList.get(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"            output +\u003d String.format(\"   %d.[%s][%s] %s\\n\", i + 1, task.getTaskIcon(), task.getStatusIcon(),","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"                    task.getFullDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        System.out.print(output);","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"     * Prints information about the newly added task.","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"     * @param task     Newly added task.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"    public void printTaskListAddMessage(ArrayList\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[+] Task added:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"   [%s][%s] %s\\n\", task.getTaskIcon(), task.getStatusIcon(), task.getFullDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"[\u003d] You now have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"     * Prints information about the newly deleted task.","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"     * @param task     Newly deleted task.","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"    public void printTaskListDeleteMessage(ArrayList\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[+] Task removed:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"   [%s][%s] %s\\n\", task.getTaskIcon(), task.getStatusIcon(),","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"                task.getDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"[\u003d] You now have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"     * Prints information about the newly completed task.","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"     * @param task Newly completed task.","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"    public void printTaskListCompleteMessage(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[+] Task marked as done:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"   [%s][%s] %s\\n\", task.getTaskIcon(), task.getStatusIcon(),","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"                task.getFullDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"     * Prints the header for the find command.","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"    public void printTaskListFilterHeader() {","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[*] Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"     * Prints the error when list of tasks is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"    public void printTaskListEmptyError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[*] Here are your list of tasks:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[X] No tasks found :(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"     * Prints the error when unable to find task.","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"    public void printTaskListNotFoundError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[-] Task not found\");","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"     * Prints the given error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"     * @param errorMessage Error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[X] \" + errorMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"     * Prints the error when converting one data type to another.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"    public void printConvertError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"        printError(\"Error converting argument!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"     * Prints the error when updating the file storing the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"    public void printFileUpdateError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"        printError(\"Error updating save file!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"     * Prints the error when updating the file storing the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"    public void printFileReadError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"        printError(\"Error reading save file! Starting from clean slate...\");","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"     * Returns a line from standard input.","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"     * @return Line read.","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"    public String readInput() {","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"[root@%s ~]$ \", BOT_NAME);","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"rizemon":179}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"list 1","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"done","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"done 1 2","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"done cs2113t","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"todo","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"todo cs2113t","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"todo cs2113t with cs2101","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"deadline cs2113t","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"deadline /by","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"deadline /by someday","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"deadline /by someday oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by someday","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by someday oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by someday /by","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by someday /by oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by 2021-05-05","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"deadline cs2113t with cs2101 /by 2021-06-06 1359","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"event","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"event cs2113t","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"event /by","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"event /by someday","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"event /by someday oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at someday","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at someday oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at someday /by","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at someday /by oneday","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at 2021-05-05","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"event cs2113t with cs2101 /at 2021-06-06 1359","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"done 0","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"done 11","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"delete something","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"delete 0","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"find","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"find cs2113t","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rizemon":60}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rizemon":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rizemon":2,"-":36}}]
