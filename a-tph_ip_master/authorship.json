[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"3. After that, locate the `src/main/java/Kate.java` file, right-click it, and choose `Run Kate.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    _  __     _         ","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"   | |/ /__ _| |_ ___ ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"   | \u0027 \u003c/ _` |  _/ -_)      ","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"   |_|\\_\\__,_|\\__\\___|  ","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"   ","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":18,"a-tph":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"Project Kate is a **desktop application for recording different types of tasks**, ","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"optimised for use via a Command Line Interface (CLI) while having benefits of","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"a Graphic User Interface (GUI). If you can type fast, Kate is able","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"to record down your various tasks faster than traditional GUI applications.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"## Contents","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"* [QuickStart](#quick-start)","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"  * [Add to-do](#adding-a-to-do-task-todo)","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"  * [Add deadline](#adding-a-task-with-deadline-deadline)","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"  * [Add event](#adding-a-task-for-an-event-event)","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"  * [Mark done](#marking-a-done-task-done)","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"  * [Delete task](#deleting-a-task-delete)","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"  * [List tasks](#listing-all-tasks-list)","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"  * [Find task](#finding-a-task-with-keyword-find)","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"  * [Help](#showing-help-page-help)","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"  * [Bye](#exiting-kate-bye)","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"  * [Save data](#saving-the-data)","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"  * [Edit data](#editing-the-data-file)","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"## Quick start","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"1. Ensure `Java 11` is installed in your computer.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"   * Find the platform you are running on your computer and click on the corresponding ","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"     download link [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html).","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"2. Download the latest `kate.jar` [here](https://github.com/a-tph/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"3. Save it into an empty folder. This will be your *home folder* for Kate.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"4. For Windows user, type `cmd` into the location bar at the top of the window of your *home folder* and tap enter. ","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"For Linux users, `cd` into your *home folder* on your terminal.","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"5. Run `java -jar kate.jar` and you should see the start page as shown below","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"                     _  __     _","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"                    | |/ /__ _| |_ ___","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"                    | \u0027 \u003c/ _` |  _/ -_)","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"                    |_|\\_\\__,_|\\__\\___|","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"    This is Kate, your personal assistant ;)","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    How can I help you?","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"\u003e\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"6. Type `help` to see the list of commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"7. Refer to the [Features](#features) below for detailed explanation for each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"## Command summary","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"**Notes about the command format**","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"* Parameters encased in `[]` are **compulsory** to be supplied by the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"* Parameters encased in `\u003c\u003e` are **optional**.","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"* Parameters must be in a specific order specified by `help` command.","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"* `date` must be supplied in `dd-MM-yyyy` format.","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"* `time` uses 24-hour format and supplied in `HHmm`.","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"* `[description]` parameter only accepts alphanumeric and special characters.","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"Command | Parameters","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"------- | ------","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"`todo` | `[description]`","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"`deadline` | `[description] /by [date] \u003ctime\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"`event` | `[description] /at [date] [time] \u003cduration\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"`done` | `[task number]`","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"`delete` | `[task number]`","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"`list` | -","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"`find` | `[keyword]`","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"`help` | -","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"`bye`  | -","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"### Adding a to-do task: `todo`","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"Adds a to-do task to the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"Format: `todo [description]`","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"Example:","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"* `todo Buy groceries`","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"Okay, I have added this task!","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"You currently have (1) tasks in your list :)","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"### Adding a task with deadline: `deadline`","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"Format: `deadline [description] /by [date] \u003ctime\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"* `\u003ctime\u003e` is defaulted to `23:59`","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"* `deadline CS2113T Quiz /by 21-09-2021 1800`","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"* `deadline CS2106 Assignment /by 22-09-2021`","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"Okay, I have added this task!","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"  [D][ ] CS2106 Assignment (by: Sep 22 2021 23:59)","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"You currently have (2) tasks in your list :)","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"### Adding a task for an event: `event`","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"Adds an event into the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"Format: `event [description] /at [date] [time] \u003cduration\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"* `\u003cduration\u003e` can only be supplied in complete hour.","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"  * Values such as `2.5` or `1.25` will not be accepted.","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"  ","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"Examples: ","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"* `event CS2113T Lecture /at 24-09-2021 1600 2`","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"* `event CCA Fair /at 25-09-2021 0800`","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"Okay, I have added this task!","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"  [E][ ] CS2113T Lecture (at: Sep 24 2021 16:00 to Sep 24 2021 18:00)","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"You currently have (3) tasks in your list :)","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"### Marking a done task: `done`","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"Marks a specified task as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"Format: `done [task number]`","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"Example: ","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"* `done 1`","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"  [T][X] Buy Groceries","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"Deletes a specific task.","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"Format: `delete [task number]`","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"Example: ","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"* `delete 2`","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"  [E][ ] CS2113T Lecture (at: Sep 24 2021 16:00 to Sep 24 2021 18:00)","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"You currently have (2) tasks in your list :)","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"Lists all the tasks in the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"Format: `list`","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"1. [T][X] Buy Groceries","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"2. [D][ ] CS2106 Assignment (by: Sep 22 2021 23:59)","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"### Finding a task with keyword: `find`","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"Lists the tasks with a specific keyword.","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"Format: `find [keyword]`","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"* `find` filters tasks including the `date` and `time` fields","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"* `find groceries`","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"Here are the filtered tasks with keyword: groceries","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"1. [T][X] Buy Groceries","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"### Showing help page: `help`","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"Shows the help page with the list of commands available.","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"Format: `list`","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"Please enter only the following commands: ","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"- todo [description]","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"- deadline [description] /by [date] \u003ctime\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"- event [description] /at [date] [time] \u003cduration\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"- done [task number]","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"- delete [task number]","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"- list","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"- bye","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"### Exiting Kate: `bye`","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"Exits Kate.","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"Format: `bye`","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-09-21"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"Leaving already? Oh well see you again soon!","lastModifiedDate":"2021-09-21"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"### Saving the data","lastModifiedDate":"2021-09-21"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"Kate saves the tasks list **automatically** after running commands","lastModifiedDate":"2021-09-21"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"that cause a modification in the tasks list.","lastModifiedDate":"2021-09-21"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"### Editing the data file","lastModifiedDate":"2021-09-21"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"Kate stores the data in a text file at","lastModifiedDate":"2021-09-21"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"`[JAR file location]/data/kate.txt`. Advanced users can","lastModifiedDate":"2021-09-21"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"modify the file directly by editing the file.","lastModifiedDate":"2021-09-21"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"**Note**","lastModifiedDate":"2021-09-21"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"In case the data file is modified incorrectly such that Kate","lastModifiedDate":"2021-09-21"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"is unable to read, it will show the expected output below:","lastModifiedDate":"2021-09-21"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"Did you tamper with the data file? It is CORRUPTED!","lastModifiedDate":"2021-09-21"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-09-21"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"To continue using Kate, delete the file `kate.txt` and run the program as per normal","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"-":25,"a-tph":216}},{"path":"src/main/java/kate/Kate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.command.Command;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.FileCorruptedException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidCommandException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"public class Kate {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    private KateUI ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    public Kate() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        ui \u003d new KateUI();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        new Kate().startKate();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"     * Retrieve and process user inputs depending on the commands","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    private void startKate() {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            storage.loadDataFile(ui, tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        } catch (IOException | FileCorruptedException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        ui.printGreetMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"            String userInput \u003d ui.getInput();","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"                Command command \u003d Parser.extractCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"                command.execute(ui, storage, tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"                isExit \u003d command.getExitStatus();","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"a-tph":53,"-":1}},{"path":"src/main/java/kate/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":17}},{"path":"src/main/java/kate/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"    protected String userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public abstract void execute(KateUI ui, Storage storage, TaskList tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"        return isExit;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"a-tph":16}},{"path":"src/main/java/kate/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_DEADLINE \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_DEADLINE + \"\\\"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    public DeadlineCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            String[] infoArr \u003d Parser.extractDeadlineInput(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            String taskDescription \u003d infoArr[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            LocalDate date \u003d LocalDate.parse(infoArr[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            LocalTime time \u003d LocalTime.parse(infoArr[2]);","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            tasks.addDeadline(taskDescription, date, time);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            ui.printAddedTask(tasks.getMostRecentAddedTask(), tasks.getTaskSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            storage.appendTaskToFile(ui, tasks.getMostRecentAddedTask());","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_ADD_DEADLINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(Message.FAILURE_PARSE_DATE);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":41}},{"path":"src/main/java/kate/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_DELETE_TASK \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"            + \"Please provide a valid task number:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_DELETE + \"\\\"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            Task deletedTask \u003d Parser.extractDeleteInput(tasks, userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            String deletedTaskInfo \u003d deletedTask.getTaskInfo();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            tasks.deleteTask(deletedTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            String deleteMessage \u003d Message.TEXT_INDENTATION + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"                    + Message.TEXT_INDENTATION + \"  \" + deletedTaskInfo + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"                    + Message.TEXT_INDENTATION + \"You currently have (\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"                    + tasks.getTaskSize() + \") tasks in your list :)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(deleteMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"            storage.updateTasksToFile(ui, tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException | InvalidFieldException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_DELETE_TASK);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"            ui.printEmptyTaskMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":44}},{"path":"src/main/java/kate/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_SET_DONE \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_DONE + \"\\\"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    public DoneCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            Task curTask \u003d Parser.extractDoneInput(tasks, userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            curTask.setDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            String doneMessage \u003d Message.TEXT_INDENTATION + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"                    + Message.TEXT_INDENTATION + \"  \" + curTask.getTaskInfo() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(doneMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            storage.updateTasksToFile(ui, tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException | InvalidFieldException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_SET_DONE);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"            ui.printEmptyTaskMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":40}},{"path":"src/main/java/kate/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_EVENT \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_EVENT + \"\\\"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_PARSE_DURATION \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"            + \"Please enter the duration as an integer!\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    public EventCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            String[] infoArr \u003d Parser.extractEventInput(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            String taskDescription \u003d infoArr[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            LocalDate date \u003d LocalDate.parse(infoArr[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            LocalTime time \u003d LocalTime.parse(infoArr[2]);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            int duration \u003d Integer.parseInt(infoArr[3]);","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"            tasks.addEvent(taskDescription, date, time, duration);","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            ui.printAddedTask(tasks.getMostRecentAddedTask(), tasks.getTaskSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            storage.appendTaskToFile(ui, tasks.getMostRecentAddedTask());","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_ADD_EVENT);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(Message.FAILURE_PARSE_DATE);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_PARSE_DURATION);","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":48}},{"path":"src/main/java/kate/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_FIND \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"            + \"Please enter a keyword!\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_FIND + \"\\\"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"            String keyword \u003d Parser.extractKeyword(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            ArrayList\u003cString\u003e filteredTask \u003d tasks.filterTasksByKeyword(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            boolean isEmptyFilteredTask \u003d filteredTask.isEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            boolean isEmptyTaskList \u003d tasks.isEmptyTaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            if (isEmptyTaskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"                ui.printEmptyTaskMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"                return;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            if (isEmptyFilteredTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"                ui.printEmptyFilteredTaskMessage(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"                return;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"            ui.printTasksByKeyword(filteredTask, keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_FIND);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"a-tph":46}},{"path":"src/main/java/kate/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"        ui.printHelpPage();","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":17}},{"path":"src/main/java/kate/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        if (tasks.isEmptyTaskList()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"            ui.printEmptyTaskMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"        String taskHeading \u003d Message.TEXT_INDENTATION + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        allTasks.append(taskHeading);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskSize(); ++i) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            int numberedBullets \u003d i + 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            Task curTask \u003d tasks.getCurrentTask(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            String taskRow \u003d Message.TEXT_INDENTATION + numberedBullets + \". \" + curTask.getTaskInfo() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            allTasks.append(taskRow);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        ui.printMessage(String.valueOf(allTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":34}},{"path":"src/main/java/kate/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_TODO \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"\\\"\" + Message.COMMAND_TODO + \"\\\"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public ToDoCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    public void execute(KateUI ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"            String taskDescription \u003d Parser.extractToDoInput(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"            tasks.addToDo(taskDescription);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"            ui.printAddedTask(tasks.getMostRecentAddedTask(), tasks.getTaskSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            storage.appendTaskToFile(ui, tasks.getMostRecentAddedTask());","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(FAILURE_MESSAGE_ADD_TODO);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":32}},{"path":"src/main/java/kate/common/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.common;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class Message {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"    public static final String TEXT_INDENTATION \u003d \"    \";","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_TODO \u003d \"todo [description]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline [description] /by [date] \u003ctime\u003e\";","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_EVENT \u003d \"event [description] /at [date] [time] \u003cduration\u003e\";","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_DONE \u003d \"done [task number]\";","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_DELETE \u003d \"delete [task number]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_FIND \u003d \"find [keyword]\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public static final String FAILURE_PARSE_DATE \u003d TEXT_INDENTATION","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + \"I don\u0027t understand the date or time format!\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"            + TEXT_INDENTATION + \"Please enter date and time in [dd-MM-yyyy] \u003cHHmm\u003e format\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":20}},{"path":"src/main/java/kate/exception/EmptyFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class EmptyFieldException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/exception/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class FileCorruptedException extends Exception {","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class InvalidDateTimeException extends Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/exception/InvalidFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class InvalidFieldException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"a-tph":4}},{"path":"src/main/java/kate/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.command.ByeCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.command.DeadlineCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.command.DeleteCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.command.DoneCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.command.EventCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import kate.command.FindCommand;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import kate.command.HelpCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import kate.command.ListCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import kate.command.ToDoCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import kate.exception.EmptyTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import kate.exception.FileCorruptedException;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidCommandException;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"import kate.exception.InvalidFieldException;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_TODO \u003d 4;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_DEADLINE \u003d 8;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_EVENT \u003d 5;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_DELETE \u003d 6;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_FIND \u003d 4;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_DEADLINE_ARRAY \u003d 3;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_EVENT_ARRAY \u003d 4;","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_DEADLINE_ARRAY_PARSED \u003d 2;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"    private static final int LENGTH_EVENT_ARRAY_PARSED \u003d 3;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    private static final String DELIM_PIPE \u003d \" \\\\| \";","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    private static final String DELIM_SPACE \u003d \" \";","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    private static final String DELIM_BY \u003d \" /by \";","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"    private static final String DELIM_AT \u003d \" /at \";","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"    private static final int LIMIT_ARRAY_DEADLINE \u003d 2;","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    private static final int LIMIT_ARRAY_EVENT \u003d 2;","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    private static final String DEFAULT_TIME \u003d \"23:59\";","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    private static final String DEFAULT_DURATION \u003d \"0\";","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    public Parser() {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     * Extracts the command parameter from the user input","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"     * @return Command object of the given valid command","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"     * @throws InvalidCommandException If command is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    public static Command extractCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        String[] inputArr \u003d userInput.split(DELIM_SPACE);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        String givenCommand \u003d inputArr[0].toUpperCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        switch (givenCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        case \"TODO\":","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            return new ToDoCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"            return new DeadlineCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"            return new EventCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        case \"LIST\":","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        case \"DONE\":","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"            return new DoneCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        case \"FIND\":","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"        case \"BYE\":","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"        case \"HELP\":","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"     * Processes the user input to extract description","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"     * @return Task description for ToDo","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException If task description is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"    public static String extractToDoInput(String userInput) throws EmptyFieldException {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        String taskDescription \u003d userInput.substring(LENGTH_TODO).strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        return taskDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     * Process the user input to extract description and deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"     * @return String array of description and deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException If description or deadline is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"    public static String[] extractDeadlineInput(String userInput) throws InvalidDateTimeException, EmptyFieldException {","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        String taskInfo \u003d userInput.substring(LENGTH_DEADLINE).strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"        String[] taskInfoArr \u003d taskInfo.split(DELIM_BY, LIMIT_ARRAY_DEADLINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"        String[] taskInfoArrWithDateTime \u003d new String[LENGTH_DEADLINE_ARRAY];","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"            String taskDescription \u003d taskInfoArr[0].strip();","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"            String deadline \u003d taskInfoArr[1].strip();","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"            boolean hasEmptyField \u003d taskDescription.isEmpty() || deadline.isEmpty();","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"            if (hasEmptyField) {","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"                throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"            String[] deadlineArr \u003d processDeadline(deadline);","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"            String date \u003d deadlineArr[0];","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"            String time \u003d deadlineArr[1];","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[0] \u003d taskDescription;","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[1] \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[2] \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"            return taskInfoArrWithDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"     * Process deadline into both date and time field and ensure they are of required format","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"     * @param deadline Deadline field input by user","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"     * @return String array of field date and time respectively","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"     * @throws InvalidDateTimeException If date or time has invalid format","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"    private static String[] processDeadline(String deadline) throws InvalidDateTimeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"        String[] deadlineArr \u003d deadline.split(DELIM_SPACE);","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"        String[] parsedDeadlineArr \u003d new String[LENGTH_DEADLINE_ARRAY_PARSED];","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"            String date \u003d deadlineArr[0];","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"            String parsedDate \u003d String.valueOf(LocalDate.parse(date, DATE_FORMATTER));","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"            parsedDeadlineArr[0] \u003d parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"            boolean hasTimeField \u003d deadlineArr.length \u003e 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"            if (hasTimeField) {","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"                String time \u003d deadlineArr[1];","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"                String parsedTime \u003d String.valueOf(LocalTime.parse(time, TIME_FORMATTER));","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"                parsedDeadlineArr[1] \u003d parsedTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"            } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"                parsedDeadlineArr[1] \u003d DEFAULT_TIME;","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"            return parsedDeadlineArr;","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"     * Process the user input to extract description and time frame","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"     * @return String array of description and time frame","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException If description or time frame is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"    public static String[] extractEventInput(String userInput) throws InvalidDateTimeException, EmptyFieldException {","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"        String taskInfo \u003d userInput.substring(LENGTH_EVENT).strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"        String[] timeInfoArr \u003d taskInfo.split(DELIM_AT, LIMIT_ARRAY_EVENT);","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"        String[] taskInfoArrWithDateTime \u003d new String[LENGTH_EVENT_ARRAY];","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"            String taskDescription \u003d timeInfoArr[0].strip();","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"            String timeFrame \u003d timeInfoArr[1].strip();","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"            boolean hasEmptyField \u003d taskDescription.isEmpty() || timeFrame.isEmpty();","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"            if (hasEmptyField) {","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"                throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"            String[] timeFrameArr \u003d processTimeFrame(timeFrame);","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"            String date \u003d timeFrameArr[0];","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"            String time \u003d timeFrameArr[1];","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"            String duration \u003d timeFrameArr[2];","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[0] \u003d taskDescription;","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[1] \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[2] \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"            taskInfoArrWithDateTime[3] \u003d duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"            return taskInfoArrWithDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException | EmptyFieldException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-09-21"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"     * Process time frame into both date, time and duration field and ensure they are of required format","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"     * @param timeFrame Time frame field inputted by user","lastModifiedDate":"2021-09-21"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"     * @return String array of field date and time respectively","lastModifiedDate":"2021-09-21"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"     * @throws InvalidDateTimeException If date or time has invalid format","lastModifiedDate":"2021-09-21"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException      If time field is empty","lastModifiedDate":"2021-09-21"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"    private static String[] processTimeFrame(String timeFrame) throws InvalidDateTimeException, EmptyFieldException {","lastModifiedDate":"2021-09-21"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"        String[] timeFrameArr \u003d timeFrame.split(DELIM_SPACE);","lastModifiedDate":"2021-09-21"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"        String[] parsedTimeFrameArr \u003d new String[LENGTH_EVENT_ARRAY_PARSED];","lastModifiedDate":"2021-09-21"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"            boolean hasDurationField \u003d timeFrameArr.length \u003d\u003d 3;","lastModifiedDate":"2021-09-21"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"            String date \u003d timeFrameArr[0];","lastModifiedDate":"2021-09-21"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"            String parsedDate \u003d String.valueOf(LocalDate.parse(date, DATE_FORMATTER));","lastModifiedDate":"2021-09-21"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"            parsedTimeFrameArr[0] \u003d parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"            String time \u003d timeFrameArr[1];","lastModifiedDate":"2021-09-21"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"            String parsedTime \u003d String.valueOf(LocalTime.parse(time, TIME_FORMATTER));","lastModifiedDate":"2021-09-21"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"            parsedTimeFrameArr[1] \u003d parsedTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"            if (hasDurationField) {","lastModifiedDate":"2021-09-21"},{"lineNumber":242,"author":{"gitId":"a-tph"},"content":"                String duration \u003d timeFrameArr[2];","lastModifiedDate":"2021-09-21"},{"lineNumber":243,"author":{"gitId":"a-tph"},"content":"                String parsedDuration \u003d String.valueOf(Integer.parseInt(duration));","lastModifiedDate":"2021-09-21"},{"lineNumber":244,"author":{"gitId":"a-tph"},"content":"                parsedTimeFrameArr[2] \u003d parsedDuration;","lastModifiedDate":"2021-09-21"},{"lineNumber":245,"author":{"gitId":"a-tph"},"content":"            } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":246,"author":{"gitId":"a-tph"},"content":"                parsedTimeFrameArr[2] \u003d DEFAULT_DURATION;","lastModifiedDate":"2021-09-21"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":248,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":249,"author":{"gitId":"a-tph"},"content":"            return parsedTimeFrameArr;","lastModifiedDate":"2021-09-21"},{"lineNumber":250,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"a-tph"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":253,"author":{"gitId":"a-tph"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"a-tph"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":255,"author":{"gitId":"a-tph"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-09-21"},{"lineNumber":256,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"a-tph"},"content":"     * Process user input to extract the object of the associated task number","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"a-tph"},"content":"     * @param tasks     The list of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-17"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"     * @return Task object of the task that is done","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException   If task number provided is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"     * @throws InvalidFieldException If task number provided is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyTaskException    If task list is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":269,"author":{"gitId":"a-tph"},"content":"    public static Task extractDoneInput(TaskList tasks, String userInput) throws EmptyFieldException,","lastModifiedDate":"2021-09-17"},{"lineNumber":270,"author":{"gitId":"a-tph"},"content":"            InvalidFieldException, EmptyTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":271,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":272,"author":{"gitId":"a-tph"},"content":"        if (tasks.isEmptyTaskList()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"a-tph"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2021-09-17"},{"lineNumber":274,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":275,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":276,"author":{"gitId":"a-tph"},"content":"        String[] inputArr \u003d userInput.split(DELIM_SPACE);","lastModifiedDate":"2021-09-17"},{"lineNumber":277,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":278,"author":{"gitId":"a-tph"},"content":"            String doneInput \u003d inputArr[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":279,"author":{"gitId":"a-tph"},"content":"            if (doneInput.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":280,"author":{"gitId":"a-tph"},"content":"                throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":281,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":282,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":283,"author":{"gitId":"a-tph"},"content":"            int taskNumber \u003d Integer.parseInt(doneInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":284,"author":{"gitId":"a-tph"},"content":"            if ((taskNumber \u003e tasks.getTaskSize() || (taskNumber \u003c 1) || inputArr.length !\u003d 2)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":285,"author":{"gitId":"a-tph"},"content":"                throw new InvalidFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":286,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"            int taskNumberIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":289,"author":{"gitId":"a-tph"},"content":"            return tasks.getCurrentTask(taskNumberIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":290,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":291,"author":{"gitId":"a-tph"},"content":"            throw new InvalidFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":292,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":293,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":294,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":295,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":296,"author":{"gitId":"a-tph"},"content":"     * Process user input to extract the deleted task number","lastModifiedDate":"2021-09-17"},{"lineNumber":297,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":298,"author":{"gitId":"a-tph"},"content":"     * @param tasks     The list of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":299,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by the user","lastModifiedDate":"2021-09-17"},{"lineNumber":300,"author":{"gitId":"a-tph"},"content":"     * @return Task object of the deleted task","lastModifiedDate":"2021-09-17"},{"lineNumber":301,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException   If task number provided is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":302,"author":{"gitId":"a-tph"},"content":"     * @throws InvalidFieldException If task number provided is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":303,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyTaskException    If task list is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":304,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":305,"author":{"gitId":"a-tph"},"content":"    public static Task extractDeleteInput(TaskList tasks, String userInput) throws EmptyFieldException,","lastModifiedDate":"2021-09-17"},{"lineNumber":306,"author":{"gitId":"a-tph"},"content":"            InvalidFieldException, EmptyTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":307,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":308,"author":{"gitId":"a-tph"},"content":"        if (tasks.isEmptyTaskList()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"a-tph"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2021-09-17"},{"lineNumber":310,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":311,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":312,"author":{"gitId":"a-tph"},"content":"        String taskInput \u003d userInput.substring(LENGTH_DELETE).strip();","lastModifiedDate":"2021-09-17"},{"lineNumber":313,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":314,"author":{"gitId":"a-tph"},"content":"        if (taskInput.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":315,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":316,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":317,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":318,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":319,"author":{"gitId":"a-tph"},"content":"            int taskNumber \u003d Integer.parseInt(taskInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":320,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":321,"author":{"gitId":"a-tph"},"content":"            if ((taskNumber \u003e tasks.getTaskSize()) || (taskNumber \u003c 1)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":322,"author":{"gitId":"a-tph"},"content":"                throw new InvalidFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":323,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":324,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":325,"author":{"gitId":"a-tph"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":326,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":327,"author":{"gitId":"a-tph"},"content":"            return tasks.getCurrentTask(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":328,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":329,"author":{"gitId":"a-tph"},"content":"            throw new InvalidFieldException();","lastModifiedDate":"2021-09-17"},{"lineNumber":330,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":331,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":332,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":333,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":334,"author":{"gitId":"a-tph"},"content":"     * Process the text input of the saved tasks and pass it into the current task list;","lastModifiedDate":"2021-09-17"},{"lineNumber":335,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":336,"author":{"gitId":"a-tph"},"content":"     * @param tasks      TasksList object to add task to the task list","lastModifiedDate":"2021-09-17"},{"lineNumber":337,"author":{"gitId":"a-tph"},"content":"     * @param storedTask One line of the record in data/kate.txt","lastModifiedDate":"2021-09-17"},{"lineNumber":338,"author":{"gitId":"a-tph"},"content":"     * @throws FileCorruptedException If file content has been tampered cannot be parsed","lastModifiedDate":"2021-09-17"},{"lineNumber":339,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":340,"author":{"gitId":"a-tph"},"content":"    public static void processData(TaskList tasks, String storedTask) throws FileCorruptedException {","lastModifiedDate":"2021-09-17"},{"lineNumber":341,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":342,"author":{"gitId":"a-tph"},"content":"            String[] storedArr \u003d storedTask.split(DELIM_PIPE);","lastModifiedDate":"2021-09-17"},{"lineNumber":343,"author":{"gitId":"a-tph"},"content":"            String taskLabel \u003d storedArr[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":344,"author":{"gitId":"a-tph"},"content":"            String doneInput \u003d storedArr[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":345,"author":{"gitId":"a-tph"},"content":"            boolean isValidDoneInput \u003d doneInput.equalsIgnoreCase(\"true\")","lastModifiedDate":"2021-09-25"},{"lineNumber":346,"author":{"gitId":"a-tph"},"content":"                    || doneInput.equalsIgnoreCase(\"false\");","lastModifiedDate":"2021-09-25"},{"lineNumber":347,"author":{"gitId":"a-tph"},"content":"            if (!isValidDoneInput) {","lastModifiedDate":"2021-09-25"},{"lineNumber":348,"author":{"gitId":"a-tph"},"content":"                throw new FileCorruptedException();","lastModifiedDate":"2021-09-25"},{"lineNumber":349,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":350,"author":{"gitId":"a-tph"},"content":"            boolean isDone \u003d Boolean.parseBoolean(storedArr[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":351,"author":{"gitId":"a-tph"},"content":"            String description \u003d storedArr[2];","lastModifiedDate":"2021-09-17"},{"lineNumber":352,"author":{"gitId":"a-tph"},"content":"            String date;","lastModifiedDate":"2021-09-21"},{"lineNumber":353,"author":{"gitId":"a-tph"},"content":"            String time;","lastModifiedDate":"2021-09-21"},{"lineNumber":354,"author":{"gitId":"a-tph"},"content":"            LocalDate parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":355,"author":{"gitId":"a-tph"},"content":"            LocalTime parsedTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":356,"author":{"gitId":"a-tph"},"content":"            int parsedDuration;","lastModifiedDate":"2021-09-21"},{"lineNumber":357,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":358,"author":{"gitId":"a-tph"},"content":"            switch (taskLabel) {","lastModifiedDate":"2021-09-17"},{"lineNumber":359,"author":{"gitId":"a-tph"},"content":"            case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":360,"author":{"gitId":"a-tph"},"content":"                tasks.addToDoFromFile(description, isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":361,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":362,"author":{"gitId":"a-tph"},"content":"            case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":363,"author":{"gitId":"a-tph"},"content":"                date \u003d storedArr[3];","lastModifiedDate":"2021-09-21"},{"lineNumber":364,"author":{"gitId":"a-tph"},"content":"                time \u003d storedArr[4];","lastModifiedDate":"2021-09-21"},{"lineNumber":365,"author":{"gitId":"a-tph"},"content":"                parsedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":366,"author":{"gitId":"a-tph"},"content":"                parsedTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-21"},{"lineNumber":367,"author":{"gitId":"a-tph"},"content":"                tasks.addDeadlineFromFile(description, isDone, parsedDate, parsedTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":368,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":369,"author":{"gitId":"a-tph"},"content":"            case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":370,"author":{"gitId":"a-tph"},"content":"                date \u003d storedArr[3];","lastModifiedDate":"2021-09-21"},{"lineNumber":371,"author":{"gitId":"a-tph"},"content":"                time \u003d storedArr[4];","lastModifiedDate":"2021-09-21"},{"lineNumber":372,"author":{"gitId":"a-tph"},"content":"                String duration \u003d storedArr[5];","lastModifiedDate":"2021-09-21"},{"lineNumber":373,"author":{"gitId":"a-tph"},"content":"                parsedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":374,"author":{"gitId":"a-tph"},"content":"                parsedTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-21"},{"lineNumber":375,"author":{"gitId":"a-tph"},"content":"                parsedDuration \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-09-21"},{"lineNumber":376,"author":{"gitId":"a-tph"},"content":"                tasks.addEventFromFile(description, isDone, parsedDate, parsedTime, parsedDuration);","lastModifiedDate":"2021-09-21"},{"lineNumber":377,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":378,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":379,"author":{"gitId":"a-tph"},"content":"                throw new FileCorruptedException();","lastModifiedDate":"2021-09-17"},{"lineNumber":380,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":381,"author":{"gitId":"a-tph"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":382,"author":{"gitId":"a-tph"},"content":"            throw new FileCorruptedException();","lastModifiedDate":"2021-09-17"},{"lineNumber":383,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":384,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":385,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":386,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":387,"author":{"gitId":"a-tph"},"content":"     * Process user input to extract keyword for filter","lastModifiedDate":"2021-09-19"},{"lineNumber":388,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":389,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user","lastModifiedDate":"2021-09-19"},{"lineNumber":390,"author":{"gitId":"a-tph"},"content":"     * @return Keyword for filtering","lastModifiedDate":"2021-09-19"},{"lineNumber":391,"author":{"gitId":"a-tph"},"content":"     * @throws EmptyFieldException If keyword is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":392,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":393,"author":{"gitId":"a-tph"},"content":"    public static String extractKeyword(String userInput) throws EmptyFieldException {","lastModifiedDate":"2021-09-18"},{"lineNumber":394,"author":{"gitId":"a-tph"},"content":"        String keyword \u003d userInput.substring(LENGTH_FIND).strip();","lastModifiedDate":"2021-09-18"},{"lineNumber":395,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":396,"author":{"gitId":"a-tph"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":397,"author":{"gitId":"a-tph"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-18"},{"lineNumber":398,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":399,"author":{"gitId":"a-tph"},"content":"        return keyword;","lastModifiedDate":"2021-09-18"},{"lineNumber":400,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":401,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":401}},{"path":"src/main/java/kate/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.exception.FileCorruptedException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import kate.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import kate.ui.KateUI;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    private static final String DIRECTORY_NAME_DATA \u003d \"data\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    private static final String FILE_NAME_KATE \u003d \"kate.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    private static final String PATH_KATE \u003d DIRECTORY_NAME_DATA + \"/\" + FILE_NAME_KATE;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    private static final File dataDir \u003d new File(DIRECTORY_NAME_DATA);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    private static final File dataFile \u003d new File(PATH_KATE);","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    public Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     * Creates the data folder and file if it doesn\u0027t exist","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     * The file contents will be wiped out for every instance of the program","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"     * @param ui KateUI object to interact with UI","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    public void createDataFile(KateUI ui) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"     * Loads the task contents from data/kate.txt","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"     * @param ui    KateUI object to interact with UI","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"     * @param tasks TaskList object to add tasks from file to program","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"     * @throws FileCorruptedException If file content has been tampered and cannot be parsed","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"     * @throws IOException            If any IO operation fails","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    public void loadDataFile(KateUI ui, TaskList tasks) throws FileCorruptedException, IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"            createDataFile(ui);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"                Parser.processData(tasks, scanner.nextLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(Message.TEXT_INDENTATION + \"I can\u0027t seem to create the file... Please try again :(\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"            throw new IOException();","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(Message.TEXT_INDENTATION + \"Did you tamper with the data file? It is CORRUPTED!\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"            throw new FileCorruptedException();","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"     * Appends a task to ./data/kate.txt","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"     * @param ui   KateUI object to interact with UI","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"     * @param task TaskList object to add tasks from program to file","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"    public void appendTaskToFile(KateUI ui, Task task) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"            FileWriter file \u003d new FileWriter(PATH_KATE, true);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"            String taskInfo \u003d task.getTaskInfoForFile() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"            file.write(taskInfo);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"            file.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"     * Update the contents of task information to ./data/kate.txt","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"     * @param ui    KateUI object to interact with UI","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     * @param tasks TaskList object to update tasks from program to file","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"    public void updateTasksToFile(KateUI ui, TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"            FileWriter file \u003d new FileWriter(PATH_KATE);","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"            StringBuilder taskInfo \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskSize(); ++i) {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"                Task curTask \u003d tasks.getCurrentTask(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"                taskInfo.append(curTask.getTaskInfoForFile()).append(\"\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"            file.write(String.valueOf(taskInfo));","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"            file.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"            ui.printMessage(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":105}},{"path":"src/main/java/kate/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    private static final String DEADLINE_CHECKBOX \u003d \"[D]\";","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    public Deadline(String description, boolean isDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     * Formats the date into MMM d yyyy","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     * @return Formatted date in String","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     * Formats the time into HH:mm","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"     * @return Formatted date in String","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"     * Retrieves the deadline information to be written to a file","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"     * @return Formatted String of Deadline information","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        return \"D\" + \" | \" + isDone + \" | \" + description + \" | \" + date + \" | \" + time;","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"     * Retrieves Task information and additional deadline information","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * @return String description of task and additional deadline information","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        return DEADLINE_CHECKBOX + super.getTaskInfo()","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"                + \" (by: \" + getFormattedDate() + \" \" + getFormattedTime() + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":63}},{"path":"src/main/java/kate/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import java.time.Duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    protected int duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    private static final String EVENT_CHECKBOX \u003d \"[E]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public Event(String description, LocalDate date, LocalTime time, int duration) {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    public Event(String description, boolean isDone, LocalDate date, LocalTime time, int duration) {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"     * Formats the date into MMM d yyyy","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"     * @return Formatted date in String","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"     * Formats the time into HH:mm","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"     * @return Formatted date in String","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"     * Retrieves the event information to be written to a file","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"     * @return Formatted String of Event information","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        return \"E\" + \" | \" + isDone + \" | \" + description + \" | \" + date + \" | \" + time + \" | \" + duration;","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"     * Prints the time frame with added information if user provided a specific duration","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"     * @return Description of time frame depending on duration specified","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    private String printTimeFrame() {","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"        String timeFrame \u003d \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        boolean hasDuration \u003d duration \u003e 0;","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        if (hasDuration) {","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"            Duration durationTaken \u003d Duration.of(duration, ChronoUnit.HOURS);","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"            LocalDateTime startDate \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"            LocalDateTime endDate \u003d startDate.plus(durationTaken);","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            timeFrame \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"                    + \" to \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"            timeFrame \u003d getFormattedDate() + \" \" + getFormattedTime();","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        return timeFrame;","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"     * Retrieves Task information and additional event information","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"     * @return String description of task and additional event information","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"        return EVENT_CHECKBOX + super.getTaskInfo()","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"                + \" (at: \" + printTimeFrame() + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":91}},{"path":"src/main/java/kate/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    public abstract String getTaskInfoForFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"     * Retrieves status icon for tasks that are either done or not done","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"     * @return String \"X\" if done or \" \" if not done","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"     * Sets task to done","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"     * Retrieves the task information with description","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     * @return Description of task","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"a-tph":33}},{"path":"src/main/java/kate/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"    private static final String TODO_CHECKBOX \u003d \"[T]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"     * Retrieves the todo information to be written to a file","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"     * @return Formatted String of Todo information","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        return \"T\" + \" | \" + isDone + \" | \" + description;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"     * Retrieves Task information and additional todo information","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     * @return String description of task and additional todo information","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        return TODO_CHECKBOX + super.getTaskInfo();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":34}},{"path":"src/main/java/kate/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.tasklist;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import kate.task.ToDo;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"public class TaskList {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"     * Retrieves task size of the array list","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"     * @return The task size in integer","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    public int getTaskSize() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"     * Retrieves a Task given a task index","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"     * @param taskIndex Index of task supplied by user","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"     * @return Task object of the current task","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    public Task getCurrentTask(int taskIndex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    public boolean isEmptyTaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"     * Retrieves the task added most recently","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"     * @return Most recently added Task object","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    public Task getMostRecentAddedTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        int lastElementIndex \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        return tasks.get(lastElementIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * Adds a todo task to be done","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription A general task that user wants to add","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"    public void addToDo(String taskDescription) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        tasks.add(new ToDo(taskDescription));","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"     * Adds a todo task from file","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription Description of task","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"     * @param isDone          Task done status","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"    public void addToDoFromFile(String taskDescription, boolean isDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"        tasks.add(new ToDo(taskDescription, isDone));","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"     * Adds a task that has a deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription Description for task with a deadline","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"     * @param date            Date parameter","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"     * @param time            Time parameter","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"    public void addDeadline(String taskDescription, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Deadline(taskDescription, date, time));","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"     * Adds a task that has a deadline from file","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription Adds a task that has a deadline from file","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"     * @param isDone          Task done status","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"     * @param date            Date field for task with deadline","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"     * @param time            Time field for task with deadline","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"    public void addDeadlineFromFile(String taskDescription, boolean isDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Deadline(taskDescription, isDone, date, time));","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"     * Adds a task that is an event","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription Description of task that is an event","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"     * @param date            Date field for an event","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"     * @param time            Time field for an event","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"     * @param duration        Duration of the event","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"    public void addEvent(String taskDescription, LocalDate date, LocalTime time, int duration) {","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Event(taskDescription, date, time, duration));","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     * Adds a task that is an event from file","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"     * @param taskDescription Description of task","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"     * @param isDone          Task done status","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"     * @param date            Date field for an event","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"     * @param time            Time field for an event","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"     * @param duration        Duration of the event","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"    public void addEventFromFile(String taskDescription, boolean isDone, LocalDate date, LocalTime time, int duration) {","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Event(taskDescription, isDone, date, time, duration));","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"     * Delete a task specified by a task number","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"     * @param deletedTask Task object to be deleted","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"    public void deleteTask(Task deletedTask) {","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"        tasks.remove(deletedTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"     * Filter tasks by a specific keyword","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"     * @param keyword Keyword provided by user","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"     * @return ArrayList of tasks in String","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"    public ArrayList\u003cString\u003e filterTasksByKeyword(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        return (ArrayList\u003cString\u003e) IntStream","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"                .range(0, getTaskSize())","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"                .mapToObj((index) -\u003e String.format(\"%d. %s\", index + 1, getCurrentTask(index).getTaskInfo()))","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"                .filter((task) -\u003e (task.toUpperCase()).contains(keyword.toUpperCase()))","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":145}},{"path":"src/main/java/kate/ui/KateUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package kate.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import kate.common.Message;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import kate.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"public class KateUI {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    private static final String LOGO_INDENTATION \u003d \"                    \";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    private static final String TEXT_WRAPPER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    private static final String TEXT_FIELD_HEADER \u003d \"\u003e\u003e \";","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    private static final String LOGO_KATE \u003d LOGO_INDENTATION + \" _  __     _\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"| |/ /__ _| |_ ___\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"| \u0027 \u003c/ _` |  _/ -_)\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"|_|\\\\_\\\\__,_|\\\\__\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    private static final String MESSAGE_GREET \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"            + \"This is Kate, your personal assistant ;)\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"How can I help you?\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    private static final String MESSAGE_BYE \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"            + \"Leaving already? Oh well see you again soon!\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_INVALID_COMMAND \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            + \"Please enter a valid command!\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            + Message.TEXT_INDENTATION + \"Type \u003chelp\u003e for the list of commands\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    private static final String MESSAGE_EMPTY_TASK_LIST \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            + \"Your task list is currently empty\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    private static final String MESSAGE_EMPTY_FILTERED_TASK \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            + \"No tasks found with keyword: \";","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    private Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    public KateUI() {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    public String getInput() {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        System.out.print(TEXT_FIELD_HEADER);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"     * Greet message from Kate","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"    public void printGreetMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        System.out.println(LOGO_KATE);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        printMessage(MESSAGE_GREET);","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"     * Prints a general message that is nicely formatted","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     * @param message A string input to be formatted and printed","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        String formattedMsg \u003d TEXT_WRAPPER + message + TEXT_WRAPPER;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"     * Bye message from Kate","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        printMessage(MESSAGE_BYE);","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"     * Prints a confirmation that a task has been added","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"     * @param addedTask Task object of the newly added Task","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"     * @param taskSize  Number of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"    public void printAddedTask(Task addedTask, int taskSize) {","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        String formattedMsg \u003d Message.TEXT_INDENTATION + \"Okay, I have added this task!\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"  \" + addedTask.getTaskInfo() + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"You currently have (\" + taskSize","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"                + \") tasks in your list :)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        printMessage(formattedMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"     * Prints the list of all available commands","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     * Only prints when user key in an invalid command","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"    public void printHelpPage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        String helpText \u003d Message.TEXT_INDENTATION + \"Please enter only the following commands: \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_TODO + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_DEADLINE + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_EVENT + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_DONE + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_DELETE + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_LIST + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_FIND + \"\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"                + Message.TEXT_INDENTATION + \"- \" + Message.COMMAND_BYE + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        printMessage(helpText);","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"     * Prints the error message for an invalid command","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"    public void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        printMessage(FAILURE_MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     * Prints the message if the command list is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"    public void printEmptyTaskMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"        printMessage(MESSAGE_EMPTY_TASK_LIST);","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"     * Prints the message if filtered task is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"     * @param keyword Keyword supplied by user","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"    public void printEmptyFilteredTaskMessage(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"        String emptyTaskMessage \u003d MESSAGE_EMPTY_FILTERED_TASK + keyword + \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"        printMessage(emptyTaskMessage);","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"     * Prints all the filtered tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"     * @param filteredTask A list of filtered task","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"     * @param keyword      Keyword supplied by user","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"    public void printTasksByKeyword(ArrayList\u003cString\u003e filteredTask, String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"        String filterTaskHeading \u003d Message.TEXT_INDENTATION","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"                + \"Here are the filtered tasks with keyword: \" + keyword + \"\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"        StringBuilder compiledTasks \u003d new StringBuilder();","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"        compiledTasks.append(filterTaskHeading);","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"        for (String task : filteredTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"            String compiledTask \u003d Message.TEXT_INDENTATION + task + \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            compiledTasks.append(compiledTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"        printMessage(String.valueOf(compiledTasks));","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"a-tph":143}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"test","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"todo","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"todo sleep","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"deadline sleep by 10pm","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"deadline sleep /by 11pm","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"event wake up at 5am","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"event wake up /at 5am","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"delete 1","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"done 3","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"done 2","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"delete 1","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"delete 1","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\kate\\Kate.java ..\\src\\main\\java\\kate\\command\\*.java ..\\src\\main\\java\\kate\\common\\*.java ..\\src\\main\\java\\kate\\exception\\*.java ..\\src\\main\\java\\kate\\parser\\*.java ..\\src\\main\\java\\kate\\storage\\*.java ..\\src\\main\\java\\kate\\task\\*.java ..\\src\\main\\java\\kate\\tasklist\\*.java ..\\src\\main\\java\\kate\\ui\\*.java","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"java -classpath ..\\bin kate/Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"a-tph":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"java -classpath ../bin Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"a-tph":1}}]
