[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"3. After that, locate the `src/main/java/Kate.java` file, right-click it, and choose `Run Kate.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    _  __     _         ","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"   | |/ /__ _| |_ ___ ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"   | \u0027 \u003c/ _` |  _/ -_)      ","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"   |_|\\_\\__,_|\\__\\___|  ","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"   ","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":18,"a-tph":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"    private static final String DATELINE_CHECKBOX \u003d \"[D]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"        return deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public String printTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"        return DATELINE_CHECKBOX + super.printTaskInfo()","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"                + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"    protected String timeFrame;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"    private static final String EVENT_CHECKBOX \u003d \"[E]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"    public Event(String description, String timeFrame) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"        this.timeFrame \u003d timeFrame;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    public String getTimeFrame() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"        return timeFrame;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    public String printTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"        return EVENT_CHECKBOX + super.printTaskInfo()","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"                + \" (at: \" + timeFrame + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":20}},{"path":"src/main/java/Kate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"public class Kate {","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"     * Decorative prefixes to provide indentations and wrappers for the output message","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    private static final String TEXT_INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    private static final String LOGO_INDENTATION \u003d \"                    \";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    private static final String TEXT_WRAPPER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"     * A custom ASCII art logo for Project Kate","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    private static final String LOGO_KATE \u003d LOGO_INDENTATION + \" _  __     _         \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"| |/ /__ _| |_ ___   \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"| \u0027 \u003c/ _` |  _/ -_)  \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"            + LOGO_INDENTATION + \"|_|\\\\_\\\\__,_|\\\\__\\\\___|  \\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    private static final String GREET_MESSAGE \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"            + \"This is Kate, your personal assistant ;)\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"            + TEXT_INDENTATION + \"How can I help you?\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    private static final String BYE_MESSAGE \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"            + \"Leaving already? Oh well see you again soon!\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     * Length of the action commands inclusive of a space","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    private static final int TODO_LENGTH \u003d 5;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    private static final int DEADLINE_LENGTH \u003d 9;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    private static final int EVENT_LENGTH \u003d 6;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     * Specific description on how to use the action commands","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"     * User inputs should be in location with square brackets","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_TODO \u003d \"todo [description]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline [description] /by [deadline]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_EVENT \u003d \"event [description] /at [time frame]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_DONE \u003d \"done [task number shown in list]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_TODO \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with \\\"\" + COMMAND_TODO + \"\\\"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_DEADLINE \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with \\\"\" + COMMAND_DEADLINE + \"\\\"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_ADD_EVENT \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with \\\"\" + COMMAND_EVENT + \"\\\"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    private static final String FAILURE_MESSAGE_SET_DONE \u003d TEXT_INDENTATION","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"            + \"Please specify a task with \\\"\" + COMMAND_DONE + \"\\\"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * Initialise an array list of tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        printGreetMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        startKate();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        printByeMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"     * Retrieve and process user inputs depending on the commands","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"    private static void startKate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        while (true) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"            if (userInput.toUpperCase().equals(\"BYE\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"            } else if (userInput.toUpperCase().startsWith(\"TODO \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"                addToDo(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"            } else if (userInput.toUpperCase().startsWith(\"DEADLINE \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"                addDeadline(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"            } else if (userInput.toUpperCase().startsWith(\"EVENT \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"                addEvent(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"            } else if (userInput.toUpperCase().equals(\"LIST\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"                printTasks();","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"            } else if (userInput.toUpperCase().startsWith(\"DONE \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"                indicateDone(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"                printHelpPage();","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"     * Marks task as done for a particular task number","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input provided by user to indicate task completion for a task","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"    private static void indicateDone(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"        String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        boolean isValid \u003d intChecker(inputArr, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        if (!isValid) {","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        int taskNumber \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        int taskNumberIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"        Task curTask \u003d tasks.get(taskNumberIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"        curTask.setDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"        String doneMessage \u003d TEXT_INDENTATION + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"  \" + curTask.printTaskInfo() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"        printMessage(doneMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"     * Adds a task that is an event","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"     * @param userInput An event the user wants to add","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"    private static void addEvent(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"        String taskInfo \u003d userInput.substring(EVENT_LENGTH).strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"        boolean isEmptyField \u003d emptyFieldChecker(taskInfo, \" /at \");","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"        if (isEmptyField) {","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"            printMessage(FAILURE_MESSAGE_ADD_EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"        String[] infoArr \u003d taskInfo.split(\" /at \");","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"        String taskDescription \u003d infoArr[0].strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"        String timeFrame \u003d infoArr[1].strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Event(taskDescription, timeFrame));","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"        printAddedTask();","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"     * Adds a task that has a deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"     * @param userInput A task a user wants to add that has a deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"    private static void addDeadline(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"        String taskInfo \u003d userInput.substring(DEADLINE_LENGTH).strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"        boolean isEmptyField \u003d emptyFieldChecker(taskInfo, \" /by \");","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"        if (isEmptyField) {","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"            printMessage(FAILURE_MESSAGE_ADD_DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"        String[] infoArr \u003d taskInfo.split(\" /by \");","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"        String taskDescription \u003d infoArr[0].strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"        String deadline \u003d infoArr[1].strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"        tasks.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"        printAddedTask();","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"     * Adds a general task to be done","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"     * @param userInput A general task that user wants to add","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"    private static void addToDo(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"        String taskDescription \u003d userInput.substring(TODO_LENGTH).strip();","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"            printMessage(FAILURE_MESSAGE_ADD_TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"        tasks.add(new ToDo(taskDescription));","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"        printAddedTask();","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"    public static void printGreetMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"        System.out.println(LOGO_KATE);","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"        printMessage(GREET_MESSAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"        printMessage(BYE_MESSAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"     * Prints a general message that is nicely formatted","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"     * @param msg A string input to be formatted and printed","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"    public static void printMessage(String msg) {","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"        String formattedMsg \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"        formattedMsg +\u003d TEXT_WRAPPER + msg + TEXT_WRAPPER;","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"     * Prints a confirmation that a task has been added","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"    public static void printAddedTask() {","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"        String formattedMsg \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"        formattedMsg +\u003d TEXT_WRAPPER + TEXT_INDENTATION + \"Okay, I have added this task!\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"  \" + getAddedTask().printTaskInfo() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"You currently have (\" + tasks.size()","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"                + \") tasks in your list :)\\n\" + TEXT_WRAPPER;","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"     * Prints all the tasks entered by the user","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"    public static void printTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"        String formattedMsg \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"        formattedMsg +\u003d TEXT_WRAPPER + TEXT_INDENTATION + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"            Task curTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"            int numberedBullets \u003d i + 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"            formattedMsg +\u003d TEXT_INDENTATION + numberedBullets + \". \"","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"                    + curTask.printTaskInfo() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"        formattedMsg +\u003d TEXT_WRAPPER;","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"     * Retrieves the task added most recently","lastModifiedDate":"2021-08-28"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"     * @return Most recently added Task object","lastModifiedDate":"2021-08-28"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"    private static Task getAddedTask() {","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"        int lastElementIndex \u003d tasks.size() - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"        return tasks.get(lastElementIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"     * Checks whether given task number is an integer","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"     * @param inputArr Input by the user","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"     * @param size     Size of the ArrayList tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value of whether input is an integer","lastModifiedDate":"2021-08-28"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"    public static boolean intChecker(String[] inputArr, int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":243,"author":{"gitId":"a-tph"},"content":"            int taskNumber \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":244,"author":{"gitId":"a-tph"},"content":"            if ((taskNumber \u003e size) || (taskNumber \u003c 1) || inputArr.length !\u003d 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"a-tph"},"content":"                printMessage(TEXT_INDENTATION + \"Please input a valid task number!\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"a-tph"},"content":"                return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":248,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"a-tph"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"a-tph"},"content":"            printMessage(TEXT_INDENTATION + \"Please input an integer as your task number!\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"a-tph"},"content":"            printMessage(FAILURE_MESSAGE_SET_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"a-tph"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":258,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":259,"author":{"gitId":"a-tph"},"content":"     * Checks whether user input contains empty fields","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"a-tph"},"content":"     * @param userInput Input by the user","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"a-tph"},"content":"     * @param delim     Delimiter used to split the string","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"a-tph"},"content":"     * @return Boolean input whether user provided empty fields","lastModifiedDate":"2021-08-28"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"a-tph"},"content":"    public static boolean emptyFieldChecker(String userInput, String delim) {","lastModifiedDate":"2021-08-28"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"        String[] inputArr \u003d userInput.split(delim, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"            String firstArrayField \u003d inputArr[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":269,"author":{"gitId":"a-tph"},"content":"            String secondArrayField \u003d inputArr[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":270,"author":{"gitId":"a-tph"},"content":"            if (firstArrayField.isEmpty() || secondArrayField.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":271,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":273,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":274,"author":{"gitId":"a-tph"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":275,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":276,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":277,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":278,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":279,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"a-tph"},"content":"     * Prints the list of all available commands","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"a-tph"},"content":"     * Only prints when user key in an invalid command","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":283,"author":{"gitId":"a-tph"},"content":"    public static void printHelpPage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":284,"author":{"gitId":"a-tph"},"content":"        String helpText \u003d TEXT_INDENTATION + \"Please enter only the following commands: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":285,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_TODO + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":286,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_DEADLINE + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_EVENT + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_DONE + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":289,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_LIST + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":290,"author":{"gitId":"a-tph"},"content":"                + TEXT_INDENTATION + \"- \" + COMMAND_BYE + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":291,"author":{"gitId":"a-tph"},"content":"        printMessage(helpText);","lastModifiedDate":"2021-08-28"},{"lineNumber":292,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"a-tph":291,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    public String printTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"a-tph":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"    private static final String TODO_CHECKBOX \u003d \"[T]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"    public String printTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"        return TODO_CHECKBOX + super.printTaskInfo();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"test","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"todo sleep","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"deadline sleep by 10pm","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"deadline sleep /by 11pm","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"event wake up /at 5am","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"done 3","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"a-tph":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"java -classpath ..\\bin Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"a-tph":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"java -classpath ../bin Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"a-tph":1}}]
