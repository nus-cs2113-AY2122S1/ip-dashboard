[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Deadline object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Deadline object contains date that task is to be completed by, represented by a String.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" * Inherits all methods from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"        // return format","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"        String printStatus;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"        // return format","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"        if(this.isDone \u003d\u003d true) {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"1\";","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"0\";","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"        return \"D \" + printStatus + \" \" + description + \" | \" + by;","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"nguyin"},"content":"        return \"  [D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyin":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"     * Informs the user what task they will be adding into their task list and the number of tasks","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"     * in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"     * Prints the new task and the new number of tasks in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"     * @param toPrint The new task that will be printed","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"    public static void printTask(Task toPrint) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Ok! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"        System.out.println(toPrint);","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in your list uwu\");","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"     * Deletes the task specified by user from the taskList.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"nguyin"},"content":"     * @param delTask Index of task to be deleted, passed in as String and will be converted to integer.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"nguyin"},"content":"     * @throws IllegalDoneException Exception thrown when user inputs an incorrect index of the number.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"nguyin"},"content":"    public static void deleteTask(String delTask) throws IllegalDoneException {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"nguyin"},"content":"        String n \u003d delTask.substring(7);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"nguyin"},"content":"        int delIndex \u003d Integer.parseInt(n) - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"nguyin"},"content":"        if (delIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nguyin"},"content":"            throw new IllegalDoneException();","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"Okies! I\u0027ve removed this task \u003c3 :\");","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"nguyin"},"content":"            System.out.println(taskList.get(delIndex));","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"nguyin"},"content":"            taskList.remove(delIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in your list uwu\");","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"nguyin"},"content":"     * Prints all the tasks that the user has in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"nguyin"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"nguyin"},"content":"        int pos \u003d 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"nguyin"},"content":"        while (pos \u003c taskList.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"nguyin"},"content":"            pos +\u003d 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"nguyin"},"content":"            System.out.println(pos + \". \" + taskList.get(pos - 1));","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"nguyin"},"content":"     * Marks the task that is specified by user, by number starting from 1, as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"nguyin"},"content":"     * @param doneTask Task that is to be marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"nguyin"},"content":"     * @throws IllegalDoneException If doneIndex \u003e\u003d taskCount, the task that user wants to mark as","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"nguyin"},"content":"     * done does not exist in the list","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"nguyin"},"content":"    public static void markDone(String doneTask) throws IllegalDoneException {","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"nguyin"},"content":"        String n \u003d doneTask.substring(5);","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"nguyin"},"content":"        int doneIndex \u003d Integer.parseInt(n) - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"nguyin"},"content":"        if(doneIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"nguyin"},"content":"            throw new IllegalDoneException();","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"nguyin"},"content":"            taskList.get(doneIndex).setDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"Good job! I\u0027ve marked these tasks as done:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"nguyin"},"content":"            printTaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"nguyin"},"content":"     * Returns the task that is to be added into user\u0027s task list.","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"nguyin"},"content":"     * @param t Task that is to be added into user\u0027s list.","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"nguyin"},"content":"     * @return Task that is to be added to the user\u0027s list.","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"nguyin"},"content":"     * @throws IllegalTaskException Task description does not start with \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"nguyin"},"content":"     * @throws InvalidDeadlineFormat Deadline description does not contain the correct format of what is","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"nguyin"},"content":"     * to be expected for deadline, does not contain \u0027/by\u0027.","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"nguyin"},"content":"     * @throws InvalidEventFormat Event description does not contain the correct format of what is","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"nguyin"},"content":"     * to be expected for event, does not contain \u0027/at\u0027.","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"nguyin"},"content":"    public static void typeOfTask(String t) throws IllegalTaskException, InvalidDeadlineFormat, InvalidEventFormat {","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"nguyin"},"content":"        int startOfDate \u003d -1;","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"nguyin"},"content":"        if (t.contains(\"todo\")) { // create a new todo","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"nguyin"},"content":"            Todo newTask \u003d new Todo(t.substring(5));","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"nguyin"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"nguyin"},"content":"            printTask(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"nguyin"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"nguyin"},"content":"        } else if (t.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"nguyin"},"content":"            startOfDate \u003d t.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"nguyin"},"content":"            if(!t.contains(\"/by\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"nguyin"},"content":"                throw new InvalidDeadlineFormat();","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"nguyin"},"content":"            String task \u003d t.substring(9, startOfDate - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"nguyin"},"content":"            String date \u003d t.substring(startOfDate + 4);","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"nguyin"},"content":"            Deadline newTask \u003d new Deadline(task, date);","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"nguyin"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"nguyin"},"content":"            printTask(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"nguyin"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"nguyin"},"content":"        } else if (t.startsWith(\"event\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"nguyin"},"content":"            startOfDate \u003d t.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"nguyin"},"content":"            if(!t.contains(\"/at\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"nguyin"},"content":"                throw new InvalidEventFormat();","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"nguyin"},"content":"            String task \u003d t.substring(6, startOfDate - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"nguyin"},"content":"            String date \u003d t.substring(startOfDate + 4);","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"nguyin"},"content":"            Event newTask \u003d new Event(task, date);","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"nguyin"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"nguyin"},"content":"            printTask(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"nguyin"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"nguyin"},"content":"        throw new IllegalTaskException();","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"nguyin"},"content":"     * Stores taskList to the file specified, tasks will be stored as Todo, Deadline or Event.","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"nguyin"},"content":"     * @param filePath Path to file to be written to","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"nguyin"},"content":"     * @throws IOException Exception is thrown when there is no valid file of the name and path.","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"nguyin"},"content":"    private static void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"nguyin"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"nguyin"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"nguyin"},"content":"        while(i \u003c taskList.size()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"nguyin"},"content":"            fw.write(taskList.get(i).saveToFile() + System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"nguyin"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"nguyin"},"content":"        fw.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"nguyin"},"content":"     * Reads content of the file and stores the tasks into taskList to be used by the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"nguyin"},"content":"     * @param filePath Path to the file that is read from","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"nguyin"},"content":"    private static void readFileContents(String filePath) {","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"nguyin"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"nguyin"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"nguyin"},"content":"            if (!f.createNewFile()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"nguyin"},"content":"                Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"nguyin"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"nguyin"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"nguyin"},"content":"                    if (line.startsWith(\"E\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"nguyin"},"content":"                        int startDate \u003d line.indexOf(\u0027|\u0027);","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"nguyin"},"content":"                        String description \u003d line.substring(4, startDate - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"nguyin"},"content":"                        String date \u003d line.substring(startDate + 2);","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"nguyin"},"content":"                        Event newTask \u003d new Event(description, date);","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"nguyin"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"nguyin"},"content":"                        if (line.substring(2).startsWith(\"1\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"nguyin"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"nguyin"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"nguyin"},"content":"                    } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"nguyin"},"content":"                        int startDate \u003d line.indexOf(\u0027|\u0027);","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"nguyin"},"content":"                        String description \u003d line.substring(4, startDate - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"nguyin"},"content":"                        String date \u003d line.substring(startDate + 2);","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"nguyin"},"content":"                        Deadline newTask \u003d new Deadline(description, date);","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"nguyin"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"nguyin"},"content":"                        if (line.substring(2).startsWith(\"1\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"nguyin"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"nguyin"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"nguyin"},"content":"                    } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":168,"author":{"gitId":"nguyin"},"content":"                        String description \u003d line.substring(4);","lastModifiedDate":"2021-09-14"},{"lineNumber":169,"author":{"gitId":"nguyin"},"content":"                        Todo newTask \u003d new Todo(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":170,"author":{"gitId":"nguyin"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"nguyin"},"content":"                        if (line.substring(2).startsWith(\"1\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"nguyin"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"nguyin"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"nguyin"},"content":"                    }","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"nguyin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"sth\");","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"nguyin"},"content":"        readFileContents(\"lines.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"nguyin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Hello Bbygirl! I\u0027m Your Boyfriend \u003c3\");","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"How can I help you today? ;)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"nguyin"},"content":"        String t \u003d in.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":193,"author":{"gitId":"nguyin"},"content":"        while (!t.equals(\"bye\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"nguyin"},"content":"            if (t.equals(\"list\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"nguyin"},"content":"                printTaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"nguyin"},"content":"            } else if (t.startsWith(\"done\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"nguyin"},"content":"                try {","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"nguyin"},"content":"                    markDone(t);","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"nguyin"},"content":"                } catch (IllegalDoneException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input a correct number BB... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"nguyin"},"content":"            } else if(t.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":203,"author":{"gitId":"nguyin"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":204,"author":{"gitId":"nguyin"},"content":"                    deleteTask(t);","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"nguyin"},"content":"                } catch (IllegalDoneException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":206,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input a correct number BB... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"nguyin"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":209,"author":{"gitId":"nguyin"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"nguyin"},"content":"                    typeOfTask(t);","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"nguyin"},"content":"                } catch (IllegalTaskException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":212,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You have a typo BB.. ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"nguyin"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":214,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to add an item BB.. ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":215,"author":{"gitId":"nguyin"},"content":"                } catch (InvalidDeadlineFormat e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":216,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input deadline with \u0027/by\u0027 ... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":217,"author":{"gitId":"nguyin"},"content":"                } catch (InvalidEventFormat e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input event with \u0027/at\u0027 ... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":221,"author":{"gitId":"nguyin"},"content":"            t \u003d in.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":222,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":223,"author":{"gitId":"nguyin"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":224,"author":{"gitId":"nguyin"},"content":"            writeToFile(\"lines.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":225,"author":{"gitId":"nguyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":226,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":227,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Goodbye. I will miss you sooo much :(\");","lastModifiedDate":"2021-08-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nguyin":226,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Event object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Event object contains date that event is happening at, represented by a String.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"        return by;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"        String printStatus;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"        // return format","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"        if(this.isDone \u003d\u003d true) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"1\";","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"0\";","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"        return \"E \" + printStatus + \" \" + description + \" | \" + by;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"nguyin"},"content":"        return \"  [E]\" + super.toString() + \" (at: \" + by + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyin":36}},{"path":"src/main/java/IllegalDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"public class IllegalDoneException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":2}},{"path":"src/main/java/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Throws an exception when starting word that user input is not \"todo\", \"deadline\", or \"event\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class IllegalTaskException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/InvalidDeadlineFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Exception is thrown when deadline that is input by user is in an invalid format, ie. does not contain \"/by\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class InvalidDeadlineFormat extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/InvalidEventFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Exception is thrown when event that is input by user is in an invalid format, ie. does not contain \"/at\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class InvalidEventFormat extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Task object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and the status of the task, represented by boolean.","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"//    protected boolean by;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"    public abstract String saveToFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nguyin":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Todo object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Inherits all methods from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"        return \"  [T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"        // return format","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"        String printStatus;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"        // return format","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"        if(this.isDone \u003d\u003d true) {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"1\";","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"            printStatus \u003d \"0\";","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"        return \"T \" + printStatus + \" \" + description;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"nguyin":31}}]
