[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Deadline object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Deadline object contains date that task is to be completed by, represented by a String.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" * Inherits all methods from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"        return \"  [D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyin":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"     * Informs the user what task they will be adding into their task list and the number of tasks","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"     * in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"     * Prints the new task and the new number of tasks in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"     * @param newTask The new task that will be added to the task list.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"     * @param taskCount The number of tasks that are in the list (including the new task).","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"    public static void printTask(Task newTask, int taskCount) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"        String toPrint \u003d newTask.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Ok! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"        System.out.println(newTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in your list uwu\");","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"nguyin"},"content":"     * Prints all the tasks that the user has in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"nguyin"},"content":"     * @param list List that contains all the tasks from user.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"nguyin"},"content":"     * @param totalTasks Total number of tasks user has in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"nguyin"},"content":"    public static void printTaskList(Task[] list, int totalTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyin"},"content":"        Task[] printList \u003d Arrays.copyOf(list, totalTasks); // only copy until the part you want","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"nguyin"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"nguyin"},"content":"        for (Task task : printList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nguyin"},"content":"            System.out.println(i + \".\" + task);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"nguyin"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"nguyin"},"content":"     * Marks the task that is specified by user, by number starting from 1, as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"nguyin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"nguyin"},"content":"     * @param doneTask Task that is to be marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"nguyin"},"content":"     * @param taskCount Total number of tasks user has in their list.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"nguyin"},"content":"     * @param taskList List that contains all the tasks from user.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"nguyin"},"content":"     * @throws IllegalDoneException If doneIndex \u003e\u003d taskCount, the task that user wants to mark as","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"nguyin"},"content":"     * done does not exist in the list","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"nguyin"},"content":"    public static void markDone(Task doneTask, int taskCount, Task[] taskList) throws IllegalDoneException {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nguyin"},"content":"        String n \u003d doneTask.description.substring(5);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"nguyin"},"content":"        int doneIndex \u003d Integer.parseInt(n) - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"nguyin"},"content":"        if(doneIndex \u003e\u003d taskCount) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"nguyin"},"content":"            throw new IllegalDoneException();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"nguyin"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"nguyin"},"content":"            taskList[doneIndex].isDone \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"nguyin"},"content":"            System.out.println(\"Good job! I\u0027ve marked these tasks as done:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"nguyin"},"content":"            printTaskList(taskList, taskCount);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"nguyin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"nguyin"},"content":"     * Returns the task that is to be added into user\u0027s task list.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"nguyin"},"content":"     * @param t Task that is to be added into user\u0027s list.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"nguyin"},"content":"     * @return Task that is to be added to the user\u0027s list.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"nguyin"},"content":"     * @throws IllegalTaskException Task description does not start with \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"nguyin"},"content":"     * @throws InvalidDeadlineFormat Deadline description does not contain the correct format of what is","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"nguyin"},"content":"     * to be expected for deadline, does not contain \u0027/by\u0027.","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"nguyin"},"content":"     * @throws InvalidEventFormat Event description does not contain the correct format of what is","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"nguyin"},"content":"     * to be expected for event, does not contain \u0027/at\u0027.","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"nguyin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"nguyin"},"content":"    public static Task typeOfTask(Task t) throws IllegalTaskException, InvalidDeadlineFormat, InvalidEventFormat {","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"nguyin"},"content":"        Task newTask \u003d new Task(\"not initialised\");","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"nguyin"},"content":"        int startOfDate \u003d -1;","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"nguyin"},"content":"        if (t.description.contains(\"todo\")) { // create a new todo","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"nguyin"},"content":"            newTask \u003d new Todo(t.description.substring(5));","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"nguyin"},"content":"            return newTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"nguyin"},"content":"        } else if (t.description.contains(\"deadline\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"nguyin"},"content":"            startOfDate \u003d t.description.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"nguyin"},"content":"            if(!t.description.contains(\"/by\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"nguyin"},"content":"                throw new InvalidDeadlineFormat();","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"nguyin"},"content":"            String task \u003d t.description.substring(9, startOfDate - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"nguyin"},"content":"            String date \u003d t.description.substring(startOfDate + 4);","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"nguyin"},"content":"            newTask \u003d new Deadline(task, date);","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"nguyin"},"content":"            return newTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"nguyin"},"content":"        } else if (t.description.contains(\"event\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"nguyin"},"content":"            startOfDate \u003d t.description.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"nguyin"},"content":"            if(!t.description.contains(\"/at\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"nguyin"},"content":"                throw new InvalidEventFormat();","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"nguyin"},"content":"            String task \u003d t.description.substring(6, startOfDate - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"nguyin"},"content":"            String date \u003d t.description.substring(startOfDate + 4);","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"nguyin"},"content":"            newTask \u003d new Event(task, date);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"nguyin"},"content":"            return newTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"nguyin"},"content":"        throw new IllegalTaskException();","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"nguyin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nguyin"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Hello Bbygirl! I\u0027m Your Boyfriend \u003c3\");","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"How can I help you today? ;)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"nguyin"},"content":"        Task t \u003d new Task(in.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"nguyin"},"content":"        Task[] taskList \u003d new Task[100];","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"nguyin"},"content":"        while (!t.description.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"nguyin"},"content":"            if (t.description.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"nguyin"},"content":"                printTaskList(taskList, taskCount);","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"nguyin"},"content":"            } else if (t.description.contains(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"nguyin"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"nguyin"},"content":"                    markDone(t, taskCount, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"nguyin"},"content":"                } catch (IllegalDoneException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input a correct number BB... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"nguyin"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"nguyin"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"nguyin"},"content":"                    // add the new task into user\u0027s task list","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"nguyin"},"content":"                    Task newTask \u003d typeOfTask(t);","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"nguyin"},"content":"                    taskList[taskCount] \u003d newTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"nguyin"},"content":"                    taskCount +\u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"nguyin"},"content":"                    printTask(newTask, taskCount);","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"nguyin"},"content":"                } catch (IllegalTaskException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You have a typo BB.. ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"nguyin"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to add an item BB.. ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"nguyin"},"content":"                } catch (InvalidDeadlineFormat e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input deadline with \u0027/by\u0027 ... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"nguyin"},"content":"                } catch (InvalidEventFormat e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"nguyin"},"content":"                    System.out.println(\"You need to input event with \u0027/at\u0027 ... ;\u0027( try typing again\");","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"nguyin"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"nguyin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"nguyin"},"content":"            t \u003d new Task(in.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"nguyin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"nguyin"},"content":"        System.out.println(\"Goodbye. I will miss you sooo much :(\");","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nguyin":133,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Event object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Event object contains date that event is happening at, represented by a String.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"        return \"  [E]\" + super.toString() + \" (at: \" + by + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyin":20}},{"path":"src/main/java/IllegalDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"public class IllegalDoneException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":2}},{"path":"src/main/java/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Throws an exception when starting word that user input is not \"todo\", \"deadline\", or \"event\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class IllegalTaskException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/InvalidDeadlineFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Exception is thrown when deadline that is input by user is in an invalid format, ie. does not contain \"/by\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class InvalidDeadlineFormat extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/InvalidEventFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Exception is thrown when event that is input by user is in an invalid format, ie. does not contain \"/at\".","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":"public class InvalidEventFormat extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nguyin":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Task object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and the status of the task, represented by boolean.","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nguyin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nguyin":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nguyin"},"content":" * Represents a task that is added to the list by a user. A Todo object contains a description","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nguyin"},"content":" * represented by a String and a done status represented by a boolean. This is all inherited","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nguyin"},"content":" * from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nguyin"},"content":" * Inherits all methods from superclass Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nguyin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nguyin"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyin"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyin"},"content":"        return \"  [T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyin":17}}]
