[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"public class Duke {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Main entry point of the application and starts the interaction with user","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public void run() {","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        startChat();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    private void startChat() {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            do {","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"                ui.printDivider();","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"                String input \u003d in.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"                ui.printDivider();","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"                Command command \u003d Parser.getCommand(input);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"                command.execute(input, tasks, ui, storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"                isExit \u003d command.isExit(command);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            } while (!isExit);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        } catch (DukeException dukeE){","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            dukeE.printStackTrace();","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"weidak":59}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Quits the program","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * Parent class of commands to be executed by user","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public abstract void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Checks if \"bye\" command is called, returns false otherwise","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param command Command to verify","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @return True if ByeCommand is called","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public boolean isExit(Command command) {","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":23}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Executes the commands that adds a deadline task","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to add deadline item successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        tasks.addTask(input, ui, \"D\");","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":30}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Executes the commands that deletes a task given by the user","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to delete task item successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        tasks.deleteTask(input, ui);","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":30}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * Executes the commands that sets a task as done","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to set task item successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        tasks.setTaskAsDone(input, ui);","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":29}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public EventCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Executes the commands that adds a event task","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to add event item successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        tasks.addTask(input, ui, \"E\");","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    };","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":30}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public FindCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * Executes the commands that finds tasks related to keyword given","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to find tasks successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        tasks.findTasks(input, ui);","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    };","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":28}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Executes the commands that displays help","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to retrieve help","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        ui.printHelp();","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    };","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * Executes the commands that displays the tasks currently","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to display any tasks properly","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        ui.printList(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":28}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    public ToDoCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Executes the commands that adds a todo task","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param tasks TaskList of all the tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param ui Ui of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @param storage Storage of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If it is unable to add todo item successfully","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public void execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        tasks.addTask(input, ui, \"T\");","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    };","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"    private static final String DEADLINE_ITEM \u003d \"[D] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private String dueDate;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"     * Constructor to create Deadline object with its respective attributes","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * @param description Description of deadline","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     * @param dueDate Date to be completed by","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private String printBy() {","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        return \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        return DEADLINE_ITEM + super.toString() + printBy();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"weidak":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"    private static final String EVENT_ITEM \u003d \"[E] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"    private String timeOfEvent;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"     * Constructor to create Event object with its respective attributes","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     * @param description Description of event","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * @param timeOfEvent Time of event","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    public Event(String description, String timeOfEvent) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    public String printAt() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        return \" (at: \" + timeOfEvent + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        return EVENT_ITEM + super.toString() + printAt();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"weidak":27}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"    private static final String DONE \u003d \"[X] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"    private static final String NOT_DONE \u003d \"[ ] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * Constructor for a task and its description, initializes done to false.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * @param description Description of task","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Retrieves description of task","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @return description of task","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        return description;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * Retrieves isDone value of task","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     * @return isDone value of task","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        return isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * Sets the isDone value of task to true.","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"     * Checks for isDone in Task and outputs [X] if true or [ ] if false.","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"     * @param isDone boolean to see if task is done","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"     * @return output String that contains [X] or [ ]","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    public String printDone(boolean isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        return isDone ? DONE : NOT_DONE;","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        return printDone(isDone) + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"weidak":59}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"    private static final String TODO_ITEM \u003d \"[T] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"     * Constructor for ToDo object with its description","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"     * @param description Description of todo task","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        return TODO_ITEM + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"weidak":21}},{"path":"src/main/java/duke/utilities/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.utilities;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception for duke-related errors","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    DukeException(String msg) {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        super(msg);","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":12}},{"path":"src/main/java/duke/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.utilities;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" * Makes sense of the user inputs and returns the required commands for subsequent executions","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"public class Parser {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * Commands that tell the bot the event time or the due date of deadline","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private static final String ENTRY_AT \u003d \"/at\";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private static final String ENTRY_BY \u003d \"/by\";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private static final String SPACING \u003d \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_FORMAT_INVALID \u003d \"Command format is invalid. Please try again.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private static final String SAVE_AT \u003d \"(at:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private static final String SAVE_BY \u003d \"(by:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    private static final int COUNT_SPACE \u003d 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    private static boolean checkAtEntry(String entry) {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        if (entry.equals(ENTRY_AT) || entry.equals(SAVE_AT)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static boolean checkByEntry(String entry) {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        if (entry.equals(ENTRY_BY) || entry.equals(SAVE_BY)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     * Scans for the command","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"     * @param input input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"     * @return the command to be executed","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"     * @throws DukeException when the format is invalid","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    public static String scanCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        String[] words \u003d input.toLowerCase().split(SPACING);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        String command \u003d words[0];","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        boolean isInvalid \u003d words.length \u003c\u003d 1","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"                \u0026\u0026 !command.equals(ByeCommand.COMMAND_WORD)","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"                \u0026\u0026 !command.equals(ListCommand.COMMAND_WORD)","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"                \u0026\u0026 !command.equals(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        //Guard for invalid command format","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        if (isInvalid) {","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            System.out.println(command);","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"            throw new DukeException(ERROR_FORMAT_INVALID);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        return command;","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"     * Retrieves the command to execute for a given input by the user","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"     * @return The Command class that executes its respective function","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    public static Command getCommand(String input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"            String commandWord \u003d scanCommand(input);","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"                return new DeadlineCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"                return new DeleteCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"                return new DoneCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"                return new EventCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"                return new FindCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"            case ToDoCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"                return new ToDoCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"            default:","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        } catch (DukeException dukeE) {","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"            System.out.println(ERROR_FORMAT_INVALID);","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        //defaults to help","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     * Converts the type of task into the one defined by the user","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"     * @param input Input by user","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"     * @param type Type to be converted to","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"     * @return Task of the correct type for storing","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If the given input has an invalid format","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"    public static Task getTaskType(String input, String type) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        Task temp \u003d new Task(\"\");","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        switch (type) {","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        case \"T\":","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"            temp \u003d new ToDo(getDescription(input, false));","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"        case \"E\":","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"            temp \u003d new Event(getDescription(input, false),","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"                    getTimeOfEvent(input, false));","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"        case \"D\":","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"            temp \u003d new Deadline(getDescription(input, false),","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"                    getTimeOfEvent(input, false));","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"        default:","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"            System.out.println(\"Formatting error!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"        return temp;","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"     * Scans for the event time/due date of deadline of task","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"     * @param input input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"     * @return either the due date of deadline or event time","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"    public static String getTimeOfEvent(String input, boolean isSavingInput) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"        int startIdx \u003d getTimeStartIdx(input, isSavingInput) + COUNT_SPACE;","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"        int endIdx \u003d isSavingInput ? input.length() - 1 : input.length();","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        String timeOfEvent \u003d input.substring(startIdx, endIdx);","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"        return timeOfEvent;","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"    private static int getTimeStartIdx(String input, boolean isSavingInput) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"        String[] words \u003d input.split(SPACING);","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"        // Accounting for space and semicolon","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"        int startIdx \u003d isSavingInput ? 1 : 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"        for (String word : words) {","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"            if (checkAtEntry(word) || checkByEntry(word)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"                startIdx +\u003d ENTRY_AT.length();","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"            startIdx +\u003d word.length() + COUNT_SPACE;","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"        return startIdx;","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"     * Scans for the description of the input task","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"     * @param input input of the user","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"     * @return description of task","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"    public static String getDescription(String input, boolean isSavingFile) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"        String[] words \u003d input.split(SPACING);","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"        int spaceCount \u003d 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"        // If saving the file, we can start from the start and need not account for the command","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"        int startIdx \u003d isSavingFile ? 0 : words[0].length() + spaceCount;","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"        int endIdx \u003d getDescEndIdx(words, spaceCount);","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"        if (startIdx \u003e\u003d endIdx ) {","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"            throw new DukeException(\"Missing description\");","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"        return input.substring(startIdx, endIdx);","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"    private static int getDescEndIdx(String[] words, int spaceCount) {","lastModifiedDate":"2021-09-24"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"        int endIdx \u003d 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"        for (String word : words) {","lastModifiedDate":"2021-09-24"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"            boolean isEndOfDescription \u003d (checkAtEntry(word) || checkByEntry(word));","lastModifiedDate":"2021-09-24"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"            if (isEndOfDescription) {","lastModifiedDate":"2021-09-24"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"            endIdx +\u003d word.length() + spaceCount;","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"        return endIdx - spaceCount;","lastModifiedDate":"2021-09-24"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"weidak"},"content":"     * Parses the task into a string for storing","lastModifiedDate":"2021-09-24"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"     * @param task The task to be stored","lastModifiedDate":"2021-09-24"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"     * @return The string that is stored in data","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"     * @throws DukeException Unlikely but in case there is an error in the given Task","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"    public static String parseLineForSaving(Task task) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"        String timeOfEvent \u003d new String();","lastModifiedDate":"2021-09-24"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"        String command \u003d new String();","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":210,"author":{"gitId":"weidak"},"content":"        String markDone \u003d (task.isDone()) ? \"1 \" : \"0 \";","lastModifiedDate":"2021-09-24"},{"lineNumber":211,"author":{"gitId":"weidak"},"content":"        String description \u003d getDescription(task.toString().substring(8), true);","lastModifiedDate":"2021-09-24"},{"lineNumber":212,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":213,"author":{"gitId":"weidak"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2021-09-24"},{"lineNumber":214,"author":{"gitId":"weidak"},"content":"            command \u003d \"todo \";","lastModifiedDate":"2021-09-24"},{"lineNumber":215,"author":{"gitId":"weidak"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-24"},{"lineNumber":216,"author":{"gitId":"weidak"},"content":"            command \u003d \"event \";","lastModifiedDate":"2021-09-24"},{"lineNumber":217,"author":{"gitId":"weidak"},"content":"            timeOfEvent \u003d \" /at \" + getTimeOfEvent(task.toString().substring(8), true);","lastModifiedDate":"2021-09-24"},{"lineNumber":218,"author":{"gitId":"weidak"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-24"},{"lineNumber":219,"author":{"gitId":"weidak"},"content":"            command \u003d \"deadline \";","lastModifiedDate":"2021-09-24"},{"lineNumber":220,"author":{"gitId":"weidak"},"content":"            timeOfEvent \u003d \" /by \" + getTimeOfEvent(task.toString().substring(8), true);","lastModifiedDate":"2021-09-24"},{"lineNumber":221,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":222,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":223,"author":{"gitId":"weidak"},"content":"        return markDone + command + description + timeOfEvent + System.lineSeparator();","lastModifiedDate":"2021-09-24"},{"lineNumber":224,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":225,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":226,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":226}},{"path":"src/main/java/duke/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.utilities;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * For storing and retrieving data on the chatbot","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class Storage {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_CREATED_NEW_FILE \u003d \"No data found! A new file was created successfully.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    protected String filePath;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * Loads a file if it exists, else makes a new one","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * @return An arraylist containing the tasks loaded from file","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @throws DukeException When the save data is corrupted/invalid","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        checkForFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        TaskList data \u003d readFromFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        return data.getTasks();","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private void checkForFile() {","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"                System.out.println(MESSAGE_CREATED_NEW_FILE);","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        } catch (IOException ioError) {","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            ioError.printStackTrace();","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    private TaskList readFromFile() throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"                convertFileData(temp, scanner.nextLine());","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException fileE) {","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"            fileE.printStackTrace();","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        return temp;","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"    private void convertFileData(TaskList temp, String line) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        boolean isDone \u003d checkDone(words[0]);","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        String task \u003d line.substring(2);","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        String type \u003d checkType(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        temp.addTask(task, isDone, type);","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    private String checkType(String task) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        String type \u003d new String();","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        switch (Parser.scanCommand(task)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"            type \u003d \"T\";","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        case \"event\":","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"            type \u003d \"E\";","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"            type \u003d \"D\";","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        return type;","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"    private boolean checkDone(String word) {","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        return \"1\".equals(word);","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"     * Stores the ArrayList into the given directory","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"     * @param tasks ArrayList to be stored in the .txt","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"                writer.write(Parser.parseLineForSaving(t));","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"            writer.close();","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":109}},{"path":"src/main/java/duke/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.utilities;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class TaskList {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    private final String SPACING \u003d \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_TASK_ADDED \u003d \"Added task:\\n    \";","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_OUT_OF_RANGE \u003d \"No such task found! Try a range of 1 to \";","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private final String ERROR_WRONG_FORMAT \u003d \"Format error! Please try entering the task again\";","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private final String ERROR_WRONG_FIND_FORMAT \u003d \"Find format wrong! Please try again\";","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    private final String ERROR_NUMBER_NOT_FOUND \u003d \"Please key in a number instead pls :(\";","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private final String PRINT_REMOVE_MESSAGE \u003d \"Task removed :\\n    \";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private final String PRINT_DONE_MESSAGE_FRONT \u003d \"I have marked\\n     \";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private final String PRINT_DONE_MESSAGE_BACK \u003d \"\\n as done!\";","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        return tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * Adds a task to the TaskList from user input","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     * @param input Input of user","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param ui Prints the task that has just been added","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     * @param type Type of file to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    public void addTask(String input, Ui ui, String type) {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            Task temp \u003d Parser.getTaskType(input, type);","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            tasks.add(temp);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            System.out.println(MESSAGE_TASK_ADDED + temp);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            ui.printTaskNumber(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        } catch (DukeException dukeE) {","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            System.out.println(ERROR_WRONG_FORMAT);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"     * Adds a task to the TaskList from saved file","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"     * @param input Input from file","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"     * @param isDone Checks the task has been completed","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"     * @param type Type of file to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * @throws DukeException If file format is corrupted/invalid","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    public void addTask(String input, boolean isDone, String type) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        Task temp \u003d Parser.getTaskType(input, type);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"            temp.setDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        tasks.add(temp);","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"     * Deletes a task from TaskList","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"     * @param input The task index to be deleted","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"     * @param ui Prints which task is removed","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    public void deleteTask(String input, Ui ui) {","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        int taskIdx \u003d findTaskNumber(input);","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"            Task temp \u003d tasks.get(taskIdx);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"            tasks.remove(taskIdx);","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"            ui.print(System.lineSeparator() + PRINT_REMOVE_MESSAGE + temp);","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"            ui.print(MESSAGE_OUT_OF_RANGE + tasks.size());","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"     * Sets task in TaskList as done","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"     * @param input The task index to be set as done","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"     * @param ui Prints the task set as done","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"    public void setTaskAsDone(String input, Ui ui) {","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"            int taskIdx \u003d findTaskNumber(input);","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"            Task temp \u003d tasks.get(taskIdx);","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"            temp.setDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"            tasks.set(taskIdx, temp);","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"            System.out.println(PRINT_DONE_MESSAGE_FRONT + temp + PRINT_DONE_MESSAGE_BACK);","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"            ui.print(MESSAGE_OUT_OF_RANGE + tasks.size());","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"            ui.print(ERROR_NUMBER_NOT_FOUND);","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"    private int findTaskNumber(String input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"        int accountForArray \u003d 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"        String[] words \u003d input.split(SPACING);","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]) - accountForArray;","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"        return taskNumber;","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"     * Searches for the tasks that have the same keyword","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"     * @param input Keyword of the user","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"     * @param ui Prints the list of matches found in the TaskList","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"    public void findTasks(String input, Ui ui) {","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"            System.out.println(ERROR_WRONG_FIND_FORMAT);","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"            return;","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"        String keyword \u003d words[1].toLowerCase();","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cTask\u003e matches \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"                .filter(t -\u003e t.getDescription().toLowerCase().contains(keyword))","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"        ui.printMatchingList(matches);","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":135}},{"path":"src/main/java/duke/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package duke.utilities;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Ui {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     * Logo of the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    private final String LOGO \u003d \" _ __ _   _  __ _ _ __\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"            + \"| \u0027__| | | |/ _` | \u0027_ \\\\\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"            + \"| |  | |_| | (_| | | | |\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"            + \"|_|   \\\\__, |\\\\__,_|_| |_|\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"            + \"       __/ |\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"            + \"      |___/\";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * A decorative spacer between user inputs and outputs by the bot","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_WELCOME \u003d \"Hello from\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"            + LOGO","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            + \"\\nHow can I assist you? Type something below! :D\";","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private final String MESSAGE_NO_INPUT \u003d \"No input found! Please type \u003cmode\u003e + item\";","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private final String TASK_PLURAL \u003d \"tasks\";","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private final String TASK_SINGLE \u003d \"task\";","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private final String PRINT_TASK_MESSAGE_FRONT \u003d \"Now you have \";","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private final String PRINT_TASK_MESSAGE_BACK \u003d \" in the list.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    private final String SPACING \u003d \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public void print(String... input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        for (String m : input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"            System.out.println(m);","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"     * Prints the goodbye message","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"     * Prints the welcome message","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * Prints a divider","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    public void printDivider() {","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"     * Prints the list of tasks stored","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"     * @params tasks ArrayList to be printed","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"            System.out.print(counter + \". \");","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"            System.out.println(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"            counter++;","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        printTaskNumber(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        return;","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"     * Prints the number of tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    public void printTaskNumber(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        String task \u003d TASK_PLURAL;","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            task \u003d TASK_SINGLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        System.out.println(PRINT_TASK_MESSAGE_FRONT + tasks.size() + SPACING + task + PRINT_TASK_MESSAGE_BACK);","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"     * Prints the list of commands that can be used","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"    public void printHelp() {","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        System.out.println(\"Commands available: \");","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        print(ByeCommand.COMMAND_WORD, DeadlineCommand.COMMAND_WORD, DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"                DoneCommand.COMMAND_WORD, EventCommand.COMMAND_WORD, FindCommand.COMMAND_WORD,","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"                ListCommand.COMMAND_WORD, ToDoCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD);","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"     * Prints the list with matches in findTasks","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"     * @param matches ArrayList to be printed","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"    public void printMatchingList(ArrayList\u003cTask\u003e matches) {","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"            System.out.println(i+1 + \". \" + matches.get(i));","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"weidak":113}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"todo search for cs2113t tp ideas","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"event cs2101 meeting /at 9pm Saturday","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"deadline finish up ip /by thursday 2359","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"deadline finish up cs2113t /by tonight","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"delete 2","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"weidak":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"#diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"#if [ $? -eq 0 ]","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"#then","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"#    echo \"Test result: PASSED\"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"#    exit 0","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"#else","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"#    echo \"Test result: FAILED\"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"#    exit 1","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"#fi","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"weidak":11,"-":27}}]
