[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Luke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    __         _        ","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"   | |    _   _| | _____ ","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"   | |   | | | | |/ / _ \\","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"   | |__ | |_| |   \u003c  __/","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"williamlamjy":5,"-":19}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.ToDo;false;run","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.Event;true;meeting ;3-4pm","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.ToDo;true;run","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.ToDo;false;run","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"williamlamjy":4}},{"path":"data/luke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.ToDo;false;rest","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.Deadline;false;wake up;4aug","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"duke.tasktype.Event;false;running ;3-4pm","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"williamlamjy":3}},{"path":"src/main/java/duke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"import duke.textui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" * This program acts as a task manager list. It is able to read in tasks and add them to the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":" * It is able to mark tasks complete, delete tasks and print current tasks out.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":" * @author Lam Junyu William","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":" * @version v0.1","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":" * @since 26-9-2021","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"public class Luke {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     * This is the startup of the program. The file storage, user interface and TaskList is initialized here.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     * Any error with the file loading will lead to termination of the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * @param filePath path of the file where data of the pre-existing task list is stored at.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public Luke(String filePath){","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            ui.showFileErrorMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"            System.exit(-1);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     * Runs the program. It reads in the input from the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     * Then it executes the corresponding command.","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * Any error in the input will be reflected through error messages.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    public void run() {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        while(!isExit){","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"            try{","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"                ui.showLineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"                Command command \u003d Parser.parseInput(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"                command.setData(tasks, ui, storage);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"                command.execute();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"            } finally{","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"                ui.showLineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"     * Main method creates the instance of the program and runs it.","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"        new Luke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"williamlamjy":70}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":" * This is the parent class to the extended task classes.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"    protected String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the task class","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        return description;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * @return true is task is completed.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        return isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"     * Formats the task to be written into the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"     * This enables more convenient reading of the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted task","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    public String textFormatting() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"        return String.format(this.getClass().getName() + \";\" + isDone + \";\" + description);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"     * Gets the X icon to be shown if the task is completed.","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"     * @return String of status icon.","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"     * Returns a formatted task to the user on the command line interface.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted task","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"        return getStatusIcon() + \"] \";","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"williamlamjy":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class contains the arraylist for all the current tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * It is then able to handle functions to the tasks like add,delete and checkOff.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        return tasks.get(taskNo);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * Gets a task and returns a string with a format to write into the luke file.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * This format enables easier reading and processing of the tasks in the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     * @param taskIndex Index of the task to format","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted task","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    public String getTaskWithFormat(int taskIndex){","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        return tasks.get(taskIndex).textFormatting();","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public void addNewTask(Task addedTask){","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"        tasks.add(addedTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    public void deleteTask(int deletedTaskIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        tasks.remove(deletedTaskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    public TaskList findTask(String searchQuery){","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        ArrayList\u003cTask\u003e emptyResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        TaskList results \u003d new TaskList(emptyResults);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"        for(Task task : tasks){","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"            if(task.getDescription().contains(searchQuery)){","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"                results.addNewTask(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        return results;","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    public void checkOffTask(int taskNoCompletedIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        tasks.get(taskNoCompletedIndex).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":63}},{"path":"src/main/java/duke/commands/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" * This class adds a tasks to the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public class AddTask extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    private Task task;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the AddTask class.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"     * @param task Task that will be added.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public AddTask(Task task){","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     * Executes the adding the task to the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * It shows the AddTask messages through the ui.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     * It saves the data in the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException Thrown when there is an error writing to the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        tasks.addNewTask(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        ui.showTaskAddedMessage(task, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":38}},{"path":"src/main/java/duke/commands/CheckOffTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.customexception.IllegalNumberInputException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" * This class checks off a task in the task list as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public class CheckOffTask extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    private int taskNoCompletedIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the CheckOffTask class.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     * @param taskNoCompletedIndex Index of the task that is completed.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    public CheckOffTask(int taskNoCompletedIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        this.taskNoCompletedIndex \u003d taskNoCompletedIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     * Executes checking off the task in the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * Shows the message after checking off the task.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * Stores the data by writing into the file","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException Thrown when there is an error writing into the file","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     * @throws IllegalNumberInputException Thrown when the index provided is not within the size of the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException, IllegalNumberInputException {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        if((taskNoCompletedIndex \u003c 0) || (taskNoCompletedIndex \u003e\u003d tasks.getSize())){","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            throw new IllegalNumberInputException();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        if(tasks.getTask(taskNoCompletedIndex).isDone()){","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"            ui.showTaskCompletedAlreadyMessage(tasks.getTask(taskNoCompletedIndex));","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"        else {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"            tasks.checkOffTask(taskNoCompletedIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"            ui.showTaskCompletedMessage(tasks.getTask(taskNoCompletedIndex));","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":44}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import duke.textui.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import duke.customexception.IllegalNumberInputException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"import duke.customexception.EmptyNumberInputException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":" * This is the parent class to the extended command classes.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the command class.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public Command(){","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     * Sets the data by passing through the current taskList, ui and storage","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     * @param ui the current user interface","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @param storage the current file storage","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public void setData(TaskList taskList, Ui ui, Storage storage){","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    public abstract void execute() throws IOException, EmptyNumberInputException, IllegalNumberInputException;","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":44}},{"path":"src/main/java/duke/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.customexception.IllegalNumberInputException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" * This class deletes a task from the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public class DeleteTask extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    private int deletedTaskIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the DeleteTask class.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     * @param deletedTaskIndex Index of the task that will be deleted.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    public DeleteTask(int deletedTaskIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        this.deletedTaskIndex \u003d deletedTaskIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * Executes deleting the task from the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * Shows delete task messages.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * Stores the information by writing into the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException, IllegalNumberInputException {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        if(deletedTaskIndex \u003c 0 || deletedTaskIndex \u003e\u003d tasks.getSize()){","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            throw new IllegalNumberInputException();","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        ui.showTaskDeletedMessage(tasks.getTask(deletedTaskIndex), tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        tasks.deleteTask(deletedTaskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":38}},{"path":"src/main/java/duke/commands/ExitProgram.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class exits and terminates the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class ExitProgram extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Shows the goodbye messages and sets the program to exit.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     * Stores the information by writing to the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":23}},{"path":"src/main/java/duke/commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"public class FindTask extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"    private String searchQuery;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"    public FindTask(String searchQuery){","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"        this.searchQuery \u003d searchQuery;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"        ui.showSearchList(tasks.findTask(searchQuery));","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":16}},{"path":"src/main/java/duke/commands/PrintTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class prints the current tasks ib the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class PrintTasks extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Executes printing the list of tasks through the ui.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     * Stores the information by writing to the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":21}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.common;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":" * This class stores the messages that are shown to the user on the command line interface.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"public class Messages {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"    public static final String LINE_SEPARATOR \u003d \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"            + \"---------------------\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public static final String LOGO \u003d \" _           _        \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"            + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"            + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"            + \"| |_  | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you soon\";","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public static final String TASK_ADDED_MESSAGE \u003d \"Noted! I have added this task:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public static final String TASK_COMPLETED_MESSAGE \u003d \"Nice! I have marked this task as done:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public static final String TASK_DELETED_MESSAGE \u003d \"Noted! I have deleted this task:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    public static final String TASK_LIST_MESSAGE \u003d \"Okay! Here are your current tasks:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    public static final String FILE_ERROR_MESSAGE \u003d \"Oh no! There seems to be an error loading this file\";","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public static final String FUNCTIONS_USER_GUIDE_MESSAGE \u003d  \"done: marks a task from the list complete \"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"            + \"Parameters: NUMBER\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"            + \"delete: deletes a task from the list \"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"            + \"Parameters: NUMBER\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"            + \"Example: done 6\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            + \"find: finds all matching tasks to your search query\"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            + \" Parameters: SEARCH_QUERY\";","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public static final String TASKS_USER_GUIDE_MESSAGE \u003d \"todo: Adds a new todo task \"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"            + \"Parameters: DESCRIPTION\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"            + \"deadline: Adds a new deadline task \"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"            + \"Parameters: DESCRIPTION /DATE\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"            + \"event: Adds a new event task \"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"            + \"Parameters: DESCRIPTION /DURATION\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"            + \"Example: event jogging /3-4pm\";","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public static final String WELCOME_MESSAGE \u003d  \"Hello from\\n\" + LOGO","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"            + \"Im your very own personal task manager!\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"            + \"Begin by inputting your desired task\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"            + LINE_SEPARATOR + \"\\n\" + TASKS_USER_GUIDE_MESSAGE + \"\\n\" + LINE_SEPARATOR","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"            + \"\\nOr you can amend your current tasks in your list!\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"            + \"list: lists all your current tasks in the list\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"            + FUNCTIONS_USER_GUIDE_MESSAGE + \"\\n\" + LINE_SEPARATOR;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":48}},{"path":"src/main/java/duke/customexception/EmptyNumberInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.FUNCTIONS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class is thrown when there is no number input when it is expected to have one.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class EmptyNumberInputException extends Exception{","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Please input a valid command number!\\n\" + FUNCTIONS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":14}},{"path":"src/main/java/duke/customexception/EmptyTaskInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASKS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class is thrown when the description of the task is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class EmptyTaskInputException extends Exception{","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Invalid task format!\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"                + TASKS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":15}},{"path":"src/main/java/duke/customexception/EmptyTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASKS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class is thrown when the deadline date or event duration is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class EmptyTimeException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Invalid event duration or deadline date input\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"                + TASKS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":15}},{"path":"src/main/java/duke/customexception/IllegalFindInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"public class IllegalFindInputException extends Exception{","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Invalid search input!\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"                + \"find: Finds a keyword and lists all relevant tasks\"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"                + \" PARAMETERS: SEARCH_QUERY\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"                + \"Example: find meeting\";","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":12}},{"path":"src/main/java/duke/customexception/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class is thrown when the user inputs a completely invalid command.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class IllegalInputException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Invalid command! Here are the commands available:\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"                + TASKS_USER_GUIDE_MESSAGE","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"                + FUNCTIONS_USER_GUIDE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"williamlamjy":17}},{"path":"src/main/java/duke/customexception/IllegalNumberInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.customexception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":" * This class is thrown when the user inputs a number that is not within the size of the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"public class IllegalNumberInputException extends Exception{","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"        String errorMessage \u003d \"Number input is not in the list.\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"             \"Please input a number that is within the range of the list\";","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":13}},{"path":"src/main/java/duke/filemanager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.filemanager;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.ToDo;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":" * This class stores data of the task list by reading, writing and loading the luke file.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    private File file;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     * Initializes the Storage class with a file object.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * If the file does not exist, a new file and directory will be created.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * @param filePath name and directory of the file to be loaded/saved.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * @throws Exception Throws exception when there is an error loading/reading the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    public Storage(String filePath) throws Exception{","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            dir.mkdir();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            this.file \u003d new File(\"data/luke.txt\");","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     * Writes the current tasks to the file and stores the data.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     * @param tasks The current task list that is written to the file","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException Exception thrown when there is an error writing to the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    public void writeFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        FileWriter writeToFile \u003d new FileWriter(this.file);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"            writeToFile.write(tasks.getTaskWithFormat(i) + \"\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        writeToFile.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"     * Creates an arraylist to store all the current tasks in the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"     * This arraylist will be passed to store the current commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"     * This enables the user to load up the pre-existing task list and add more tasks to it.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"     * @return","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"        int taskNo \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"            String[] textSegment \u003d s.nextLine().split(\";\");","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"            if (textSegment[0].equals(\"duke.tasktype.ToDo\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"                Task todo \u003d new ToDo(textSegment[2]);","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"                tasks.add(todo);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"                if (textSegment[1].equals(\"true\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"                    tasks.get(taskNo).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"            } else if (textSegment[0].equals(\"duke.tasktype.Event\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"                Task event \u003d new Event(textSegment[2], textSegment[3]);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"                tasks.add(event);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"                if (textSegment[1].equals(\"true\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"                    tasks.get(taskNo).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"                Task deadline \u003d new Deadline(textSegment[2], textSegment[3]);","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"                tasks.add(deadline);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"                if (textSegment[1].equals(\"true\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"                    tasks.get(taskNo).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"            taskNo++;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        return tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":88}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import duke.customexception.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"import duke.tasktype.ToDo;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":" * This class parses user inputs and returns the corresponding command or task type.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"public abstract class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    private static String parseAfterSpace(String userInput) {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        return userInput.substring(userInput.indexOf(\" \") + 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    private static int getTaskIndex(String userInput) {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        String taskNo \u003d parseAfterSpace(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        int taskIndex \u003d Integer.parseInt(taskNo) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    private static boolean isSeparated(String userInput){","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        return userInput.contains(\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    private static String getCommand(String userInput){","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        return commandWord;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     * Returns the corresponding command object from the user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * Error messages will be shown if the input format is incorrect.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     * @param userInput The string that the user enters into the command line interface.","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"     * @return Command object","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"     * @throws Exception Throws an exception when there is an error in the user input format.","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    public static Command parseInput(String userInput) throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"                String commandWord \u003d getCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"                switch (commandWord) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"                case ExitProgram.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"                    return new ExitProgram();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"                case PrintTasks.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"                    return new PrintTasks();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"                case CheckOffTask.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"                    return prepareCheckOffTask(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"                case DeleteTask.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"                    return prepareDeleteTask(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"                case FindTask.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"                    validFindInputChecker(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"                    String searchQuery \u003d parseAfterSpace(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"                    return new FindTask(searchQuery);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"                case AddTask.TODO_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"                case AddTask.EVENT_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"                case AddTask.DEADLINE_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"                    return prepareAddTask(commandWord, userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"                default:","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"                    throw new IllegalInputException();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"    public static Task identifyTaskType(String commandWord, String userInput) throws EmptyTaskInputException, EmptyTimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"        if (!(userInput.contains(\" \"))) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"            throw new EmptyTaskInputException();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"        if(commandWord.equals(AddTask.TODO_COMMAND)){","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"            String description \u003d parseAfterSpace(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"            return new ToDo(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"            validTimelineChecker(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"            String timeline \u003d getTimeline(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"            String description \u003d getDescription(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"            if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"                return new Deadline(description, timeline);","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"                return new Event(description, timeline);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"    private static String getDescription(String userInput) {","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"        String description \u003d userInput.substring(userInput.indexOf(\" \") + 1, userInput.indexOf(\"/\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"        return description;","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"    private static String getTimeline(String userInput) {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"        String timeline \u003d userInput.substring(userInput.indexOf(\"/\") + 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"        return timeline;","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"    private static void validTimelineChecker(String userInput) throws EmptyTimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"        boolean isTimelineSeparated \u003d userInput.contains(\"/\");","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"        boolean isTimelineEmpty \u003d (userInput.indexOf(\"/\") + 1 \u003d\u003d userInput.length());","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"        if (!isTimelineSeparated || isTimelineEmpty) {","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"            throw new EmptyTimeException();","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"    private static void validFindInputChecker(String userInput) throws IllegalFindInputException {","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"        if (!isSeparated(userInput)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"            throw new IllegalFindInputException();","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"    public static Command prepareDeleteTask(String userInput) throws EmptyNumberInputException{","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        if(!isSeparated(userInput) || (parseAfterSpace(userInput).equals(null))) {","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"            throw new EmptyNumberInputException();","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"        int taskNoDeleted \u003d getTaskIndex(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"        return new DeleteTask(taskNoDeleted);","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"    public static Command prepareAddTask(String commandWord, String userInput) throws EmptyTaskInputException, EmptyTimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"        Task addedTask \u003d Parser.identifyTaskType(commandWord, userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"        return new AddTask(addedTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"    public static Command prepareCheckOffTask(String userInput) throws EmptyNumberInputException {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"        if(!isSeparated(userInput) || (parseAfterSpace(userInput).equals(null))) {","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"            throw new EmptyNumberInputException();","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"        int taskNoCompletedIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"        return new CheckOffTask(taskNoCompletedIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":134}},{"path":"src/main/java/duke/tasktype/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.tasktype;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class stores the information of a deadline task","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * It has an additional deadlineDate trait which stores","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" * when this task is due in a YYYY-MM-DD format.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    protected String date;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    protected final static char TASK_ICON \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     * Initialises the deadline class","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     * @param date The deadline date","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        return date;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     * Returns a string of the formatted deadline to be written into the file","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted deadline","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    public String textFormatting() {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        return String.format(super.textFormatting() + \";\" + getDate());","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     * Returns the string of the formatted deadline to the command line interface","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted deadline.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        return \"[\" + TASK_ICON + \"][\" + super.toString() + description + \"(by: \" + getDate() + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"williamlamjy":46}},{"path":"src/main/java/duke/tasktype/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.tasktype;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class stores the information of an event task","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * It stores the duration at which the event is held.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    protected String duration;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    protected final static char TASK_ICON \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * This initialises the event class","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     * @param description Description of the event","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     * @param duration Duration of the event","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public String getDuration() {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        return duration;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * Returns the formatted task as a string to be written into the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted event","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public String textFormatting() {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        return String.format(super.textFormatting() + \";\" + getDuration());","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"     * Returns the formatted task as a string to be displayed on the command line.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted event","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"        return \"[\" + TASK_ICON + \"][\" + super.toString() + description + \"(at: \" + getDuration() + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"williamlamjy":45}},{"path":"src/main/java/duke/tasktype/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.tasktype;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" * This class stores the information of the todo class.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    protected final static char TASK_ICON \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     * Returns the formatted task as a string to be written into the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted todo.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    public String textFormatting() {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        return String.format(super.textFormatting());","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * Returns the formatted task as a string to be shown on the command line.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * @return String of the formatted todo.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        return \"[\" + TASK_ICON + \"][\" + super.toString() + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"williamlamjy":32}},{"path":"src/main/java/duke/textui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package duke.textui;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.LINE_SEPARATOR;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.WELCOME_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.GOODBYE_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASK_ADDED_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASK_COMPLETED_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASK_DELETED_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.TASK_LIST_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import static duke.common.Messages.FILE_ERROR_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":" * This class is the user interface of the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":" * It takes in user input and displays the corresponding information on the command line.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * Initializes the user interface","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    public Ui(){","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    public String readCommand(){","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public void showLineSeparator(){","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    public void showWelcomeMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public void showGoodbyeMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public void showFileErrorMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(FILE_ERROR_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    public void showTaskAddedMessage(Task task, TaskList tasks){","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(TASK_ADDED_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in your list.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    public void showTaskCompletedMessage(Task task){","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(TASK_COMPLETED_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    public void showTaskCompletedAlreadyMessage(Task task){","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(\"Task \" + task.getDescription()","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"                + \" has been completed already!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    public void showTaskDeletedMessage(Task task, TaskList tasks){","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(TASK_DELETED_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(\"Now you have \" + (tasks.getSize()-1) + \" tasks in your list\");","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"    public void showTaskList(TaskList tasks){","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"            System.out.println(\"Stop worrying! You have no tasks for now.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"            System.out.println(TASK_LIST_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"            for (int taskNo \u003d 0; taskNo \u003c tasks.getSize(); taskNo++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"                System.out.println((taskNo + 1) + \". \" + tasks.getTask(taskNo));","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"    public void showSearchList(TaskList results){","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"        if(results.getSize() \u003d\u003d 0){","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"            System.out.println(\"Sorry! Could not find what you are looking for\");","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"        } else{","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"            System.out.println(\"Here\u0027s what I have found!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"            for(int resultNo \u003d 0; resultNo \u003c results.getSize(); resultNo++){","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"                System.out.println((resultNo + 1) + \".\" + results.getTask(resultNo));","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"    public void showErrorMessage(Exception e){","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"williamlamjy":85}}]
