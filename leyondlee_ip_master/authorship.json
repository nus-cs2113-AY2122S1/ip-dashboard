[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"    private static final String TASKS_FILENAME \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"    private static final String INPUT_PROMPT \u003d \"$ \";","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"leyondlee"},"content":"    private static final String TASK_DEADLINE_SPLITTER \u003d \"/by\";","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leyondlee"},"content":"    private static final String TASK_EVENT_SPLITTER \u003d \"/at\";","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_WALL \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_LIST_EMPTY \u003d \"Task list is empty\";","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_LIST_HEADER \u003d \"Task List:\";","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"Invalid task number\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_INVALID_TASK_TYPE \u003d \"Invalid task type\";","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FILEWRITER_ERROR \u003d \"FileWriter Error\";","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_DONE_USAGE \u003d \"Usage: %s \u003ctask number\u003e\";","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_TODO_USAGE \u003d \"Usage: %s \u003cdescription\u003e\";","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_DEADLINE_USAGE \u003d \"Usage: %s \u003cdescription\u003e %s \u003cdate/time\u003e\";","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_EVENT_USAGE \u003d \"Usage: %s \u003cdescription\u003e %s \u003cdate/time\u003e\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_DELETE_USAGE \u003d \"Usage: %s \u003ctask number\u003e\";","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_TASK_ALREADY_MARKED \u003d \"Task #%d is already marked as done.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_TASK_MARKED \u003d \"Task marked as done:\\n  %s\";","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_TASK_ADDED \u003d \"Got it. Task added:\\n  %s\\nThere are %d tasks in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_EXCEPTION \u003d \"An exception has occurred.\\n%s\";","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_TASK_DELETED \u003d \"Task deleted:\\n  %s\\nThere are %d tasks left in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"leyondlee"},"content":"    private static final String MESSAGE_FORMAT_CREATE_FILE_FAILED \u003d \"Fail to create file - %s\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"leyondlee"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"leyondlee"},"content":"    private static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"leyondlee"},"content":"     * Prints message within horizontal lines.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"leyondlee"},"content":"     * @param message The message to print.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"leyondlee"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"leyondlee"},"content":"        System.out.println(MESSAGE_WALL);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"leyondlee"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"leyondlee"},"content":"        System.out.println(MESSAGE_WALL);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"leyondlee"},"content":"     * Prints tasks in list format.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"leyondlee"},"content":"    private static void printTasks() {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"leyondlee"},"content":"        StringBuilder messageBuilder \u003d new StringBuilder(MESSAGE_LIST_HEADER);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"leyondlee"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i +\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"leyondlee"},"content":"            messageBuilder.append(\"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"leyondlee"},"content":"            messageBuilder.append(i + 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"leyondlee"},"content":"            messageBuilder.append(\": \");","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"leyondlee"},"content":"            messageBuilder.append(TASKS.get(i));","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"leyondlee"},"content":"        printMessage(messageBuilder.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"leyondlee"},"content":"     * Checks if string value is an integer.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"leyondlee"},"content":"     * @param string The string to check.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"leyondlee"},"content":"     * @return true if string can be converted to integer, else false.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"leyondlee"},"content":"    private static boolean isInteger(String string) {","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"leyondlee"},"content":"        boolean isInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"leyondlee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"leyondlee"},"content":"            int value \u003d Integer.parseInt(string);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"leyondlee"},"content":"            isInt \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"leyondlee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"leyondlee"},"content":"            isInt \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"leyondlee"},"content":"        return isInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"leyondlee"},"content":"     * Gets a non-empty user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"leyondlee"},"content":"     * @return Non-empty user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"leyondlee"},"content":"    private static String getUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"leyondlee"},"content":"        String input;","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"leyondlee"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"leyondlee"},"content":"            System.out.print(INPUT_PROMPT);","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"leyondlee"},"content":"            input \u003d SCANNER.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"leyondlee"},"content":"        } while (input.trim().isEmpty());","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"leyondlee"},"content":"        return input;","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"leyondlee"},"content":"     * Splits user input string into command and argument.","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"leyondlee"},"content":"     * @param input The user input string.","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"leyondlee"},"content":"     * @return String array: [0] - Command, [1] - argument.","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"leyondlee"},"content":"    private static String[] getCommandAndArgument(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"leyondlee"},"content":"        String[] result \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"leyondlee"},"content":"        return (result.length \u003d\u003d 2) ? result : new String[]{result[0], \"\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"leyondlee"},"content":"     * Executes the list command. Print tasks in the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"leyondlee"},"content":"    private static void executeListCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"leyondlee"},"content":"        if (TASKS.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"leyondlee"},"content":"            printMessage(MESSAGE_LIST_EMPTY);","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"leyondlee"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"leyondlee"},"content":"            printTasks();","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"leyondlee"},"content":"     * Checks if task index is valid.","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"leyondlee"},"content":"     * Note: Task index starts from 1 (not 0).","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"leyondlee"},"content":"     * @param taskNumber The task index.","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"leyondlee"},"content":"     * @return true if task index is valid, else false.","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"leyondlee"},"content":"    private static boolean isValidTaskNumber(int taskNumber) {","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"leyondlee"},"content":"        return (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d TASKS.size());","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"leyondlee"},"content":"     * Executes the done command. Marks the given task as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"leyondlee"},"content":"     * @param argument The argument from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"leyondlee"},"content":"     * @throws DukeException If argument is invalid/missing or task is already marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"leyondlee"},"content":"    private static void executeDoneCommand(String argument) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":153,"author":{"gitId":"leyondlee"},"content":"        if (!isInteger(argument)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(String.format(MESSAGE_FORMAT_DONE_USAGE, COMMAND_DONE));","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"leyondlee"},"content":"        int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"leyondlee"},"content":"        if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"leyondlee"},"content":"        // Get task object associated to the task index from list","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"leyondlee"},"content":"        Task task \u003d TASKS.get(taskNumber - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"leyondlee"},"content":"        if (task.isDone()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(String.format(MESSAGE_FORMAT_TASK_ALREADY_MARKED, taskNumber));","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"leyondlee"},"content":"        task.setAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"leyondlee"},"content":"        printMessage(String.format(MESSAGE_FORMAT_TASK_MARKED, task));","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"leyondlee"},"content":"     * Gets the task description and argument.","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"leyondlee"},"content":"     * @param argument The argument from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"leyondlee"},"content":"     * @param splitString The string to split at.","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"leyondlee"},"content":"     * @return String array: [0] - Description, [1] - Argument Value.","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":180,"author":{"gitId":"leyondlee"},"content":"    private static String[] getTaskDescriptionAndArg(String argument, String splitString) {","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"leyondlee"},"content":"        String[] argSplit \u003d argument.split(splitString, 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"leyondlee"},"content":"        argSplit[0] \u003d argSplit[0].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":183,"author":{"gitId":"leyondlee"},"content":"        if (argSplit.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"leyondlee"},"content":"            argSplit[1] \u003d argSplit[1].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"leyondlee"},"content":"            return argSplit;","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"leyondlee"},"content":"        return new String[]{argSplit[0], \"\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":190,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"leyondlee"},"content":"     * Executes the add task command. Adds a task depending on type.","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"leyondlee"},"content":"     * @param argument The argument from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"leyondlee"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"leyondlee"},"content":"     * @throws DukeException If command format is incorrect or taskType is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":197,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"leyondlee"},"content":"    private static void executeAddTask(String argument, char taskType) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":199,"author":{"gitId":"leyondlee"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"leyondlee"},"content":"        String[] descriptionAndArg;","lastModifiedDate":"2021-09-01"},{"lineNumber":202,"author":{"gitId":"leyondlee"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"leyondlee"},"content":"        case Task.TYPE_TODO:","lastModifiedDate":"2021-09-02"},{"lineNumber":204,"author":{"gitId":"leyondlee"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"leyondlee"},"content":"                throw new DukeException(String.format(MESSAGE_FORMAT_TODO_USAGE, COMMAND_TODO));","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"leyondlee"},"content":"            task \u003d new Todo(argument);","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"leyondlee"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"leyondlee"},"content":"        case Task.TYPE_DEADLINE:","lastModifiedDate":"2021-09-02"},{"lineNumber":211,"author":{"gitId":"leyondlee"},"content":"            descriptionAndArg \u003d getTaskDescriptionAndArg(argument, TASK_DEADLINE_SPLITTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"leyondlee"},"content":"            if (descriptionAndArg[0].isEmpty() || descriptionAndArg[1].isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"leyondlee"},"content":"                throw new DukeException(String.format(MESSAGE_FORMAT_DEADLINE_USAGE, COMMAND_DEADLINE, TASK_DEADLINE_SPLITTER));","lastModifiedDate":"2021-09-08"},{"lineNumber":214,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"leyondlee"},"content":"            task \u003d new Deadline(descriptionAndArg[0], descriptionAndArg[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"leyondlee"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"leyondlee"},"content":"        case Task.TYPE_EVENT:","lastModifiedDate":"2021-09-02"},{"lineNumber":219,"author":{"gitId":"leyondlee"},"content":"            descriptionAndArg \u003d getTaskDescriptionAndArg(argument, TASK_EVENT_SPLITTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"leyondlee"},"content":"            if (descriptionAndArg[0].isEmpty() || descriptionAndArg[1].isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":221,"author":{"gitId":"leyondlee"},"content":"                throw new DukeException(String.format(MESSAGE_FORMAT_EVENT_USAGE, COMMAND_EVENT, TASK_EVENT_SPLITTER));","lastModifiedDate":"2021-09-08"},{"lineNumber":222,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"leyondlee"},"content":"            task \u003d new Event(descriptionAndArg[0], descriptionAndArg[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":224,"author":{"gitId":"leyondlee"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":226,"author":{"gitId":"leyondlee"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":227,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(MESSAGE_INVALID_TASK_TYPE);","lastModifiedDate":"2021-09-08"},{"lineNumber":228,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":229,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":230,"author":{"gitId":"leyondlee"},"content":"        TASKS.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"leyondlee"},"content":"        printMessage(String.format(MESSAGE_FORMAT_TASK_ADDED, task, TASKS.size()));","lastModifiedDate":"2021-09-08"},{"lineNumber":232,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"leyondlee"},"content":"     * Executes the delete command. Removes the task from list.","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"leyondlee"},"content":"     * @param argument The argument from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"leyondlee"},"content":"     * @throws DukeException If argument is invalid/missing.","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"leyondlee"},"content":"    private static void executeDeleteCommand(String argument) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"leyondlee"},"content":"        if (!isInteger(argument)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(String.format(MESSAGE_FORMAT_DELETE_USAGE, COMMAND_DELETE));","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"leyondlee"},"content":"        int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"leyondlee"},"content":"        if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"leyondlee"},"content":"        Task removedTask \u003d TASKS.remove(taskNumber - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"leyondlee"},"content":"        printMessage(String.format(MESSAGE_FORMAT_TASK_DELETED, removedTask, TASKS.size()));","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"leyondlee"},"content":"     /** Writes the tasks in the list to the specified file","lastModifiedDate":"2021-09-15"},{"lineNumber":255,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"leyondlee"},"content":"     * @param filename The file to write into.","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"leyondlee"},"content":"     * @throws DukeException If file fails to create or something went wrong when writing to the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"leyondlee"},"content":"    private static void writeTasksToFile(String filename) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"leyondlee"},"content":"        if (!Util.createFile(filename)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(String.format(MESSAGE_FORMAT_CREATE_FILE_FAILED, TASKS_FILENAME));","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"leyondlee"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"leyondlee"},"content":"            FileWriter fileWriter \u003d new FileWriter(filename);","lastModifiedDate":"2021-09-15"},{"lineNumber":266,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"leyondlee"},"content":"            for (Task task : TASKS) {","lastModifiedDate":"2021-09-15"},{"lineNumber":268,"author":{"gitId":"leyondlee"},"content":"                fileWriter.write(String.format(\"%s\\n\", task.toFileString()));","lastModifiedDate":"2021-09-15"},{"lineNumber":269,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":270,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":271,"author":{"gitId":"leyondlee"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":272,"author":{"gitId":"leyondlee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":273,"author":{"gitId":"leyondlee"},"content":"            throw new DukeException(MESSAGE_FILEWRITER_ERROR);","lastModifiedDate":"2021-09-15"},{"lineNumber":274,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":275,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":276,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":277,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":278,"author":{"gitId":"leyondlee"},"content":"     * Executes a command.","lastModifiedDate":"2021-09-01"},{"lineNumber":279,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":280,"author":{"gitId":"leyondlee"},"content":"     * @param command  The command from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-01"},{"lineNumber":281,"author":{"gitId":"leyondlee"},"content":"     * @param argument The argument from getCommandAndArgument(\u003cstring\u003e).","lastModifiedDate":"2021-09-01"},{"lineNumber":282,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":283,"author":{"gitId":"leyondlee"},"content":"    private static void executeCommand(String command, String argument) {","lastModifiedDate":"2021-09-01"},{"lineNumber":284,"author":{"gitId":"leyondlee"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":285,"author":{"gitId":"leyondlee"},"content":"            boolean hasListChanged \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":286,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":287,"author":{"gitId":"leyondlee"},"content":"            switch (command) {","lastModifiedDate":"2021-09-01"},{"lineNumber":288,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2021-09-01"},{"lineNumber":289,"author":{"gitId":"leyondlee"},"content":"                executeListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":290,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":291,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":292,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_DONE:","lastModifiedDate":"2021-09-01"},{"lineNumber":293,"author":{"gitId":"leyondlee"},"content":"                executeDoneCommand(argument);","lastModifiedDate":"2021-09-01"},{"lineNumber":294,"author":{"gitId":"leyondlee"},"content":"                hasListChanged \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":295,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":296,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":297,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2021-09-01"},{"lineNumber":298,"author":{"gitId":"leyondlee"},"content":"                executeAddTask(argument, Task.TYPE_TODO);","lastModifiedDate":"2021-09-02"},{"lineNumber":299,"author":{"gitId":"leyondlee"},"content":"                hasListChanged \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":300,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":301,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":302,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-01"},{"lineNumber":303,"author":{"gitId":"leyondlee"},"content":"                executeAddTask(argument, Task.TYPE_DEADLINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":304,"author":{"gitId":"leyondlee"},"content":"                hasListChanged \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":305,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":306,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":307,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2021-09-01"},{"lineNumber":308,"author":{"gitId":"leyondlee"},"content":"                executeAddTask(argument, Task.TYPE_EVENT);","lastModifiedDate":"2021-09-02"},{"lineNumber":309,"author":{"gitId":"leyondlee"},"content":"                hasListChanged \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":310,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":311,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":312,"author":{"gitId":"leyondlee"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2021-09-15"},{"lineNumber":313,"author":{"gitId":"leyondlee"},"content":"                executeDeleteCommand(argument);","lastModifiedDate":"2021-09-15"},{"lineNumber":314,"author":{"gitId":"leyondlee"},"content":"                hasListChanged \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":315,"author":{"gitId":"leyondlee"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":316,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":317,"author":{"gitId":"leyondlee"},"content":"            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":318,"author":{"gitId":"leyondlee"},"content":"                throw new DukeException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-08"},{"lineNumber":319,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":320,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":321,"author":{"gitId":"leyondlee"},"content":"            if (hasListChanged) {","lastModifiedDate":"2021-09-15"},{"lineNumber":322,"author":{"gitId":"leyondlee"},"content":"                writeTasksToFile(TASKS_FILENAME);","lastModifiedDate":"2021-09-15"},{"lineNumber":323,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":324,"author":{"gitId":"leyondlee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":325,"author":{"gitId":"leyondlee"},"content":"            printMessage(String.format(MESSAGE_FORMAT_EXCEPTION, e.getMessage()));","lastModifiedDate":"2021-09-08"},{"lineNumber":326,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":327,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":328,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":329,"author":{"gitId":"leyondlee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":330,"author":{"gitId":"leyondlee"},"content":"        printMessage(MESSAGE_WELCOME);","lastModifiedDate":"2021-09-01"},{"lineNumber":331,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":332,"author":{"gitId":"leyondlee"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":333,"author":{"gitId":"leyondlee"},"content":"        do {","lastModifiedDate":"2021-09-01"},{"lineNumber":334,"author":{"gitId":"leyondlee"},"content":"            String input \u003d getUserInput();","lastModifiedDate":"2021-09-01"},{"lineNumber":335,"author":{"gitId":"leyondlee"},"content":"            String[] commandAndArgument \u003d getCommandAndArgument(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":336,"author":{"gitId":"leyondlee"},"content":"            String command \u003d commandAndArgument[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":337,"author":{"gitId":"leyondlee"},"content":"            String argument \u003d commandAndArgument[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":338,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":339,"author":{"gitId":"leyondlee"},"content":"            if (command.equals(COMMAND_BYE)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":340,"author":{"gitId":"leyondlee"},"content":"                isRunning \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":341,"author":{"gitId":"leyondlee"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":342,"author":{"gitId":"leyondlee"},"content":"                executeCommand(command, argument);","lastModifiedDate":"2021-09-01"},{"lineNumber":343,"author":{"gitId":"leyondlee"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":344,"author":{"gitId":"leyondlee"},"content":"        } while (isRunning);","lastModifiedDate":"2021-09-08"},{"lineNumber":345,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":346,"author":{"gitId":"leyondlee"},"content":"        printMessage(MESSAGE_BYE);","lastModifiedDate":"2021-09-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"leyondlee":345,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"        super(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"leyondlee":7}},{"path":"src/main/java/duke/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"public class Util {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"    public static Path getPathFromFilename(String filename) {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"        String separator \u003d FileSystems.getDefault().getSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"leyondlee"},"content":"        String[] filenameSplit \u003d filename.split(separator.replace(\"\\\\\",\"\\\\\\\\\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"        Path path;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"        if (filenameSplit.length \u003e 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"leyondlee"},"content":"            path \u003d Paths.get(filenameSplit[0], Arrays.copyOfRange(filenameSplit, 1, filenameSplit.length - 1));","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"leyondlee"},"content":"            path \u003d Paths.get(filenameSplit[0]);","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"leyondlee"},"content":"        return path;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"leyondlee"},"content":"    public static boolean fileExists(String filename) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leyondlee"},"content":"        Path path \u003d getPathFromFilename(filename);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"leyondlee"},"content":"        return Files.exists(path);","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"leyondlee"},"content":"    public static boolean createFile(String filename) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"leyondlee"},"content":"        if (fileExists(filename)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"leyondlee"},"content":"            return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"leyondlee"},"content":"        Path path \u003d getPathFromFilename(filename);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"leyondlee"},"content":"        Path parentPath \u003d path.getParent();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"leyondlee"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"leyondlee"},"content":"            Files.createDirectories(parentPath);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"leyondlee"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"leyondlee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"leyondlee"},"content":"            return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"leyondlee"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"leyondlee"},"content":"        return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"leyondlee":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"    private String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"        super(description, Task.TYPE_DEADLINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"     * Returns string in list entry format.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leyondlee"},"content":"     * eg. [T][ ] task1 (by: Sunday)","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"     * @return The formatted string.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"%c | %d | %s | %s\", taskType, (isDone) ? 1 : 0, description, by);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leyondlee":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"    private String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"        super(description, Task.TYPE_EVENT);","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"     * Returns string in list entry format.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leyondlee"},"content":"     * eg. [T][ ] task1 (at: Aug 6th 2-4pm)","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"     * @return The formatted string.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"%c | %d | %s | %s\", taskType, (isDone) ? 1 : 0, description, at);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leyondlee":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"    public static final char TYPE_TODO \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"    public static final char TYPE_DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"    public static final char TYPE_EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"    protected String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"    protected char taskType;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"    public Task(String description, char taskType) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"leyondlee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"    public abstract String toFileString();","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"leyondlee"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"leyondlee"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"leyondlee"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"leyondlee"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"leyondlee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"leyondlee"},"content":"     * Returns string in list entry format.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"leyondlee"},"content":"     * eg. [T][ ] task1","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"leyondlee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"leyondlee"},"content":"     * @return The formatted string.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"leyondlee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"leyondlee"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"[%c][%c] %s\", taskType, (isDone() ? \u0027x\u0027 : \u0027 \u0027), description);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"leyondlee":38}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"        super(description, Task.TYPE_TODO);","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"        return String.format(\"%c | %d | %s\", taskType, (isDone) ? 1 : 0, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leyondlee":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leyondlee"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"leyondlee"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"leyondlee"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leyondlee"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leyondlee"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leyondlee"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leyondlee"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leyondlee"},"content":"done 5","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leyondlee"},"content":"afhnjaqoifrrqo9irthq","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"event lunch","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leyondlee"},"content":"event lunch /at","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"leyondlee"},"content":"deadline assignment","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"leyondlee"},"content":"deadline assignment /by","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"leyondlee"},"content":"delete 3","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"leyondlee"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leyondlee":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"leyondlee"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leyondlee"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leyondlee":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"leyondlee"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leyondlee"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leyondlee":2,"-":36}}]
