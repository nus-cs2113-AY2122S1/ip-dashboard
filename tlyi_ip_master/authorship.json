[{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import duke.logic.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import duke.storage.exceptions.CannotReadFromFileException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import duke.storage.exceptions.UnableToWriteToFileException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import static duke.logic.commands.Command.requiresStorageRewrite;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":" * Main class of the Dude bot","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"public class Main {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private void start() {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            ui.showWelcome();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            this.tasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            ui.showTasksLoaded(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        } catch (CannotReadFromFileException | UnableToWriteToFileException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            ui.showMessageFramedWithDivider(e.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    private void exit() {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        ui.showBye();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        command.setTasks(this.tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        CommandResult result \u003d command.execute();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (requiresStorageRewrite(command)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                storage.rewriteTaskListToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            } catch (UnableToWriteToFileException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                ui.showMessageFramedWithDivider(e.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    private void enterTaskModeUntilByeCommand() {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        Command command;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        do {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            ui.showMessageFramedWithDivider(result.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } while (!ByeCommand.isBye(command));","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"     * Entry point of the application.","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"     * Shows welcome message and enters task mode, which handles the user interaction","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        new Main().run(args);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    private void run(String[] args) {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        start();","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        enterTaskModeUntilByeCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        exit();","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":78}},{"path":"src/main/java/duke/commons/core/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Contains commonly used message formats in UI","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class Messages {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    //Command Words","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_LIST \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DEADLINE_PREFIX \u003d \"by\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_EVENT_PREFIX \u003d \"at\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DONE \u003d \"done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_COMMAND_WORD_LIST \u003d \"commands\";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":20}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.data.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * This class is used for tasks that need to be done before a specific date/time.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * E.g: submit iP by thurs 2359","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        setDeadline(deadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        return deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     * Returns Deadline task formatted in the form \"[D][ ] description (by: deadline)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Deadline task string","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        return DEADLINE_LOGO + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"     * Returns Deadline task formatted for data file in the form \"D | 1/0 | description | deadline\"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Deadline task string for data file","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public String toTextFileString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        return DEADLINE_ACRONYM + \" | \" + super.toTextFileString() + \" | \" + deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tlyi":47}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.data.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * This class is used for tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * E.g: team meeting at 9pm","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    protected String dateAndTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        setDateAndTime(dateAndTime);","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public Event(String description, String dateAndTime, boolean isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        return dateAndTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public void setDateAndTime(String dateAndTime) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     * Returns Event task formatted in the form \"[E][ ] description (at: date/time)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Event task string","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        return EVENT_LOGO + super.toString() + \" (at: \" + dateAndTime + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"     * Returns Event task formatted for data file in the form \"E | 1/0 | description | dateAndTime\"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Event task string for data file","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public String toTextFileString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        return EVENT_ACRONYM + \" | \" + super.toTextFileString() + \" | \" + dateAndTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tlyi":47}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.data.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskAlreadyDoneException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * This class is used to create tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Each Task must contain a description and can either be marked done or not done.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    protected String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    protected static final String ICON_DONE \u003d \"[X]\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    protected static final String ICON_NOT_DONE \u003d  \"[ ]\";","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String TODO_ACRONYM \u003d \"T\";","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    protected static final String TODO_LOGO \u003d \"[\" + TODO_ACRONYM + \"]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String DEADLINE_ACRONYM \u003d \"D\";","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    protected static final String DEADLINE_LOGO \u003d \"[\" + DEADLINE_ACRONYM + \"]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String EVENT_ACRONYM \u003d \"E\";","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    protected static final String EVENT_LOGO \u003d \"[\" + EVENT_ACRONYM + \"]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        return (this.isDone ? ICON_DONE : ICON_NOT_DONE); //marks task done with \"X\"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    public void markAsDone() throws TaskAlreadyDoneException {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        if (!this.isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            throw new TaskAlreadyDoneException();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"     * Returns Task formatted for application, in the form \"[ ] description\"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Task string for application","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"     * Returns Task formatted for data file, in the form \"1/0 | description\"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"     * where 1 \u003d done, 0 \u003d not done","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Task string for data file","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public String toTextFileString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"tlyi":67}},{"path":"src/main/java/duke/data/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.data.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskAlreadyDoneException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskListEmptyException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskNumOutOfBoundsException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.EMPTY;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * ArrayList of Tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class TaskList {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    private final ArrayList\u003cTask\u003e internalTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"     * Constructs empty list","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"     * Constructs task list from list of Tasks (from storage)","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"       internalTasks.addAll(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     * Converts task number to index number (difference is a result of 0-base vs 1-base)","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public int convertToIndexNum(int taskNum) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        return taskNum - 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"     * Adds task to list","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"      internalTasks.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"     * Deletes task in list, given the task number","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    public void deleteTask(int taskNum) throws TaskListEmptyException, TaskNumOutOfBoundsException {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        if (internalTasks.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            throw new TaskListEmptyException();","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            internalTasks.remove(convertToIndexNum(taskNum));","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            throw new TaskNumOutOfBoundsException();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"     * Marks task as done, given the task number","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    public void markTaskAsDone(int taskNum) throws TaskListEmptyException, TaskNumOutOfBoundsException,","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            TaskAlreadyDoneException {","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        if (internalTasks.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            throw new TaskListEmptyException();","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            internalTasks.get(convertToIndexNum(taskNum)).markAsDone();","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            throw new TaskNumOutOfBoundsException();","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"     * Returns the ArrayList of tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        return this.internalTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"     * Returns the task at specific task number","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"    public Task getTaskAtNum(int taskNum) throws TaskNumOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"            return this.internalTasks.get(convertToIndexNum(taskNum));","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            throw new TaskNumOutOfBoundsException();","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"     * Returns size of tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"    public int getNumTasks() {","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"        return this.internalTasks.size();","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"     * Returns all the tasks in string form","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    public String getStringOfAllTasks() {","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"        String stringOfAllTasks \u003d EMPTY;","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"        int taskNum \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"        for (Task task : internalTasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"            stringOfAllTasks \u003d stringOfAllTasks + taskNum + \".\" + task.toString() + LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            taskNum++;","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"        return stringOfAllTasks.trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":116}},{"path":"src/main/java/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.data.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * This class is used for tasks without any date/time attached to it.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * E.g: visit new theme park","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"     * Returns Todo task formatted for application, in the form \"[T][ ] description\"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Todo task string for application","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        return TODO_LOGO + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     * Returns Todo task formatted for data file in the form \"T | 1/0 | description\"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @return Formatted Todo task string for data file","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public String toTextFileString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        return TODO_ACRONYM + \" | \" + super.toTextFileString();","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tlyi":38}},{"path":"src/main/java/duke/logic/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + \" X /by Y\" + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Add task X with deadline Y\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d   \"Invalid format! Please input a deadline, \"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + LS + \"in the format \" + MESSAGE_COMMAND_FORMAT + \", where X is the task and Y is the deadline!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX \u003d \"by\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Added to list: %1$s \" + LS + \"Current number of tasks: %2$d\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private Deadline toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public AddDeadlineCommand(String description, String deadline) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        this.toAdd \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        super.tasks.addTask(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(), super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":30}},{"path":"src/main/java/duke/logic/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + \" X /at Y\" + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Add event X with date/time details Y\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d  \"Invalid format! Please input a date, \"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + LS + \"in the format \" + MESSAGE_COMMAND_FORMAT + \", where X is the event and Y is the date!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX \u003d \"at\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Added to list: %1$s \" + LS + \"Current number of tasks: %2$d\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private Event toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public AddEventCommand(String description, String dateAndTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        this.toAdd \u003d new Event(description, dateAndTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        super.tasks.addTask(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd, super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":30}},{"path":"src/main/java/duke/logic/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Todo;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d  QUOTATION + COMMAND_WORD + \" X\" + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Add task X with deadline Y\";","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Added to list: %1$s \" + LS + \"Current number of tasks: %2$d\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    private Todo toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        this.toAdd \u003d new Todo(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        super.tasks.addTask(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd, super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":25}},{"path":"src/main/java/duke/logic/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Stop Dude :(\";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Stopping Dude... :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":20}},{"path":"src/main/java/duke/logic/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Abstract class used to represent executable Commands","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * All Commands can be executed to return a CommandResult","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"     * Provides the task list that the command will operate on","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"     * @param tasks TaskList class containing current tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public void setTasks(TaskList tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresStorageRewrite(Command command) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddDeadlineCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                || command instanceof AddEventCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                || command instanceof AddTodoCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteTaskCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                || command instanceof MarkTaskAsDoneCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"                || command instanceof ByeCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":31}},{"path":"src/main/java/duke/logic/commands/CommandListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.MESSAGE_COMMAND_LIST;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandListCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"commands\";","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : See this list of commands again\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_COMMAND_LIST);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":16}},{"path":"src/main/java/duke/logic/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"public class CommandResult {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"    public final String messageToBeShown;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"    public CommandResult(String messageToBeShown) {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"        this.messageToBeShown \u003d messageToBeShown;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        return this.messageToBeShown;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    //TODO: Create separate constructor for list vers","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    //","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/duke/logic/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskListEmptyException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskNumOutOfBoundsException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + \" X\" + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Delete task number X\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d \"Invalid format! Please input a task number to be deleted, \"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        + LS + \"in the format \" + MESSAGE_COMMAND_FORMAT + \", where X is the task number!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static final String MESSSAGE_SUCCESS \u003d \"Alrightys! I have removed the following task: %1$s \"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + LS + \"Current number of tasks: %2$d\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_TASK_NUM_INVALID \u003d \"Please input a valid task number from 1 to %d!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private int taskNum;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public DeleteTaskCommand(int taskNum) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            final String deletedTaskString \u003d super.tasks.getTaskAtNum(this.taskNum).toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            super.tasks.deleteTask(this.taskNum);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSSAGE_SUCCESS, deletedTaskString, super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        } catch (TaskListEmptyException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        } catch (TaskNumOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NUM_INVALID, super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":37}},{"path":"src/main/java/duke/logic/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * This Command is used to return incorrect command format messages.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * When executed, it returns CommandResult with corresponding error.","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private String errorMessage;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public IncorrectCommand(String errorMessage) {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(this.errorMessage);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/duke/logic/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.EMPTY;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.MESSAGE_NO_TASKS_YET;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : See lists of tasks\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_INTRODUCE_TASKS \u003d \"These are your current tasks:\" + LS + \"%s\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        String listOfTasks \u003d super.tasks.getStringOfAllTasks();","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"        if (listOfTasks.equals(EMPTY)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_NO_TASKS_YET);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_INTRODUCE_TASKS, listOfTasks));","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":23}},{"path":"src/main/java/duke/logic/commands/MarkTaskAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskAlreadyDoneException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskListEmptyException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.TaskNumOutOfBoundsException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class MarkTaskAsDoneCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + \" X\" + QUOTATION;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_DESCRIPTION \u003d MESSAGE_COMMAND_FORMAT + \" : Mark task number X as done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d \"Invalid format! Please input a task number to be marked as done, \"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + LS + \"in the format \" + MESSAGE_COMMAND_FORMAT + \", where X is the task number!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Well done! I\u0027ve marked this task as done. ^_^\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_TASK_NUM_INVALID \u003d \"Please input a valid task number from 1 to %d!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private int taskNum;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public MarkTaskAsDoneCommand(int taskNum) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            super.tasks.markTaskAsDone(taskNum);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        } catch (TaskListEmptyException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        } catch (TaskNumOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NUM_INVALID, super.tasks.getNumTasks()));","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        } catch (TaskAlreadyDoneException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":38}},{"path":"src/main/java/duke/logic/commands/exceptions/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"public class InvalidCommandFormatException extends Exception{","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":5}},{"path":"src/main/java/duke/logic/commands/exceptions/MissingTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"public class MissingTaskDescriptionException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Please specify a name for the task!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"    public MissingTaskDescriptionException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":14}},{"path":"src/main/java/duke/logic/commands/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands.exceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"public class TaskAlreadyDoneException extends Exception{","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d  \"Task has already been marked as done! Good job!\" + LS +","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"            \"Try marking another task as done! ^\u003d^\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public TaskAlreadyDoneException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/duke/logic/commands/exceptions/TaskListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"public class TaskListEmptyException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d \"No tasks yet, add a task now!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"    public TaskListEmptyException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":14}},{"path":"src/main/java/duke/logic/commands/exceptions/TaskNumOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.commands.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"public class TaskNumOutOfBoundsException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":4}},{"path":"src/main/java/duke/logic/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddEventCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.CommandListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.IncorrectCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.MarkTaskAsDoneCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.exceptions.MissingTaskDescriptionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.EMPTY;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":" * Method of parsing commands partially adapted from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"public class Parser {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"     private static final String ERROR_MESSAGE_COMMAND_DOES_NOT_EXIST \u003d \"Command does not exist @_@\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where 0th index is command string and 1st index is the remaining parameters","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     * Command string and parameter string is assumed to be separated by the first \" \" in input","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     * If no parameters are provided in the input, 1st index will be set to EMPTY","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     * @return String array [command, parameters]","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private String[] splitInputIntoCommandAndParams(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        String[] commandAndParams \u003d new String[2];","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        final String[] splitInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        //command string","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        commandAndParams[0] \u003d splitInput[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        //param string, if not given, set to EMPTY for error handling","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        commandAndParams[1] \u003d (splitInput.length \u003e\u003d 2) ? splitInput[1] : EMPTY;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        return commandAndParams;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where the 0th index is the task description and 1st index is the additional info (i.e date)","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"     * Description and info is assumed to be separated by the first \"/\" in input","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"     * If no description is provided, throw MissingTaskDescriptionException","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"     * If no additional info is provided, 1st index will be set to EMPTY","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"     * @param params Params string intended to be returned from splitInputIntoCommandAndParams(),","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"     *               thus assumed to be from a valid command.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"     * @return String array [description, info]","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    private String[] splitParamsIntoDescriptionAndInfo(String params) throws MissingTaskDescriptionException {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        final String[] splitParams \u003d params.trim().split(\"/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        String[] descriptionAndInfo \u003d new String[2];","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        //description string","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        descriptionAndInfo[0] \u003d splitParams[0].trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        if (descriptionAndInfo[0].equals(EMPTY)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            throw new MissingTaskDescriptionException();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        //other info string, if not given, return EMPTY for error handling","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        descriptionAndInfo[1] \u003d (splitParams.length \u003e\u003d 2) ? splitParams[1].trim() : EMPTY;","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        return descriptionAndInfo;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     * Returns the date of the task in String form","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"     * Date is assumed to be after the command prefix strings \"at\" or \"by\"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"     * If invalid command prefix is given or no date is provided, throw InvalidCommandFormatException","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     * @param commandPrefix Prefix to extract date with","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"     * @param info String containing prefix and date","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"     * @return Date in String form","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    public static String extractDate(String commandPrefix, String info) throws InvalidCommandFormatException {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        final String[] words \u003d info.split(\" \", 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        if (!words[0].equals(commandPrefix) || words.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            throw new InvalidCommandFormatException();","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            return words[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"    private Command parseAddTodo (String params) {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        final String[] descriptionAndInfo;","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"            descriptionAndInfo \u003d splitParamsIntoDescriptionAndInfo(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"            final String description \u003d descriptionAndInfo[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            return new AddTodoCommand(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        } catch (MissingTaskDescriptionException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(e.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    private Command parseAddDeadline (String params) {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"        final String[] descriptionAndInfo;","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"            descriptionAndInfo \u003d splitParamsIntoDescriptionAndInfo(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"            final String description \u003d descriptionAndInfo[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"            final String info \u003d descriptionAndInfo[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"            String date \u003d extractDate(AddDeadlineCommand.COMMAND_PREFIX, info);","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"            return new AddDeadlineCommand(description, date);","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"        } catch (MissingTaskDescriptionException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(e.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(AddDeadlineCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"    private Command parseAddEvent (String params) {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"        final String[] descriptionAndInfo;","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"            descriptionAndInfo \u003d splitParamsIntoDescriptionAndInfo(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            final String description \u003d descriptionAndInfo[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            final String info \u003d descriptionAndInfo[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"            String date \u003d extractDate(AddEventCommand.COMMAND_PREFIX, info);","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"            return new AddEventCommand(description, date);","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"        } catch (MissingTaskDescriptionException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(e.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(AddEventCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"    private Command parseMarkTaskAsDone (String params) {","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"            int taskNum \u003d Integer.parseInt(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"            return new MarkTaskAsDoneCommand(taskNum);","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(MarkTaskAsDoneCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"    private Command parseDeleteTask (String params) {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            int taskNum \u003d Integer.parseInt(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"            return new DeleteTaskCommand(taskNum);","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(DeleteTaskCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"     * Returns the correct command to be executed depending on user input","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"        final String[] commandAndParams \u003d splitInputIntoCommandAndParams(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"        final String commandWord \u003d commandAndParams[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"        final String params \u003d commandAndParams[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"            return parseAddTodo(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"            return parseAddDeadline(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"            return parseAddEvent(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"        case MarkTaskAsDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"            return parseMarkTaskAsDone(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"            return parseDeleteTask(params);","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"        case CommandListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"            return new CommandListCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"            return new IncorrectCommand(ERROR_MESSAGE_COMMAND_DOES_NOT_EXIST);","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":177}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.storage.exceptions.CannotReadFromFileException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.storage.exceptions.UnableToWriteToFileException;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    /** File path to store task data */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_ERROR_DATA_FILE_MISSING \u003d \"Hmm? Your data file suddenly got deleted... I\u0027ll add this task to the new file,\" + LS","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + \"but all the tasks above this will not be stored! :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private static TaskListEncoder taskListEncoder;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private static TaskListDecoder taskListDecoder;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public Storage() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.taskListEncoder \u003d new TaskListEncoder();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.taskListDecoder \u003d new TaskListDecoder();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     * Create data file if it does not exist.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"     * As a precaution, this function should be run before every read/write operation to the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    private void createFileIfDoesNotExist() throws UnableToWriteToFileException{","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        File f \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            f.getParentFile().mkdirs(); //Make the directory for the file if it does not exist","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                f.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"           throw new UnableToWriteToFileException();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"     * Rewrite file with updated list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public void rewriteTaskListToFile(TaskList tasks) throws UnableToWriteToFileException {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        createFileIfDoesNotExist();","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            FileWriter fw \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            List\u003cString\u003e encodedTaskList \u003d new TaskListEncoder().encodeTaskList(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                fw.write(encodedTask + LS);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"           throw new UnableToWriteToFileException();","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     * Load tasks from file into TaskList","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    public TaskList loadTasksFromFile() throws CannotReadFromFileException, UnableToWriteToFileException{","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        createFileIfDoesNotExist();","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        File f \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        final List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                encodedTaskList.add(s.nextLine());","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            return taskListDecoder.decodeTaskList(encodedTaskList);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            throw new CannotReadFromFileException();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":85}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Todo;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import duke.storage.exceptions.InvalidStorageDataException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"public class TaskListDecoder {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public TaskListDecoder() {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"                taskList.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            } catch (InvalidStorageDataException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"                ui.showMessageFramedWithDivider(e.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private static Task decodeTaskFromString(String encodedTask) throws InvalidStorageDataException {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        Task task;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        boolean isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        String[] words \u003d encodedTask.split(\" \\\\| \"); //Length \u003d 3 for Todo; 4 for Deadline, Event","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        switch (words[1]) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        case \"0\":","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            isDone \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        case \"1\":","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        default: //if second letter (done status) is not 0 or 1","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            throw new InvalidStorageDataException(encodedTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        switch (words[0]) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        case Task.TODO_ACRONYM:","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            return new Todo(words[2], isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        case Task.DEADLINE_ACRONYM:","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            return new Deadline(words[2], words[3], isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        case Task.EVENT_ACRONYM:","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            return new Event(words[2], words[3], isDone);","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        default: //if first letter is not any of the valid task acronyms","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            throw new InvalidStorageDataException(encodedTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":64}},{"path":"src/main/java/duke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class TaskListEncoder {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"     * Encodes task list into String representation for the storage file","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public List\u003cString\u003e encodeTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        final List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            encodedTaskList.add(task.toTextFileString());","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        return encodedTaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":24}},{"path":"src/main/java/duke/storage/exceptions/CannotReadFromFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage.exceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"public class CannotReadFromFileException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! System does not have sufficient permission to read data file?!\" + LS","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"            + \"Dude is unable to restore your task data. :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public CannotReadFromFileException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":17}},{"path":"src/main/java/duke/storage/exceptions/InvalidStorageDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage.exceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"public class InvalidStorageDataException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            \"Error restoring data due to invalid syntax! This line of data will not be added:\" + LS","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"            + \"%s\";","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    private String invalidEncodedTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public InvalidStorageDataException(String encodedTask) {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        super(String.format(errorMessage, encodedTask));","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        this.invalidEncodedTask \u003d encodedTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        return String.format(errorMessage, invalidEncodedTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":22}},{"path":"src/main/java/duke/storage/exceptions/UnableToWriteToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.storage.exceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import static duke.ui.Ui.LS;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"public class UnableToWriteToFileException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! System does not have sufficient permission to write to data file?!\"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + LS + \"Dude is unable to store your task data locally. :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public UnableToWriteToFileException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return super.toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package duke.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import duke.data.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddEventCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.CommandListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import duke.logic.commands.MarkTaskAsDoneCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":" * This class handles all text UI to be displayed to user.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"public class Ui {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    //Commonly used message formats in UI","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String DIVIDER \u003d \"_________________________________________________________________________________\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_WELCOME_DUDE \u003d \"Hello! I\u0027m Dude ^__^\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye! Hope to see you again soon! ~^u^~ \";","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_NO_TASKS_YET \u003d \"No tasks yet, add a task now!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INTRODUCE_TASKS \u003d \"These are your current tasks:\";","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_LIST \u003d \"Commands:\" + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            + AddTodoCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            + AddDeadlineCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            + AddEventCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            + ListCommand.MESSAGE_COMMAND_DESCRIPTION + \" : See lists of tasks\" + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            + MarkTaskAsDoneCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            + DeleteTaskCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            + CommandListCommand.MESSAGE_COMMAND_DESCRIPTION + LS","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            + ByeCommand.MESSAGE_COMMAND_DESCRIPTION;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_DATA_LOADED \u003d \"Your old data has been successfully loaded!\" + LS","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            + \"You have %d tasks. Type \" + ListCommand.MESSAGE_COMMAND_FORMAT + \" to see current tasks!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public Ui() {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"     * Prints lines of messages. Can take in variable number of arguments.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     * @param lines Strings to be printed, each on a new line","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    public void showMessage(String... lines) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"     * Prints lines of messages framed by divider. Can take in variable number of arguments.","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"     * @param lines Strings to be printed, each on a new line","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    public void showMessageFramedWithDivider(String... lines) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            System.out.println(line);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"     * Prints Welcome message and list of commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        showMessageFramedWithDivider(MESSAGE_WELCOME_DUDE, DIVIDER, MESSAGE_COMMAND_LIST);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"     * Prints Goodbye message and exits the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    public void showBye() {","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        showMessageFramedWithDivider(MESSAGE_BYE);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"    public void showTasksLoaded(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        showMessage(String.format(MESSAGE_DATA_LOADED, tasks.getNumTasks()), DIVIDER);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"tlyi":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"no such command","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"todo this is a todo item","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"deadline no date","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"deadline wrong prefix /at boo","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"deadline prefix with no date /by","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"deadline ip /by thurs night","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"event no date","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"event wrong prefix /by 5pm","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"event prefix with no date /at","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"event 2113t /at fri 2pm","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"done 5","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"done -5","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"done 0","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"done 2","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"done 3","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"commands","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tlyi":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"tlyi":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"tlyi":2}}]
