[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"import parser.command.Command;","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"     * Main method","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"     * @param args System arguments","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * Start the Duke program","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    public void run() {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"        TaskManager taskMgr \u003d new TaskManager();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        Command command;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        Storage storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"            taskMgr.loadTasks(storage.readTaskData());","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"        }catch(IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"        while(!isExit) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"            command.execute(storage, taskMgr, ui);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"            isExit \u003d command.isFinalCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Journeyman1998":44,"-":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import parser.command.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import java.util.*;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":" * The Parser class is used to parse user input into executable actions.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":" * The user input may contain multiple flags, which are additional options/arguments that can be used in the actions.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"public class Parser {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"     * Parse the user input into Command objects that can be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"     * @param input The user input","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"     * @return The Command object","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"        Command command;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"        String actionArg \u003d args[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"        if(args.length \u003e 1) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"            String arguments \u003d args[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"            params \u003d parseArguments(arguments);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        command \u003d createNewCommand(actionArg, params);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        return command;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * Create different types of Command objects based on action word.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     * @param action The action word","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"     * @param params The parameters from user input","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"     * @return The Command object","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    private Command createNewCommand(String action, HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"        action \u003d action.toUpperCase();","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"        Command command;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"        switch(action) {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"        case \"TODO\":","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"            params.put(\"type\", action.toLowerCase());","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new AddCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"        case \"LIST\":","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new ListCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"        case \"REMOVE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new DeleteCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"Journeyman1998"},"content":"        case \"DONE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"Journeyman1998"},"content":"        case \"DO\":","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new DoCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"Journeyman1998"},"content":"        case \"BYE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"Journeyman1998"},"content":"        case \"EXIT\":","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new ExitCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"Journeyman1998"},"content":"        case \"FIND\":","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"Journeyman1998"},"content":"        case \"MATCH\":","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new FindCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"Journeyman1998"},"content":"            ","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"Journeyman1998"},"content":"        case \"DUE\":","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new DueCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"Journeyman1998"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"Journeyman1998"},"content":"            command \u003d new InvalidCommand(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"Journeyman1998"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"Journeyman1998"},"content":"        return command;","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"Journeyman1998"},"content":"     * Process the user input into the main argument, and if exists, the flag arguments","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"Journeyman1998"},"content":"     * @param args The argument string, without the action word","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"Journeyman1998"},"content":"     * @return A HashMap of parameters","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"Journeyman1998"},"content":"    private HashMap\u003cString, String\u003e parseArguments(String args) {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"Journeyman1998"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"Journeyman1998"},"content":"        String[] splitArgs \u003d args.split(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"Journeyman1998"},"content":"        String mainArgument \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"Journeyman1998"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"Journeyman1998"},"content":"        int numOfArgs \u003d splitArgs.length;","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"Journeyman1998"},"content":"        //Get the main argument of the command","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"Journeyman1998"},"content":"        while(i \u003c numOfArgs \u0026\u0026 !isFlag(splitArgs[i])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"Journeyman1998"},"content":"            mainArgument +\u003d splitArgs[i] + \" \";","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"Journeyman1998"},"content":"            i++;","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"Journeyman1998"},"content":"        params.put(\"main\", mainArgument.strip());","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"Journeyman1998"},"content":"        if(i \u003d\u003d numOfArgs)","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"Journeyman1998"},"content":"            return params;","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"Journeyman1998"},"content":"        String flagArg\u003d\"\", flag\u003d\" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"Journeyman1998"},"content":"        //Start to consume flag","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"Journeyman1998"},"content":"        for(; i \u003c numOfArgs; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"Journeyman1998"},"content":"            if(isFlag(splitArgs[i])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"Journeyman1998"},"content":"                //add flag that was already consumed","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"Journeyman1998"},"content":"            \t//add flag only if it is not found yet","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"Journeyman1998"},"content":"            \tif(params.get(flag) \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"Journeyman1998"},"content":"            \t\t","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"Journeyman1998"},"content":"            \t\tputFlagIntoParams(params, flag, flagArg);","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"Journeyman1998"},"content":"    \t            ","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"Journeyman1998"},"content":"                    flagArg \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"Journeyman1998"},"content":"                    flag \u003d splitArgs[i]; //start tracking newly-found flag","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"Journeyman1998"},"content":"            \t}","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"Journeyman1998"},"content":"            else {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"Journeyman1998"},"content":"                flagArg +\u003d splitArgs[i] + \" \";","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"Journeyman1998"},"content":"        //insert last set of flag argument and remove empty key","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"Journeyman1998"},"content":"        putFlagIntoParams(params, flag, flagArg);","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"Journeyman1998"},"content":"        params.remove(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"Journeyman1998"},"content":"        ","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"Journeyman1998"},"content":"        return params;","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"Journeyman1998"},"content":"    private void putFlagIntoParams(HashMap\u003cString, String\u003e params, String flag, String flagArg) {","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"Journeyman1998"},"content":"        flag \u003d flag.substring(1);","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"Journeyman1998"},"content":"        flagArg \u003d flagArg.strip();","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"Journeyman1998"},"content":"        params.put(flag, flagArg.strip());","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"Journeyman1998"},"content":"    private boolean isFlag(String s) {","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"Journeyman1998"},"content":"        return s.startsWith(\"/\");","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":149}},{"path":"src/main/java/parser/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for adding a new task","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    public AddCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"        Task newTask;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"            newTask \u003d taskMgr.createNewTask(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"            taskMgr.addTask(newTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"            storage.updateTaskFile(taskMgr.toFileString());","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"            printConfirmation(ui, taskMgr, newTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"        } catch(Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"    private void printConfirmation(Ui ui, TaskManager taskMgr, Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"        ui.printSuccessMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"        ui.printMessage(String.format(\"%s\\n\", task));","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"        int numOfTasks \u003d taskMgr.getNumOfTasks();","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"        String taskPlural \u003d (numOfTasks \u003c\u003d 1) ? \"task\" : \"tasks\";","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"        ui.printMessage(String.format(\"Now you have %d %s in the list.\\n\", numOfTasks, taskPlural));","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":47}},{"path":"src/main/java/parser/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"    protected HashMap\u003cString, String\u003e params;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"    public Command(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"        this.params \u003d params;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"    /***","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    public abstract void execute( Storage storage, TaskManager taskMgr, Ui ui);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    /***","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * Check if this command is the final one.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     * If it is not an ExitCommand, then this will always return false.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     * @return If the command is final","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"    public boolean isFinalCommand() {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":31}},{"path":"src/main/java/parser/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for removing a task","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    public DeleteCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        String indexParam \u003d params.get(\"main\");","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        int index;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"            index \u003d Integer.parseInt(indexParam);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(\"Index is not a number\");","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"            Task completedTask \u003d taskMgr.removeTask(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"            storage.updateTaskFile(taskMgr.toFileString());","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"            ui.printSuccessMessage(\"I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"            ui.printMessage(String.format(\"%s\\n\", completedTask));","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"        }  catch(Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":48}},{"path":"src/main/java/parser/command/DoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for completing a task","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"public class DoCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    public DoCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        String indexParam \u003d params.get(\"main\");","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        int index;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"            index \u003d Integer.parseInt(indexParam);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(\"Index is not a number\");","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"            Task completedTask \u003d taskMgr.doTask(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"            ui.printSuccessMessage(\"I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"            ui.printMessage(String.format(\"%s\\n\", completedTask));","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":45}},{"path":"src/main/java/parser/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import task.TimedTask;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for checking tasks that are due","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"public class DueCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    public DueCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"        ArrayList\u003cTask\u003e overdueTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"        Iterator\u003cTask\u003e it \u003d taskMgr.getAllTasks();","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"            Task task \u003d it.next();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"            if (task instanceof TimedTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"                LocalDateTime taskDueTime \u003d ((TimedTask) task).getTime();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"                if (!task.getDone() \u0026\u0026 taskDueTime.isBefore(now)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"                    overdueTasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"        ui.printMessage(taskMgr.listTasks(overdueTasks));","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":47}},{"path":"src/main/java/parser/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for user quitting the program","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    public ExitCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        ui.printBye();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"    public boolean isFinalCommand() {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"        return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":33}},{"path":"src/main/java/parser/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for finding tasks with specified keywords","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    public FindCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        Iterator\u003cTask\u003e allTasksIt \u003d taskMgr.getAllTasks();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        String keyword \u003d params.get(\"main\");","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"        if(keyword \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"            ui.printErrorMessage(\"No keyword specified\");","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"        while(allTasksIt.hasNext()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"            Task task \u003d allTasksIt.next();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"            String taskDesc \u003d task.getName();","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"            if(taskDesc.contains(keyword)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        if(matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"            ui.printMessage(\"No matching tasks\");","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"        ui.printSuccessMessage(\"Here are the matching tasks in your list\");","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"        ui.printMessage(taskMgr.listTasks(matchedTasks));","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":54}},{"path":"src/main/java/parser/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for invalid user input","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    public InvalidCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        ui.printErrorMessage(\"Invalid command\");","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":28}},{"path":"src/main/java/parser/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package parser.command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" * Represents a command for listing all the tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    public ListCommand(HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"        super(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"     * Execute the command based on its type","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * @param storage Storage for updating data file","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * @param taskMgr TaskManager to manage internal task list","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     * @param ui Ui to print output messages","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"    public void execute(Storage storage, TaskManager taskMgr, Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"        String output \u003d taskMgr.listAllTasks();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        ui.printMessage(output);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":28}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.io.File;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"public class Storage {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"    private static final String rootDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    private static final String dataLocation \u003d \"data\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"    private static final String dataFilename \u003d \"tasks.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    private Path taskDataFilePath;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"    public Storage() throws IOException{","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"        taskDataFilePath \u003d checkAndSetData();","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"    private static Path checkAndSetData() throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"        Path dataFolderPath \u003d Paths.get(rootDirectory, dataLocation);","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        boolean directoryExists \u003d Files.exists(dataFolderPath);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        if(!directoryExists) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"            Files.createDirectory(dataFolderPath);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"        Path dataFilePath \u003d Paths.get(dataFolderPath.toString(), dataFilename);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"        boolean dataFileExists \u003d Files.exists(dataFilePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"        if(!dataFileExists) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"            Files.createFile(dataFilePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"        return dataFilePath;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"     * Read all the data from the task file","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"     * @return An array of read lines","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"    public String[] readTaskData() throws FileNotFoundException {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        Scanner sc;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"        ArrayList\u003cString\u003e rawTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"            File dataFile \u003d new File(taskDataFilePath.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"            sc \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"            throw new FileNotFoundException(\"Cannot find the task data file\");","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"        while(sc.hasNext()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"            rawTasks.add(sc.nextLine().strip());","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"Journeyman1998"},"content":"        String[] rawTasksString \u003d new String[rawTasks.size()];","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"Journeyman1998"},"content":"        return rawTasks.toArray(rawTasksString);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"Journeyman1998"},"content":"     * Write the task file with the contents specified.","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"Journeyman1998"},"content":"     * This is called in the Command object when there is an update to the TaskManager task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"Journeyman1998"},"content":"     * @param fileDataToWrite The raw contents of TaskManager task list","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"Journeyman1998"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"Journeyman1998"},"content":"    public void updateTaskFile(String fileDataToWrite) throws IOException{","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"Journeyman1998"},"content":"            checkAndSetData();","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"Journeyman1998"},"content":"            FileWriter fw \u003d new FileWriter(taskDataFilePath.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"Journeyman1998"},"content":"            fw.write(fileDataToWrite);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"Journeyman1998"},"content":"            fw.close();","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"Journeyman1998"},"content":"        } catch(IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"Journeyman1998"},"content":"            throw new IOException(\"Cannot write to task data file.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":83}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":" * Represents a deadline","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"public class DeadlineTask extends TimedTask{","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"     * Construct the DeadlineTask object","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"     * @param task The name/description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"     * @param deadline The time limit","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    public DeadlineTask(String task, String deadline) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"        super(task, deadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the TimedTask as a String","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task in human-friendly format","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        String deadlineString \u003d datetime.format(formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        return super.toString() + String.format(\" (by: %s)\", deadlineString);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"     * Get the type icon of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * @return The type icon","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"        return \"D\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":40}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.sql.Time;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":" * Represents an event.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"public class EventTask extends TimedTask {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"     * Constructs the EventTask object","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"     * @param task The name/description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"     * @param datetime The time limit","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    public EventTask(String task, String datetime) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"        super(task, datetime);","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the TimedTask as a String","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task in human-friendly format","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        String datetimeString \u003d datetime.format(formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        return super.toString() + String.format(\" (at: %s)\", datetimeString);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"     * Get the type icon of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * @return The type icon","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"        return \"E\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":" * Represents a general task","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"    private String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"     * Set the task as completed","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * Get the description/name of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     * @return The name/description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    public String getName() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        return name;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"     * Get the completion status of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"     * @return If the task is completed","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"        return isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"     * Get the status icon of the task. If completed, an X will be marked.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"     * @return The status icon","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the TimedTask as a String","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task in human-friendly format","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"        return String.format(\"[%s][%s] %s\", getTypeIcon(), getStatusIcon(), name);","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the task in file-saving format","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"     * @return The raw string of task that can be saved in the task file","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"Journeyman1998"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Journeyman1998"},"content":"        return getName();","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"Journeyman1998"},"content":"     * Get the type icon of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"Journeyman1998"},"content":"     * @return The type icon","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"Journeyman1998"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":68}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import java.util.*;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":" * Manage the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":" * Any change to the tasks will be performed using the TaskManager class.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    public TaskManager() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"     * Gets the current number of tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * @return The total number of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     * Returns the printable string of all tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"     * @return A string of all tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"    public String listAllTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        return listTasks(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the list of tasks in a well-formatted string","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     * @param listOfTasks A list of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"     * @return A well-formatted string of the tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"    public String listTasks(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"        if(listOfTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"            return \"No task available\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"        Task currTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"        Iterator\u003cTask\u003e it \u003d listOfTasks.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"        while(it.hasNext()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"            currTask \u003d it.next();","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"            sb.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"                    counter++,","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"                    currTask));","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"Journeyman1998"},"content":"     * Set a specified task in the task list to completed","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"Journeyman1998"},"content":"     * @param index The index of the task in the task list","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task that was set to completed","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"Journeyman1998"},"content":"    public Task doTask(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Journeyman1998"},"content":"        index -\u003d 1; //to match array index","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Journeyman1998"},"content":"            tasks.get(index).setDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Journeyman1998"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"Journeyman1998"},"content":"            throw new IndexOutOfBoundsException(\"Invalid index\");","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"Journeyman1998"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"Journeyman1998"},"content":"     * Add a new task into the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"Journeyman1998"},"content":"     * @param newTask The new task","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"Journeyman1998"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"Journeyman1998"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"Journeyman1998"},"content":"     * Remove a specified task from the task list","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"Journeyman1998"},"content":"     * @param index The index of the task in the task list","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task that was removed","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"Journeyman1998"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"Journeyman1998"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"Journeyman1998"},"content":"    public Task removeTask(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"Journeyman1998"},"content":"        index -\u003d 1; //to match array index","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"Journeyman1998"},"content":"            return tasks.remove(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"Journeyman1998"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"Journeyman1998"},"content":"            throw new IndexOutOfBoundsException(\"Invalid index\");","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the contents of the task list into a string that can be saved in the data file","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"Journeyman1998"},"content":"     * @return The raw contents of the task list","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"Journeyman1998"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"Journeyman1998"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"Journeyman1998"},"content":"        Task currTask;","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"Journeyman1998"},"content":"        Iterator\u003cTask\u003e it \u003d tasks.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"Journeyman1998"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"Journeyman1998"},"content":"        String statusIcon, fileStatusIcon;","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"Journeyman1998"},"content":"        while(it.hasNext()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"Journeyman1998"},"content":"            currTask \u003d it.next();","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"Journeyman1998"},"content":"            fileStatusIcon \u003d currTask.getDone() ? \"1\" : \"0\";","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"Journeyman1998"},"content":"            sb.append(String.format(\"%s;%s;%s\\n\",","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"Journeyman1998"},"content":"                    currTask.getTypeIcon(),","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"Journeyman1998"},"content":"                    fileStatusIcon,","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"Journeyman1998"},"content":"                    currTask.toFileString()));","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"Journeyman1998"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"Journeyman1998"},"content":"     * Create a new task based on the parameters specified from user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"Journeyman1998"},"content":"     * @param params The parameters from the user input","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"Journeyman1998"},"content":"     * @return The new Task","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"Journeyman1998"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"Journeyman1998"},"content":"    public Task createNewTask(HashMap\u003cString, String\u003e params) throws IllegalArgumentException{","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"Journeyman1998"},"content":"        Task newTask;","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"Journeyman1998"},"content":"        String type \u003d params.get(\"type\");","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"Journeyman1998"},"content":"        String taskDesc \u003d params.get(\"main\");","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"Journeyman1998"},"content":"        String done \u003d params.get(\"done\");","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"Journeyman1998"},"content":"        if(taskDesc \u003d\u003d null || taskDesc.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"Journeyman1998"},"content":"            throw new IllegalArgumentException(\"Task not specified\");","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"Journeyman1998"},"content":"        switch(type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"Journeyman1998"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"Journeyman1998"},"content":"                newTask \u003d new ToDoTask(taskDesc);","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"Journeyman1998"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"Journeyman1998"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"Journeyman1998"},"content":"                String deadline \u003d params.get(\"by\");","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"Journeyman1998"},"content":"                if(deadline \u003d\u003d null)","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"Journeyman1998"},"content":"                    throw new IllegalArgumentException(\"/by flag value not specified\");","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"Journeyman1998"},"content":"                newTask \u003d new DeadlineTask(taskDesc, deadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"Journeyman1998"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"Journeyman1998"},"content":"            case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"Journeyman1998"},"content":"                String datetime \u003d params.get(\"at\");","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"Journeyman1998"},"content":"                if(datetime \u003d\u003d null)","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"Journeyman1998"},"content":"                    throw new IllegalArgumentException(\"/at flag value not specified\");","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"Journeyman1998"},"content":"                newTask \u003d new EventTask(taskDesc, datetime);","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"Journeyman1998"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"Journeyman1998"},"content":"            default:","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"Journeyman1998"},"content":"                throw new IllegalArgumentException(\"Invalid task type\");","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"Journeyman1998"},"content":"        if(done !\u003d null \u0026\u0026 (done.equals(\"1\") || done.equals(\"Y\")) ) {","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"Journeyman1998"},"content":"            newTask.setDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"Journeyman1998"},"content":"        return newTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"Journeyman1998"},"content":"     * Populates the task list with the contents read from the data file.","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"Journeyman1998"},"content":"     * @param fileOutput The raw contents of the data file","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"Journeyman1998"},"content":"    public void loadTasks(String[] fileOutput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"Journeyman1998"},"content":"        String delimiter \u003d \";\";","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"Journeyman1998"},"content":"        String input, type, done, name, otherArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"Journeyman1998"},"content":"        HashMap\u003cString, String\u003e params;","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"Journeyman1998"},"content":"        for(String line : fileOutput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"Journeyman1998"},"content":"            params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"Journeyman1998"},"content":"            String[] splitInput \u003d line.split(delimiter);","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"Journeyman1998"},"content":"            type \u003d splitInput[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"Journeyman1998"},"content":"            done \u003d splitInput[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":187,"author":{"gitId":"Journeyman1998"},"content":"            name \u003d splitInput[2];","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"Journeyman1998"},"content":"            if(splitInput.length \u003e 3) {","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"Journeyman1998"},"content":"                otherArgs \u003d splitInput[3];","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"Journeyman1998"},"content":"            else {","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"Journeyman1998"},"content":"                otherArgs \u003d null;","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"Journeyman1998"},"content":"            params.put(\"main\", name);","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"Journeyman1998"},"content":"            params.put(\"done\", done);","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"Journeyman1998"},"content":"            switch(type) {","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"Journeyman1998"},"content":"                case \"T\":","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"Journeyman1998"},"content":"                    params.put(\"type\", \"todo\");","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"Journeyman1998"},"content":"                    break;","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"Journeyman1998"},"content":"                case \"D\":","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"Journeyman1998"},"content":"                    params.put(\"type\", \"deadline\");","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"Journeyman1998"},"content":"                    params.put(\"by\", otherArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"Journeyman1998"},"content":"                    break;","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"Journeyman1998"},"content":"                case \"E\":","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"Journeyman1998"},"content":"                    params.put(\"type\", \"event\");","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"Journeyman1998"},"content":"                    params.put(\"at\", otherArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"Journeyman1998"},"content":"                    break;","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"Journeyman1998"},"content":"                default:","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"Journeyman1998"},"content":"                    break;","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"Journeyman1998"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"Journeyman1998"},"content":"            Task newTask \u003d createNewTask(params);","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"Journeyman1998"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"Journeyman1998"},"content":"     * Returns an iterator to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"Journeyman1998"},"content":"     * This allows the Command objects to access the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"Journeyman1998"},"content":"     * @return An iterator of the task list","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"Journeyman1998"},"content":"    public Iterator\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":225,"author":{"gitId":"Journeyman1998"},"content":"        return tasks.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":226,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":227,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":228,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":228}},{"path":"src/main/java/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":" * Represent a task with a time limit, e.g. deadline","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"public abstract class TimedTask extends Task{","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"    LocalDateTime datetime;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"     * Constructs a TimedTask object.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"     * Parses the datetime string into a LocalDateTime instance variable","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"     * @param name The name/description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"     * @param datetime The time limit","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    public TimedTask(String name, String datetime) throws IllegalArgumentException{","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"        super(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"            this.datetime \u003d LocalDateTime.parse(datetime, formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"            String errorMessage \u003d String.format(\"%s. Please input date-time in this format (yyyy-MM-dd HH:mm)\", datetime);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * Returns the due date of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     * @return The due date","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"        return datetime;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the task in file-saving format","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"     * @return The raw string of task that can be saved in the task file","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"        String deadlineString \u003d datetime.format(formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"        return super.toFileString() + String.format(\";%s\", deadlineString);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the TimedTask as a String","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"     * @return The task in human-friendly format","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"        return super.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":58}},{"path":"src/main/java/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":" * Represents a simple to-do task","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"     * Constructs a ToDoTask object","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"     * @param task The name/description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    public ToDoTask(String task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"        super(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"     * Get the type icon of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"     * @return The type icon","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"        return \"T\";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Journeyman1998":26}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Journeyman1998"},"content":"package ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Journeyman1998"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Journeyman1998"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"Journeyman1998"},"content":" * The Ui object will be responsible for handling the output to the screen, as well as reading user inputs.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Journeyman1998"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"Journeyman1998"},"content":"public class Ui {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"Journeyman1998"},"content":"    private static final String ERROR_HEADER \u003d \"Error: \";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"Journeyman1998"},"content":"    private static final String SUCCESS_HEADER \u003d \"Success: \";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Journeyman1998"},"content":"    private static final String USER_INPUT_HEADER \u003d \"duke: $ \";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"Journeyman1998"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Journeyman1998"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Journeyman1998"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Journeyman1998"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Journeyman1998"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"Journeyman1998"},"content":"    private static final String GREETINGS \u003d \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"Journeyman1998"},"content":"                                            \"What can I do for you?\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"Journeyman1998"},"content":"    private static final String USER_LEAVE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"Journeyman1998"},"content":"     * Get the user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Journeyman1998"},"content":"     * @return The command the user entered","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Journeyman1998"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Journeyman1998"},"content":"        System.out.print(USER_INPUT_HEADER);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"Journeyman1998"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Journeyman1998"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the default greeting message on program start.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Journeyman1998"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(GREETINGS);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the farewell message when the user terminates the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Journeyman1998"},"content":"    public void printBye() {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(USER_LEAVE_MESSAGE);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the message when a command is executed successfully.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"Journeyman1998"},"content":"     * @param successMessage The success message","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Journeyman1998"},"content":"    public void printSuccessMessage(String successMessage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(SUCCESS_HEADER + successMessage);","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"Journeyman1998"},"content":"     * Prints the error message when an exception/error is encountered.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"Journeyman1998"},"content":"     * @param errorMessage The error message","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"Journeyman1998"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(ERROR_HEADER + errorMessage);","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"Journeyman1998"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"Journeyman1998"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"Journeyman1998"},"content":"     * Prints a message to the screen.","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"Journeyman1998"},"content":"     * @param message The message to print","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"Journeyman1998"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"Journeyman1998"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"Journeyman1998"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"Journeyman1998"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"Journeyman1998"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"Journeyman1998":71}}]
