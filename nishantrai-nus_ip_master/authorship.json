[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import duke.common.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"     * The main method that initialises and runs Duke until the user exits the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"    public static void runDuke() {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"            Storage.startDuke();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printIOExceptionMessage(e);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"            while (!line.equals(EXIT_COMMAND)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"                try {","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"                Parser.handleCommand(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"                } catch (EmptyCommandException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"                    Ui.printEmptyCommandMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"                } catch (IllegalCommandException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"                    Ui.printIllegalCommandMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"                    Ui.printIOExceptionMessage(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"                    Ui.printDateTimeParseMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printByeMessage();","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"        runDuke();","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nishantrai-nus":45,"-":3}},{"path":"src/main/java/duke/common/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.common;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":" * Implements all the commands that Duke can execute. This class holds the ArrayList object \u0027tasks\u0027 to be used by Duke,","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":" * hence all the commands that require access to \u0027tasks\u0027 are in this class.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"public class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"    protected static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"    /** Prints the current task list. */","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"    public static void executeList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printList(tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"     * Adds a todo task to the tasklist.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"     * @param description the description of the task to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred while writing to the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"    public static void addTodo(String description) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"        tasks.add(Task.getTaskCount(), new Todo(description));","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printAddMessage(tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"        Storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"     * Adds a deadline task to the tasklist. Deadlines must be entered in the format \"dd/mm/yyyy hhmm\" with the time","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"     * being in 24-Hour format. For example: 22/12/2021 1800","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"     * @param description the description of the task to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"     * @param by the description of the task to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred while writing to the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"nishantrai-nus"},"content":"    public static void addDeadline(String description, LocalDateTime by) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"nishantrai-nus"},"content":"        tasks.add(Task.getTaskCount(), new Deadline(description, by));","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printAddMessage(tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"nishantrai-nus"},"content":"        Storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"nishantrai-nus"},"content":"     * Adds an event task to the tasklist. Event times must be entered in the format \"dd/mm/yyyy hhmm\" with the time","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"nishantrai-nus"},"content":"     * being in 24-Hour format. For example: 22/12/2021 1800","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"nishantrai-nus"},"content":"     * @param description the description of the task to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"nishantrai-nus"},"content":"     * @param at the date and time of the task to be added","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred while writing to the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"nishantrai-nus"},"content":"    public static void addEvent(String description, LocalDateTime at) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"nishantrai-nus"},"content":"        tasks.add(Task.getTaskCount(), new Event(description, at));","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printAddMessage(tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"nishantrai-nus"},"content":"        Storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"nishantrai-nus"},"content":"     * Toggles whether a task is marked as completed or not.","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"nishantrai-nus"},"content":"     * @param taskIndex the number of the task to be marked completed (or incomplete)","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred while writing to the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"nishantrai-nus"},"content":"    public static void doneTask(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"nishantrai-nus"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"nishantrai-nus"},"content":"            Task givenTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"nishantrai-nus"},"content":"            boolean isDone \u003d givenTask.getStatusIcon().equals(Task.DONE_ICON);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"nishantrai-nus"},"content":"            givenTask.setDone(!isDone);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printDoneMessage(taskIndex, tasks, !isDone);","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"nishantrai-nus"},"content":"            Storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"nishantrai-nus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printIndexOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"nishantrai-nus"},"content":"     * Deletes a given task from the tasklist.","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"nishantrai-nus"},"content":"     * @param taskIndex the number of the task to be marked completed","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred while writing to the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"nishantrai-nus"},"content":"    public static void deleteTask(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"nishantrai-nus"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printDeleteMessage(taskIndex, tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"nishantrai-nus"},"content":"            tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"nishantrai-nus"},"content":"            Storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"nishantrai-nus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printIndexOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"nishantrai-nus"},"content":"     * Searches the tasklist for any tasks that contain the given keywords, and displays them to the user.","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"nishantrai-nus"},"content":"     * @param keywords the keywords to search for in tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"nishantrai-nus"},"content":"    public static void findTaskByDesc(String... keywords) {","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"nishantrai-nus"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"nishantrai-nus"},"content":"            List\u003cTask\u003e searchResults \u003d tasks.stream().filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"nishantrai-nus"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"nishantrai-nus"},"content":"            Ui.printResults(tasks, searchResults, keyword, false);","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printDivider();","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"nishantrai-nus"},"content":"    public static void findTaskByDate(LocalDate date) {","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"nishantrai-nus"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"nishantrai-nus"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"nishantrai-nus"},"content":"            if (task.getType().equals(Task.TODO_ICON)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"nishantrai-nus"},"content":"                continue;","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"nishantrai-nus"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"nishantrai-nus"},"content":"            boolean isMatch \u003d task.getDateTime().toLocalDate().isEqual(date);","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"nishantrai-nus"},"content":"            if (isMatch) {","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"nishantrai-nus"},"content":"                searchResults.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"nishantrai-nus"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printResults(tasks, searchResults, date.format(Task.commandFormat), true);","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"nishantrai-nus"},"content":"        Ui.printDivider();","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"nishantrai-nus":131}},{"path":"src/main/java/duke/common/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.common;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":" * Implements reading from and writing to the data file saved on the user\u0027s local disk under the given filepath.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String DIR_NAME \u003d \"data\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String FILE_PATH \u003d DIR_NAME + \"/\" + FILE_NAME;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"     * Opens access to the data file if it exists, and creates one otherwise. Notifies the user if an error occurred","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"     * while doing so.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    public static void startDuke() throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"            if (Files.notExists(Paths.get(FILE_PATH))) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"                Files.createDirectories(Paths.get(FILE_PATH).getParent());","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"                Files.createFile(Paths.get(FILE_PATH));","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"                Ui.printNewHello();","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"                loadData();","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"                Ui.printReturningHello(Command.tasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"    private static void loadData() throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"            Command.tasks.add(Parser.parseTaskFromData(s.nextLine()));","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"nishantrai-nus"},"content":"     * Writes the current tasklist to the data file.","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an error occurred writing to the data file","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"nishantrai-nus"},"content":"    public static void saveData() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"nishantrai-nus"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"nishantrai-nus"},"content":"        for (Task task : Command.tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"nishantrai-nus"},"content":"            fw.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"nishantrai-nus"},"content":"        fw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"nishantrai-nus":58}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"public class EmptyCommandException extends Exception{","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"nishantrai-nus":4}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"nishantrai-nus":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import duke.common.Command;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":" * Includes methods that require parsing of text, such as from commands entered by the","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":" * user or data saved in the data file.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"public class Parser {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String COMMAND_SEP \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"    private final static int TODO_LENGTH \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"    private final static int DEADLINE_LENGTH \u003d 8;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    private final static int EVENT_LENGTH \u003d 5;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DEADLINE_SEP \u003d \"/by\";","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String EVENT_SEP \u003d \"/at\";","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"     * Parses the command entered by the user for necessary information, such as the command","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"     * type or task details, and executes the required command.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"     * @param fullCommand the string entered by the user","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws EmptyCommandException if the command entered is incomplete","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IllegalCommandException if an unknown command is entered","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"    public static void handleCommand(String fullCommand) throws EmptyCommandException, IllegalCommandException,","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"            IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"        String[] parsedCommand \u003d fullCommand.split(COMMAND_SEP);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"        switch (parsedCommand[0].toUpperCase()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"        case \"LIST\":","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"            Command.executeList();","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"nishantrai-nus"},"content":"        case \"TODO\":","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndAddTodo(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"nishantrai-nus"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndAddDeadline(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"nishantrai-nus"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndAddEvent(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"nishantrai-nus"},"content":"        case \"DONE\":","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndExecuteDone(parsedCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"nishantrai-nus"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndExecuteDelete(parsedCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"nishantrai-nus"},"content":"        case \"FIND\":","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndExecuteFind(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"nishantrai-nus"},"content":"        case \"DATE\":","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"nishantrai-nus"},"content":"            parseAndExecuteDate(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"nishantrai-nus"},"content":"        default:","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"nishantrai-nus"},"content":"     * Creates an appropriate Task object from the saved data file to be added to the task list in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"nishantrai-nus"},"content":"     * @param taskInfo the description of the saved task","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"nishantrai-nus"},"content":"     * @return the Task object to be added to the task array","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if an invalid line is found in the data file","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"nishantrai-nus"},"content":"    public static Task parseTaskFromData(String taskInfo) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"nishantrai-nus"},"content":"        String[] parsedData \u003d taskInfo.split(Task.ESCAPED_DATA_SEP);","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"nishantrai-nus"},"content":"        Task newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"nishantrai-nus"},"content":"        switch (parsedData[0].strip()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"nishantrai-nus"},"content":"        case Task.DEADLINE_ICON:","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"nishantrai-nus"},"content":"            LocalDateTime parsedBy \u003d parseDateTimeFromData(parsedData[3].strip());","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"nishantrai-nus"},"content":"            newTask \u003d new Deadline(parsedData[2].strip(), parsedBy);","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"nishantrai-nus"},"content":"        case Task.EVENT_ICON:","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"nishantrai-nus"},"content":"            LocalDateTime parsedAt \u003d parseDateTimeFromData(parsedData[3].strip());","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"nishantrai-nus"},"content":"            newTask \u003d new Event(parsedData[2].strip(), parsedAt);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"nishantrai-nus"},"content":"        case Task.TODO_ICON:","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"nishantrai-nus"},"content":"            newTask \u003d new Todo(parsedData[2].strip());","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"nishantrai-nus"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"nishantrai-nus"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IOException();","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"nishantrai-nus"},"content":"        String parsedDoneIcon \u003d parsedData[1].strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"nishantrai-nus"},"content":"        if (parsedDoneIcon.equals(Task.DONE_ICON)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"nishantrai-nus"},"content":"            newTask.setDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"nishantrai-nus"},"content":"        return newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"nishantrai-nus"},"content":"    private static LocalDateTime parseDateTimeFromData(String stringFromData) {","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"nishantrai-nus"},"content":"        return LocalDateTime.parse(stringFromData, Task.dataFormat);","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndAddTodo(String fullCommand) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"nishantrai-nus"},"content":"        String description \u003d fullCommand.substring(TODO_LENGTH).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"nishantrai-nus"},"content":"        Command.addTodo(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"nishantrai-nus"},"content":"     * Extracts the description of the Deadline task as a String and its \u0027by\u0027 (or its deadline) as a LocalDateTime","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"nishantrai-nus"},"content":"     * object and adds it to the tasklist.","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"nishantrai-nus"},"content":"     * @param fullCommand the string entered by the user","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IllegalCommandException if an unknown command is entered","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws EmptyCommandException if the command entered is incomplete","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndAddDeadline(String fullCommand) throws IOException, IllegalCommandException,","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"nishantrai-nus"},"content":"            EmptyCommandException {","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"nishantrai-nus"},"content":"        String commandDescription \u003d fullCommand.substring(DEADLINE_LENGTH).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"nishantrai-nus"},"content":"        if (!commandDescription.contains(DEADLINE_SEP)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"nishantrai-nus"},"content":"        String[] descWithBy \u003d commandDescription.split(DEADLINE_SEP);","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"nishantrai-nus"},"content":"        if (descWithBy.length \u003c 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"nishantrai-nus"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"nishantrai-nus"},"content":"        if (descWithBy.length \u003e 2) {","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"nishantrai-nus"},"content":"        String trimmedDesc \u003d descWithBy[0].strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"nishantrai-nus"},"content":"        LocalDateTime byAsDateTime \u003d parseByFromCommand(descWithBy[1].strip());","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"nishantrai-nus"},"content":"        Command.addDeadline(trimmedDesc, byAsDateTime);","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"nishantrai-nus"},"content":"    private static LocalDateTime parseByFromCommand(String trimmedBy) throws DateTimeParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"nishantrai-nus"},"content":"        return LocalDateTime.parse(trimmedBy, Task.dataFormat);","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"nishantrai-nus"},"content":"     * Extracts the description of the Event task as a String and its \u0027at\u0027 (or the date and time it occurs at)","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"nishantrai-nus"},"content":"     * as a LocalDateTime object and adds it to the tasklist.","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"nishantrai-nus"},"content":"     * @param fullCommand the string entered by the user","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws IllegalCommandException if an unknown command is entered","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"nishantrai-nus"},"content":"     * @throws EmptyCommandException if the command entered is incomplete","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndAddEvent(String fullCommand) throws IOException, IllegalCommandException,","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"nishantrai-nus"},"content":"            EmptyCommandException {","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"nishantrai-nus"},"content":"        String commandDescription \u003d fullCommand.substring(EVENT_LENGTH).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"nishantrai-nus"},"content":"        if (!commandDescription.contains(EVENT_SEP)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"nishantrai-nus"},"content":"        String[] descWithAt \u003d commandDescription.split(EVENT_SEP);","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"nishantrai-nus"},"content":"        if (descWithAt.length \u003c 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"nishantrai-nus"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"nishantrai-nus"},"content":"        } else if (descWithAt.length \u003e 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"nishantrai-nus"},"content":"        String trimmedDesc \u003d descWithAt[0].strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"nishantrai-nus"},"content":"        LocalDateTime atAsDateTime \u003d parseAtFromCommand(descWithAt[1].strip());","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"nishantrai-nus"},"content":"        Command.addEvent(trimmedDesc, atAsDateTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"nishantrai-nus"},"content":"    private static LocalDateTime parseAtFromCommand(String trimmedAt) throws DateTimeParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"nishantrai-nus"},"content":"        return LocalDateTime.parse(trimmedAt, Task.dataFormat);","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndExecuteDone(String[] parsedCommand) throws IllegalCommandException, IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"nishantrai-nus"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"nishantrai-nus"},"content":"            int taskIndex \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"nishantrai-nus"},"content":"            Command.doneTask(taskIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"nishantrai-nus"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndExecuteDelete(String[] parsedCommand) throws IllegalCommandException, IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"nishantrai-nus"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"nishantrai-nus"},"content":"            int taskIndex \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"nishantrai-nus"},"content":"            Command.deleteTask(taskIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"nishantrai-nus"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"nishantrai-nus"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndExecuteFind(String fullCommand) throws EmptyCommandException {","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"nishantrai-nus"},"content":"        String keywords \u003d fullCommand.replace(\"find\", \"\").trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"nishantrai-nus"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"nishantrai-nus"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"nishantrai-nus"},"content":"        String[] keywordsArr \u003d keywords.split(COMMAND_SEP);","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"nishantrai-nus"},"content":"        Command.findTaskByDesc(keywordsArr);","lastModifiedDate":"2021-09-24"},{"lineNumber":203,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"nishantrai-nus"},"content":"    private static void parseAndExecuteDate(String fullCommand) throws EmptyCommandException {","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"nishantrai-nus"},"content":"        String dateToFind \u003d fullCommand.replace(\"date\",\"\").trim();","lastModifiedDate":"2021-09-24"},{"lineNumber":207,"author":{"gitId":"nishantrai-nus"},"content":"        if (dateToFind.isEmpty()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":208,"author":{"gitId":"nishantrai-nus"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":210,"author":{"gitId":"nishantrai-nus"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateToFind, Task.commandFormat);","lastModifiedDate":"2021-09-24"},{"lineNumber":211,"author":{"gitId":"nishantrai-nus"},"content":"        Command.findTaskByDate(parsedDate);","lastModifiedDate":"2021-09-24"},{"lineNumber":212,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"nishantrai-nus":213}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"    protected String type \u003d DEADLINE_ICON;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"    public Deadline(String desc, LocalDateTime by) {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"        super(desc, DEADLINE_ICON);","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"        return this.by;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"        return type + PADDED_DATA_SEP + super.toStorageString() + PADDED_DATA_SEP + by.format(dataFormat);","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"        return type + super.toString() + \" (by: \" + by.format(uiFormat) + \")\";","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"nishantrai-nus":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"    protected String type \u003d EVENT_ICON;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"    public Event(String desc, LocalDateTime at) {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"        super(desc, EVENT_ICON);","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"        return this.at;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"        return type + PADDED_DATA_SEP + super.toStorageString() + PADDED_DATA_SEP + at.format(dataFormat);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"        return type + super.toString() + \" (at: \" + at.format(uiFormat) + \")\";","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"nishantrai-nus":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":" * The parent class for all task types.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String DEADLINE_ICON \u003d \"[D]\";","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String EVENT_ICON \u003d \"[E]\";","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String TODO_ICON \u003d \"[T]\";","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String DONE_ICON \u003d \"[X]\";","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String NOT_DONE_ICON \u003d \"[ ]\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String WORD_DELIM \u003d \" \";","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String DATA_SEP \u003d \"|\";","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String ESCAPED_DATA_SEP \u003d \"\\\\\" + DATA_SEP;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"    public final static String PADDED_DATA_SEP \u003d WORD_DELIM + DATA_SEP + WORD_DELIM;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DATE_TIME_FORMAT_DATA \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DATE_TIME_FORMAT_UI \u003d \"dd LLLL yyyy hh:mm a\";","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DATE_FORMAT_COMMAND \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"    public final static DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT_DATA);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"    public final static DateTimeFormatter uiFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT_UI);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    public static DateTimeFormatter commandFormat \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_COMMAND);","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"    protected String type;","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"    public Task(String desc, String type) {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"        setDescription(desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"        setDone(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"        taskCount++;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"    public abstract LocalDateTime getDateTime();","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"    public String getType() {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"        return this.type;","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"nishantrai-nus"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"nishantrai-nus"},"content":"        return taskCount;","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"nishantrai-nus"},"content":"     * Returns the status icon corresponding to whether the task has been marked as completed by the user or not.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"nishantrai-nus"},"content":"     * @return the status icon of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"nishantrai-nus"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"nishantrai-nus"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"nishantrai-nus"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"nishantrai-nus"},"content":"     * @return description of task","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"nishantrai-nus"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"nishantrai-nus"},"content":"        return description;","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"nishantrai-nus"},"content":"     * Sets the description of the task to a given value.","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"nishantrai-nus"},"content":"     * @param description the String the description is to be set to","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"nishantrai-nus"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"nishantrai-nus"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"nishantrai-nus"},"content":"     * Marks the task as completed or incomplete depending on the entered boolean.","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"nishantrai-nus"},"content":"     * @param isDone a boolean value that is true if the task should be marked complete, false otherwise","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"nishantrai-nus"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"nishantrai-nus"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"nishantrai-nus"},"content":"     * Formats the task as a String to be stored as data.","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"nishantrai-nus"},"content":"     * @return the String that the task will be stored as","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"nishantrai-nus"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"nishantrai-nus"},"content":"        return getStatusIcon() + PADDED_DATA_SEP + this.description;","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"nishantrai-nus"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"nishantrai-nus"},"content":"        return this.getStatusIcon() + WORD_DELIM + this.description;","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"nishantrai-nus":97}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"    public Todo(String desc) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"        super(desc, TODO_ICON);","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"        return null;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"        return type + PADDED_DATA_SEP + super.toStorageString();","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"         return type + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"nishantrai-nus":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"package duke.ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":" * All methods that display information to the user are in this class.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DIVIDER \u003d \"_\";","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String NEW_HELLO \u003d \"Hi! I\u0027m Duke. I\u0027ve created your data file for you!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String RETURNING_HELLO \u003d \"Welcome back! Here are your current tasks and their status:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String PROMPT_COMMAND \u003d \"What would you like me to do?\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String LIST_MESSAGE \u003d \"Here are your current tasks and their status:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String ADD_MESSAGE \u003d \"Okay, I\u0027ve added that task to your list:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String UNDONE_MESSAGE \u003d \"I\u0027ve unmarked this task as done:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DELETE_MESSAGE \u003d \"Okay, I\u0027ve deleted that task!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String FIND_MESSAGE_START \u003d \"I found these tasks for \";","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String FIND_MESSAGE_END \u003d \":\";","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String DATE_MESSAGE_START \u003d \"Here are the tasks happening on/ due by \";","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye! I hope to see you again soon :)\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String EMPTY_COMMAND_MESSAGE \u003d \"That command was incomplete!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String ILLEGAL_COMMAND_MESSAGE \u003d \"That\u0027s not a known command format!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String IOEXCEPTION_MESSAGE \u003d \"Something went wrong while creating/loading your data: \";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"nishantrai-nus"},"content":"    private final static String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d \"That\u0027s not a valid task number!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String DATE_TIME_PARSE_MESSAGE \u003d \"That date and/or time was in the wrong format!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String NO_RESULTS_MESSAGE_START \u003d \"I could not find any results for \\\"\";","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"nishantrai-nus"},"content":"    private static final String NO_RESULTS_MESSAGE_END \u003d \"\\\"!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"nishantrai-nus"},"content":"    private static \u003cT\u003e void print(T line) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"nishantrai-nus"},"content":"        System.out.print(line);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"nishantrai-nus"},"content":"    private static \u003cT\u003e void println(T line) {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"nishantrai-nus"},"content":"        System.out.println(line);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"nishantrai-nus"},"content":"    /** Prints a divider to separate user input from Duke\u0027s output. */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printDivider() {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"nishantrai-nus"},"content":"        println(DIVIDER.repeat(80));","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"nishantrai-nus"},"content":"    /** Prints a greeting message for first time users. */","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printNewHello() {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"nishantrai-nus"},"content":"        println(NEW_HELLO);","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"nishantrai-nus"},"content":"        println(PROMPT_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"nishantrai-nus"},"content":"     * Prints a greeting message to returning users and displays the current task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printReturningHello(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"nishantrai-nus"},"content":"        println(RETURNING_HELLO);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"nishantrai-nus"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"nishantrai-nus"},"content":"            println((tasks.indexOf(task) + 1) + \". \" + task);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"nishantrai-nus"},"content":"        println(PROMPT_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"nishantrai-nus"},"content":"    /** Prints a message upon exiting the program. */","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"nishantrai-nus"},"content":"        println(BYE_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"nishantrai-nus"},"content":"     * Prints the current tasklist.","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current tasklist.","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"nishantrai-nus"},"content":"        println(LIST_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"nishantrai-nus"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"nishantrai-nus"},"content":"            println((tasks.indexOf(task) + 1) + \". \" + task);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"nishantrai-nus"},"content":"     * Prints the results found when the user searches for a keyword or date.","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current tasklist","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"nishantrai-nus"},"content":"     * @param searchResults the results found from the search","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"nishantrai-nus"},"content":"     * @param keyword the keyword or date for which the results were found","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"nishantrai-nus"},"content":"     * @param isDate true if the keyword is a date","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printResults(ArrayList\u003cTask\u003e tasks, List\u003cTask\u003e searchResults, String keyword, boolean isDate) {","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"nishantrai-nus"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"nishantrai-nus"},"content":"            println(NO_RESULTS_MESSAGE_START + keyword + NO_RESULTS_MESSAGE_END);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"nishantrai-nus"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"nishantrai-nus"},"content":"        String toPrint \u003d isDate ? DATE_MESSAGE_START : FIND_MESSAGE_START;","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"nishantrai-nus"},"content":"        println(toPrint + keyword + FIND_MESSAGE_END);","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"nishantrai-nus"},"content":"        for (Task result : searchResults) {","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"nishantrai-nus"},"content":"            print((tasks.indexOf(result) + 1) + \". \");","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"nishantrai-nus"},"content":"            println(result);","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"nishantrai-nus"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"nishantrai-nus"},"content":"     * Notifies the user that a task has been added to the tasklist.","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printAddMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"nishantrai-nus"},"content":"        println(ADD_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"nishantrai-nus"},"content":"        println(tasks.get(Task.getTaskCount() - 1));","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"nishantrai-nus"},"content":"     * Notifies the user whether a task has been marked as done or incomplete.","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"nishantrai-nus"},"content":"     * @param taskIndex the task number to be marked","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"nishantrai-nus"},"content":"     * @param isDone the new status of the task given","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printDoneMessage(int taskIndex, ArrayList\u003cTask\u003e tasks, boolean isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"nishantrai-nus"},"content":"        String toPrint \u003d isDone ? DONE_MESSAGE : UNDONE_MESSAGE;","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"nishantrai-nus"},"content":"        println(toPrint);","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"nishantrai-nus"},"content":"        println(tasks.get(taskIndex - 1));","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"nishantrai-nus"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"nishantrai-nus"},"content":"     * Notifies the user that the task given by the user has been deleted from the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"nishantrai-nus"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"nishantrai-nus"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"nishantrai-nus"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"nishantrai-nus"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printDeleteMessage(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"nishantrai-nus"},"content":"        println(DELETE_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"nishantrai-nus"},"content":"        println(tasks.get(taskIndex - 1));","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"nishantrai-nus"},"content":"    /** Notifies the user that the command entered was incomplete. */","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printEmptyCommandMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"nishantrai-nus"},"content":"        println(EMPTY_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"nishantrai-nus"},"content":"    /** Notifies the user that the command entered was unknown. */","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printIllegalCommandMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"nishantrai-nus"},"content":"        println(ILLEGAL_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"nishantrai-nus"},"content":"    /** Notifies the user that an error occurred reading/writing to the data file. */","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printIOExceptionMessage(Exception e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"nishantrai-nus"},"content":"        println(IOEXCEPTION_MESSAGE + e.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"nishantrai-nus"},"content":"    /** Notifies the user that the task index entered was not in the list */","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printIndexOutOfBoundsMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"nishantrai-nus"},"content":"        println(INDEX_OUT_OF_BOUNDS_MESSAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"nishantrai-nus"},"content":"    /** Notifies the user that the date and/or time they entered was of the wrong format. */","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"nishantrai-nus"},"content":"    public static void printDateTimeParseMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"nishantrai-nus"},"content":"        println(DATE_TIME_PARSE_MESSAGE);","lastModifiedDate":"2021-09-24"},{"lineNumber":189,"author":{"gitId":"nishantrai-nus"},"content":"        printDivider();","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"nishantrai-nus"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"nishantrai-nus"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"nishantrai-nus":191}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nishantrai-nus"},"content":"todo report","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"nishantrai-nus"},"content":"deadline assignment /by 30/09/2021 2359","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"nishantrai-nus"},"content":"event project meeting /at 31/08/2021 2100","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"nishantrai-nus"},"content":"done 2","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nishantrai-nus"},"content":"list","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"nishantrai-nus"},"content":"event presentation /at 30/09/2021 1000","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"nishantrai-nus"},"content":"deadline project essay /by 31/08/2021 2359","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"nishantrai-nus"},"content":"todo project feedback","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"nishantrai-nus"},"content":"list","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"find project","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"date 30/09/2021","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"nishantrai-nus"},"content":"done 2","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"nishantrai-nus"},"content":"done 4","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"nishantrai-nus"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nishantrai-nus"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"nishantrai-nus":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nishantrai-nus"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"nishantrai-nus"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"nishantrai-nus"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nishantrai-nus":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nishantrai-nus"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nishantrai-nus":1,"-":37}}]
