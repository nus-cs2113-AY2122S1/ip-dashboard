[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"# **IKAROS User Guide**","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"## Overview","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"**Ikaros is your very own desktop butler application, to managing tasks, deadlines and events,","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"optimized for use through a Command Line Interface (CLI).**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"* [Overview](#Overview)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"* [First Time Installation](#First-Time-Installation)","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"* [Quick Start](#Quick-Start)","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"* [Features](#Features)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"* [Command Summary](#Command-Summary)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"## First Time Installation","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"Prerequisite - ensure you have Java 11 or above installed in your Computer","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"1. Download Ikaros.jar to your desired folder","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"2. In the same folder run *java -jar IP.jar* on the console. (Do ensure you have Java JDK 11)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"3. Ikaros will create an *ikarosTaskData.txt* that will store your data for future reference when you launch the application for the first time.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"## Quick Start","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"Ensure you have completed the first time installation before proceeding with the running of this program","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"Upon Start up you will be greeted with a message similar to this displaying the day and the date","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"..........................................................","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"_______________     ___ -+- _______________","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"\\______       /    /_  \\ |  \\       ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":" \\______      \\_____/   \\___/      ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"   \\______         IKAROS        ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"       \\____________     __________/","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"                  /_______\\","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"              Welcome to IKAROS!","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"           Your one and only butler","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"           ","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"             Monday, 27 Sept 2021","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"..........................................................","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"Following which, it will display the stored List  of tasks, and the user can begin to input their commands to Ikaros.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e **Quick Notes about the CLI**","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"\u003e - Data will be stored in IkarosTaskData.txt. If no such file exists, the program will display an error message. If it is your first time using the program proceed as per normal","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"\u003e - Words in `\u003cUPPERCASE_AND_ANGULAR_BRACKETS\u003e` refers to the parameters required for the specific commands","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"\u003e - Words in angular brackets `\u003cSEPERATED_BY/A_SLASH\u003e` refer to either our parameters where one or the othere parameter can be used.","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"\u003e - The format for how each command should be keyed in will be `demarcated in this box`","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"## Features","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"Below is a brief summary of the usable commands and features that can be utilised for Ikaros.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"Click on the separate links to find out more about each feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"* Adding a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"  * Todo task: `add todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"  * Deadline task: `add deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"  * Event task: `add event`","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"* Removing a task: `remove`","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"* Marking a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"  * Marking a task as done: `done`","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"  * Marking a task as undone: `undo`","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"* Displaying a list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"  * Display list of all tasks: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"  * Display list of Todo: `list todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"  * Display list of Deadlines: `list deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"  * Display list of Events: `list event`","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"* Update a Task: `update`","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"* Find a Task: `find`","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"* Help: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"* Exiting the application: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"### Adding a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"There are 3 different types of task that can be added (Todo, Deadline, Event). Tasks in the past cannot be added due to the lack of a time machine.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add todo` -\u003e adds a todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add todo \u003cTASK_DESCRIPTION\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add todo wash clothes`","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add deadline` -\u003e adds a deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add deadline \u003cTASK_DESCRIPTION\u003e /by-\u003cdd/MM/YYYY-HHmm\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add deadline complete assignment /by-30/09/2021-2359`","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add event` -\u003e adds a todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add event \u003cTASK_DESCRIPTION\u003e /at-\u003cdd/MM/YYYY-HHmm\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add event Dukes Birthday Celebration /at-10/12/2021-1900`","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"### Removing a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"This command will remove the specific task corresponding with the input number from your tasks list. Multiple tasks can be removed at once. Take note that there is no space between the task_numbers.","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"\u003e #### `remove` -\u003e removes task","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `remove \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `remove 3`","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `remove 3,4,5`","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"### Marking a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"This command will allow you to mark a task as done or mark it as un-done. Multiple tasks can be marked at once. Take note that there is no space between the task_numbers.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"\u003e #### `done` -\u003e mark task as done","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `done \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `done 3`","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `done 3,2,1`","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"\u003e #### `undo` -\u003e mark task as undone","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `undo \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `undo 1`","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `undo 3,2,1`","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"### Displaying a list of Tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"This command can be used to view the different tasks in your list. Specifying which type of task you want to view will show you a list of those types of tasks arranged according to their date in ascending order.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list` -\u003e lists all the Task in order of date and time added","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list todo` -\u003e lists all Todos in order of date and time added","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list deadline` -\u003e lists all the Deadline in order of date and time due (nearest date to furthest)","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list event` -\u003e lists all Todos in order of date and time the event will be held at (nearest date to furthest)","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list event`","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"### Update a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"This command allows you to update the description or date of a specific task base on its index in the main list. An update cannot be undone.","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"\u003e #### `update` -\u003e updates a specific task","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `update \u003cTASK_NUMBER\u003e \u003cDESCRIPTION/DATE\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `update 2 date`","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `update 5 description`","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"### Find a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"This command allows you to find Tasks related to a specific keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"\u003e #### `find` -\u003e task that is related to the keyword","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `find read`","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"### Help","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"This command shows you, the list and the format of the usable commands while in the application","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"\u003e #### `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"### Exiting the Application","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"This command allows you to exit and close the program","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"\u003e #### \u0027bye\u0027","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"## Command Summary","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"|Action|Command Format|","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"|---|---|","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"|Add Todo|`add todo \u003cTASK_DESCRIPTION\u003e`| ","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"|Add Deadline|`add deadline \u003cTASK_DESCRIPTION\u003e /by-\u003cdd/MM/YYYY-HHmm\u003e`|   ","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"|Add Event|`add event TASK_DESCRIPTION /at-\u003cdd/MM/YYYY-HHmm\u003e`| ","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"|Remove task|`remove \u003cTASK_NUMBER\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"antrikshv"},"content":"|Mark as done|`done TASK_NUMBER`|","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"antrikshv"},"content":"|Mark as un-done|`undo TASK_NUMBER`|","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"|List|`list`|","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"antrikshv"},"content":"|List Todo| `list todo`|","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"antrikshv"},"content":"|List Deadline| `list deadline`|","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"|List Event|`list event`|","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"antrikshv"},"content":"|Update Task|`update \u003cTASK_NUMBER\u003e \u003cDESCRIPTION/DATE\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"|Find keyword|`find \u003cKEYWORD\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"|Help|`help`|","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"antrikshv"},"content":"|Exit|`bye`|","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"antrikshv":144,"-":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"# **IKAROS User Guide**","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"## Overview","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"**Ikaros is your very own desktop butler application, to managing tasks, deadlines and events,","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"optimized for use through a Command Line Interface (CLI).**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"* [Overview](#Overview)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"* [First Time Installation](#First-Time-Installation)","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"* [Quick Start](#Quick-Start)","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"* [Features](#Features)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"* [Command Summary](#Command-Summary)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"## First Time Installation","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"Prerequisite - ensure you have Java 11 or above installed in your Computer","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"1. Download Ikaros.jar to your desired folder","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"2. In the same folder run *java -jar IP.jar* on the console. (Do ensure you have Java JDK 11)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"3. Ikaros will create an *ikarosTaskData.txt* that will store your data for future reference when you launch the application for the first time.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"## Quick Start","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"Ensure you have completed the first time installation before proceeding with the running of this program","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"Upon Start up you will be greeted with a message similar to this displaying the day and the date","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"..........................................................","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"_______________     ___ -+- _______________","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"\\______       /    /_  \\ |  \\       ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":" \\______      \\_____/   \\___/      ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"   \\______         IKAROS        ______/","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"       \\____________     __________/","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"                  /_______\\","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"              Welcome to IKAROS!","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"           Your one and only butler","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"           ","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"             Monday, 27 Sept 2021","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"..........................................................","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"Following which, it will display the stored List  of tasks, and the user can begin to input their commands to Ikaros.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e **Quick Notes about the CLI**","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"\u003e - Data will be stored in IkarosTaskData.txt. If no such file exists, the program will display an error message. If it is your first time using the program proceed as per normal","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"\u003e - Words in `\u003cUPPERCASE_AND_ANGULAR_BRACKETS\u003e` refers to the parameters required for the specific commands","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"\u003e - Words in angular brackets `\u003cSEPERATED_BY/A_SLASH\u003e` refer to either our parameters where one or the othere parameter can be used.","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"\u003e - The format for how each command should be keyed in will be `demarcated in this box`","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"-------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"## Features","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"Below is a brief summary of the usable commands and features that can be utilised for Ikaros. ","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"Click on the separate links to find out more about each feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"* Adding a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"    * Todo task: `add todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    * Deadline task: `add deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    * Event task: `add event`","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"* Removing a task: `remove`","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"* Marking a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"  * Marking a task as done: `done`","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"  * Marking a task as undone: `undo`","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"* Displaying a list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"    * Display list of all tasks: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"    * Display list of Todo: `list todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"    * Display list of Deadlines: `list deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"    * Display list of Events: `list event`","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"* Update a Task: `update`","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"* Find a Task: `find`","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"* Help: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"* Exiting the application: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"### Adding a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"There are 3 different types of task that can be added (Todo, Deadline, Event). Tasks in the past cannot be added due to the lack of a time machine.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add todo` -\u003e adds a todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add todo \u003cTASK_DESCRIPTION\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add todo wash clothes`","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add deadline` -\u003e adds a deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add deadline \u003cTASK_DESCRIPTION\u003e /by-\u003cdd/MM/YYYY-HHmm\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add deadline complete assignment /by-30/09/2021-2359`","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"\u003e #### `add event` -\u003e adds a todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `add event \u003cTASK_DESCRIPTION\u003e /at-\u003cdd/MM/YYYY-HHmm\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `add event Dukes Birthday Celebration /at-10/12/2021-1900`","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"### Removing a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"This command will remove the specific task corresponding with the input number from your tasks list. Multiple tasks can be removed at once. Take note that there is no space between the task_numbers.","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"\u003e #### `remove` -\u003e removes task","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `remove \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `remove 3`","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `remove 3,4,5`","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"### Marking a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"This command will allow you to mark a task as done or mark it as un-done. Multiple tasks can be marked at once. Take note that there is no space between the task_numbers.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"\u003e #### `done` -\u003e mark task as done","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `done \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `done 3`","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `done 3,2,1`","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"\u003e #### `undo` -\u003e mark task as undone","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `undo \u003cTASK_NUMBER,TASK_NUMBER,...\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `undo 1`","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `undo 3,2,1`","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"### Displaying a list of Tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"This command can be used to view the different tasks in your list. Specifying which type of task you want to view will show you a list of those types of tasks arranged according to their date in ascending order.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list` -\u003e lists all the Task in order of date and time added","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list todo` -\u003e lists all Todos in order of date and time added","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list todo`","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list deadline` -\u003e lists all the Deadline in order of date and time due (nearest date to furthest)","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list deadline`","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"\u003e #### `list event` -\u003e lists all Todos in order of date and time the event will be held at (nearest date to furthest)","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `list event`","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"### Update a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"This command allows you to update the description or date of a specific task base on its index in the main list. An update cannot be undone.","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"\u003e #### `update` -\u003e updates a specific task","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `update \u003cTASK_NUMBER\u003e \u003cDESCRIPTION/DATE\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `update 2 date`","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `update 5 description`","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"### Find a Task","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"This command allows you to find Tasks related to a specific keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"\u003e #### `find` -\u003e task that is related to the keyword","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Example: `find read`","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"### Help","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"This command shows you, the list and the format of the usable commands while in the application","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"\u003e #### `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"### Exiting the Application","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"This command allows you to exit and close the program","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"\u003e #### \u0027bye\u0027","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"\u003e\u003e * Format: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"## Command Summary","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"|Action|Command Format|","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"|---|---|","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"|Add Todo|`add todo \u003cTASK_DESCRIPTION\u003e`| ","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"|Add Deadline|`add deadline \u003cTASK_DESCRIPTION\u003e /by-\u003cdd/MM/YYYY-HHmm\u003e`|   ","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"|Add Event|`add event TASK_DESCRIPTION /at-\u003cdd/MM/YYYY-HHmm\u003e`| ","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"|Remove task|`remove \u003cTASK_NUMBER\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"antrikshv"},"content":"|Mark as done|`done TASK_NUMBER`|","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"antrikshv"},"content":"|Mark as un-done|`undo TASK_NUMBER`|","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"|List|`list`|","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"antrikshv"},"content":"|List Todo| `list todo`|","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"antrikshv"},"content":"|List Deadline| `list deadline`|","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"|List Event|`list event`|","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"antrikshv"},"content":"|Update Task|`update \u003cTASK_NUMBER\u003e \u003cDESCRIPTION/DATE\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"|Find keyword|`find \u003cKEYWORD\u003e`|","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"|Help|`help`|","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"antrikshv"},"content":"|Exit|`bye`|","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"antrikshv":139,"-":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.processes.commands.ByeCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.processes.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.processes.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Interface;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.ProcessFiles;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"     * main code to run the overall processes of the entire program. Uses the runIkaros","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"     * function to run the bulk of the task assistant ikaros","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"     * @param args an array of sequence of characters (Strings) that are passed to the","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"     *             \"main\" function.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        Interface.introductoryMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        ProcessFiles.loadFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        runIkaros();","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        ProcessFiles.saveTasks();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        Interface.goodbyeMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"     * Runs Ikaros and manages the input of the user and the response of the","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"     * program. Main code running the bulk of the program","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    protected static void runIkaros() {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        String response;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        Command command;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        CommandResult feedback;","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        while (isRunning) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"            do {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                response \u003d Interface.readInput();","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                System.out.println(Interface.lineBreak);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                command \u003d Parser.parseCommand(response);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                feedback \u003d command.execute();","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                System.out.println(feedback.feedbackToUser);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                System.out.println(Interface.lineBreak);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            } while (ByeCommand.isRunning);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"            response \u003d Interface.readInput();","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            if (response.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                isRunning \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                System.out.println(Interface.lineBreak + System.lineSeparator() +","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                        \"No problem, what further assistance \" + \"do you require?\");","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"antrikshv":58,"-":2}},{"path":"src/main/java/duke/exceptions/DateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class DateTimeException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public DateTimeException(String message) {","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"antrikshv":9}},{"path":"src/main/java/duke/exceptions/DoneUndoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class DoneUndoException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public DoneUndoException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"antrikshv":9}},{"path":"src/main/java/duke/exceptions/RemoveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class RemoveException extends Exception {","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public RemoveException(String message) {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"antrikshv":9}},{"path":"src/main/java/duke/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class TaskException extends Throwable {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public TaskException(String message) {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"antrikshv":9}},{"path":"src/main/java/duke/exceptions/TimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class TimeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public TimeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"antrikshv":9}},{"path":"src/main/java/duke/processes/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.DateTimeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.TaskException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.TimeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Deadlines;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    protected static final int TIME_COMMAND \u003d 4;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    protected static final int DEADLINE_LENGTH \u003d 13;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    protected static final int EVENT_LENGTH \u003d 10;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    protected static final int TODO_LENGTH \u003d 9;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    protected static String taskDescription;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    protected static String taskTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    protected static String taskType;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    /* Indicates if and error occurs due to the wrong format typed by the user */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    protected static boolean isCorrectFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    protected LocalDateTime formattedDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy-HHmm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"     * Constructor used when AddCommand is used. Checks to see if the format of","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"     * the UserInput is correct and throws an error message if it is incorrect.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"     * Additionally, parses to see which type of task is added and prepares the","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"     * required data for that Task type to by calling the prepare methods. Changes","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"     * the value of isCorrectFormat to false if the format typed by the user is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"     * @param command  an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    public AddCommand(String[] command, String response) {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        isCorrectFormat \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            if ((command.length \u003d\u003d 1) || (command[1].isEmpty())) {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                throw new TaskException(\"please specify what to add\");","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"            taskType \u003d command[1];","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            if (!(taskType.equalsIgnoreCase(\"deadline\") || taskType.equalsIgnoreCase(\"event\")","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                    || taskType.equalsIgnoreCase(\"todo\"))) {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                throw new TaskException(\"Invalid Task entered please only add (deadline, event, todo)\");","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"            if ((command.length \u003d\u003d 2) || (command[2].isEmpty())) {","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                throw new TaskException(\"please specify task to add\");","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"            if (command[1].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"                prepareTodo(response);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"                if (command[1].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                    prepareDeadline(response);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                } else if (command[1].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"                    prepareEvent(response);","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        } catch (TaskException | TimeException | DateTimeException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"please check format. Use help function for guide!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"     * initializes the specific Task of type ToDo","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"    private void prepareTodo(String response) {","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"        taskTime \u003d \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"        formattedDate \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        taskDescription \u003d response.substring(TODO_LENGTH);","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"     * initializes the specific Task of type Event.","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"     * Throws TimeException when time is not specified by the user and Throws","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"     * DateTimeException when time indicated by user is in the past.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"     * @throws TimeException     exception when user does not specify Date and Time","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"     * @throws DateTimeException exception when user specifies a Date and Time in the past","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"    private void prepareEvent(String response) throws TimeException, DateTimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"        if (response.indexOf(\"/\") \u003c\u003d 0) {","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"            throw new TimeException(\"when is it being held? \" +","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"                    \"[indicate by adding: /at-dd/MM/yyyy-HH:mm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        taskDescription \u003d response.substring(EVENT_LENGTH, response.indexOf(\"/\") - 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        String date \u003d response.substring(response.indexOf(\"/\") + TIME_COMMAND);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"            formattedDate \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"            if (formattedDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"                throw new DateTimeException(\"Unfortunately we cannot travel back in Time. \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"                        \"Please key in a valid date\");","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"            throw new TimeException(\"please use this format for date and time: /at-dd/MM/yyyy-HHmm \");","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"     * initializes the specific Task of type Deadline.","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"     * Throws TimeException when time is not specified by the user and Throws","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"     * DateTimeException when time indicated by user is in the past.","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"     * @throws TimeException     exception when user does not specify Date and Time","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"     * @throws DateTimeException exception when user specifies a Date and Time in the past","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"    private void prepareDeadline(String response) throws TimeException, DateTimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"        if (response.indexOf(\"/\") \u003c\u003d 0) {","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"            throw new TimeException(\"when is it being held? \" +","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"                    \"[indicate by adding: /by-dd/MM/yyyy-HH:mm]\");","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"        taskDescription \u003d response.substring(DEADLINE_LENGTH, response.indexOf(\"/\") - 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"        String date \u003d response.substring(response.indexOf(\"/\") + TIME_COMMAND);","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"            formattedDate \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"            if (formattedDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"                throw new DateTimeException(\"Unfortunately we cannot travel back in Time. Please key in a valid date\");","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"            throw new TimeException(\"please use this format for date and time: /by-dd/MM/yyyy-HHmm \");","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"     * adds task to the main taskList array","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"antrikshv"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"antrikshv"},"content":"    private static void addToList(Task task) {","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"antrikshv"},"content":"        Duke.taskList.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"antrikshv"},"content":"     * executes the adding of a task the main taskList and returns a CommandResult which","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"antrikshv"},"content":"     * would indicate whether the result is carried out successfully, if isCorrectFormat","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"antrikshv"},"content":"     * is true","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"antrikshv"},"content":"     * @return returns a new CommandResult with a message indicating whether command was","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"antrikshv"},"content":"     * executed successfully.","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"antrikshv"},"content":"        if (isCorrectFormat) {","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"antrikshv"},"content":"            if (taskType.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"antrikshv"},"content":"                Event event \u003d new Event(taskDescription, formattedDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"antrikshv"},"content":"                addToList(event);","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"antrikshv"},"content":"            } else if (taskType.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"antrikshv"},"content":"                ToDo task \u003d new ToDo(taskDescription, formattedDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"antrikshv"},"content":"                addToList(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"antrikshv"},"content":"            } else if (taskType.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"antrikshv"},"content":"                Deadlines work \u003d new Deadlines(taskDescription, formattedDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"antrikshv"},"content":"                addToList(work);","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"Task added:\" + taskDescription +","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"antrikshv"},"content":"                    System.lineSeparator() + \"Total no. of Tasks \u003d \" + (Duke.taskList.size()));","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"No task added\");","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":183}},{"path":"src/main/java/duke/processes/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"     * Constructor for ByeCommand to instantiate the command","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"     * Changes the boolean isRunning to false when executed","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult with the message asking user whether they are","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"     * sure they want to exit the program.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        isRunning \u003d false;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Are you sure you want to leave [y/n]\");","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":23}},{"path":"src/main/java/duke/processes/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"     * Constructor for Command task","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public Command() {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"     * if a Command does not have a subclass this method will return an error","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"     * message through the CommandResult class","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     * @return a CommandResult type with the specific error message","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Sorry I did not quite understand, \" +","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"                System.lineSeparator() + \"try typing in help for brief user manual\");","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":21}},{"path":"src/main/java/duke/processes/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class CommandResult {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public String feedbackToUser;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"     * Constructor that sets the String feedback to User to indicate whether","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"     * command was executed successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"     * @param s message returned after execution of different Commands","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    public CommandResult(String s) {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"        feedbackToUser \u003d s;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":17}},{"path":"src/main/java/duke/processes/commands/DoneUndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.DoneUndoException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"public class DoneUndoCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    public static String[] userCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"     * Constructor to set the UserCommand to the given Command","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of String of the Users response","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    public DoneUndoCommand(String[] command) {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"        userCommand \u003d command;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"     * executes the DoneUndoCommand depending on whether the user specified","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"     * done or undo","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult with a string message indicating whether Command was executed","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"     * successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            if (userCommand[0].equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"                done(userCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"            } else if (userCommand[0].equalsIgnoreCase(\"undo\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"                undo(userCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"-------LIST UPDATED--------\");","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        } catch (DoneUndoException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"     * checks through the tasks that the user wants to undo and changes the isDone","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"     * status of the specified tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of String of the Users response","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"     * @throws DoneUndoException throws an error if the task is already marked as undone","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"    protected static void undo(String[] command) throws DoneUndoException {","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            String[] tasks \u003d command[1].split(\",\");","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"            int i;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            for (String j : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                i \u003d Integer.parseInt(j) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"                if (!Duke.taskList.get(i).isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                    throw new DoneUndoException(\"Task is currently incomplete\");","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.get(i).undo();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Ok i have changed the status for the specific task:\\n [\"","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                        + Duke.taskList.get(i).getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                        + Duke.taskList.get(i).getDescription());","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"That task does not exist\");","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"     * checks through the tasks that the user wants to mark done and changes the isDone","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"     * status of the specified tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of String of the Users response","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"     * @throws DoneUndoException throws an error if the task is already marked as done","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"    protected static void done(String[] command) throws DoneUndoException {","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"            String[] tasks \u003d command[1].split(\",\");","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"            int j;","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"            for (String i : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                j \u003d Integer.parseInt(i) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"                if (Duke.taskList.get(j).isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                    throw new DoneUndoException(\"Task is already completed\");","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.get(j).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Nice! i have marked this task as done:\\n [\"","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"                        + Duke.taskList.get(j).getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"                        + Duke.taskList.get(j).getDescription());","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"That task does not exist\");","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":90}},{"path":"src/main/java/duke/processes/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.TaskException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public static final int FIND_LENGTH \u003d 5;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    public static String keyword;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"     * Constructor that checks to see if the user has entered the command in the correct format.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"     * initializes the keyword that the user is searching for.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     * @param command  an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    public FindCommand(String[] command, String response) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            if (command[1].isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"                throw new TaskException(\"specify what you would like to find?\");","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"            keyword \u003d response.substring(FIND_LENGTH);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"     * iterates through the main taskList to check for tasks that matches","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"     * the keyword and prints out the matching tasks onto the console.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"     * @return returns the message depending on whether the search yielded results","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        int found \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        for (Task task : Duke.taskList) {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"            i++;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                System.out.println(i + \".[\" + task.getTaskID() + \"]\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                        \"[\" + task.getStatusIcon() +","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                        \"] \" + task.description + \" \" + task.getDate());","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                found++;","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        if (found \u003d\u003d 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"No results found :(\");","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(System.lineSeparator() + found + \" results found!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"antrikshv":54}},{"path":"src/main/java/duke/processes/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Interface;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"     * Constructor for HelpCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"     * Displays all the possible commands that can be used in this program for the user to","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     * reference","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult indicating the end of the commands","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        Interface.displayCommandList();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"---------end of commands-----------\");","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":23}},{"path":"src/main/java/duke/processes/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Interface;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public static ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    protected String listType;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     * Constructor for ListCommand. Parses through the different commands typed by the user","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     * and initializes the listType variable","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    public ListCommand(String[] command) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        } else if (command[1].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        } else if (command[1].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        } else if (command[1].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"others\";","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"     * lists the specified type of list. Normal list will list out the entire list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"     * but the specific task lists will, make a new sorted array based on its Task type and","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"     * the date and time of each of the tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult indicating if the list has been printed successfully or if errors","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"     * were encountered along the way","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        sortedList.clear();","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        switch (listType) {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        case \"list\":","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            Interface.printList(Duke.taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"        case \"event\":","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"            getListTypeTasks(listType);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"            bubbleSortTask();","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"            System.out.println(listType + \" list! Total number of \" + listType + \"s \u003d \"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                    + sortedList.size());","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"            Interface.printList(sortedList);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        case \"others\":","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"please specify type for list \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                    \"[list, list deadline, list event,list todo ]\");","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"--------END OF LIST-----------\");","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"     * places the tasks of the specified type into a sortedList that is not yet","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"     * sorted","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"     * @param type String indicating the type of the task","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"    private void getListTypeTasks(String type) {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"        for (Task task : Duke.taskList) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"            if (task.getTaskType().equalsIgnoreCase(type)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                sortedList.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"     * sorts the unsorted list using bubble sort","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"    private void bubbleSortTask() {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        for (int j \u003d 0; j \u003c sortedList.size() - 1; j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"            for (int i \u003d 0; i \u003c sortedList.size() - j - 1; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"                if (sortedList.get(i + 1).getDateValue().isBefore(sortedList.get(i).getDateValue())) {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"                    swap(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"     * utility method to help to swap tasks in the sortedList","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"     * @param i index of the task being swapped","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"    private void swap(int i) {","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        Task t;","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        t \u003d sortedList.get(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"        sortedList.set(i, sortedList.get(i + 1));","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        sortedList.set(i + 1, t);","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":110}},{"path":"src/main/java/duke/processes/commands/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.RemoveException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public String[] tasksToRemove;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"     * Constructo for RemoveCommand class, initializes tasksToRemove array using users","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"     * response","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    public RemoveCommand(String[] command) {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"        tasksToRemove \u003d command;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"     * removes the specified tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult indicating if tasks was removed successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        String result;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"            result \u003d remove(tasksToRemove);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(result + \" tasks removed\" + System.lineSeparator() + Duke.taskList.size()","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"                    + \" tasks remaining\");","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        } catch (RemoveException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"     * finds the index of the task that is to be removed and removes it from the main","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"     * Arraylist. If task specified no longer exists error message will be returned","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResults indicating whether task was successfully removed","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"     * @throws RemoveException Throws an error message if task specified no longer exists","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    public static String remove(String[] command) throws RemoveException {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"            String[] tasks \u003d command[1].split(\",\");","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            int j \u003d 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"            for (String s : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                int i \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                if (i \u003e Duke.taskList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                    throw new RemoveException(\"That task does not exist\");","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.remove(i - 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                j++;","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"            return String.valueOf(j);","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"            return \"Please specify a task [use numbers to indicate the task]\";","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":66}},{"path":"src/main/java/duke/processes/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.exceptions.DateTimeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.ToDo;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Interface;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import duke.processes.utility.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    protected String listType;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    protected String[] userCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy-HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"     * Constructor for update command that initializes the type of date to be updated","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"     * (listType) and the array string of the users commands (userCommand). Flags the listType","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"     * as invalid if the user did not type the command in the correct format.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"     * @param command an array of strings of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    public UpdateCommand(String[] command) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        userCommand \u003d command;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        if (userCommand.length \u003c\u003d 2) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            listType \u003d \"invalid\";","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand[2].equalsIgnoreCase(\"description\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            listType \u003d \"description\";","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand[2].equalsIgnoreCase(\"date\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            listType \u003d \"date\";","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            listType \u003d \"invalid\";","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"     * executes the specific update depending on what the user wanted to update. Prompts the","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"     * user a second time to get the new update that the user wants and replaces, the old","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"     * data with the new userInputted data. Prompts user to type command in the correct format","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"     * if the listType is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"     * @return CommandResult that indicates whether the update was executed successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            if (listType.equalsIgnoreCase(\"invalid\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                return new CommandResult(\"please specify what to update \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                        \"[update taskNumber description(or)date]\");","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"            int taskNum \u003d Integer.parseInt(userCommand[1]);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"            Task task \u003d Duke.taskList.get(taskNum - 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"            if (userCommand[2].equalsIgnoreCase(\"description\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"type new description below\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"                        Interface.lineBreak);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                String updateDescription \u003d Interface.readInput();","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                task.setDescription(updateDescription);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"            } else if (userCommand[2].equalsIgnoreCase(\"date\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                    return new CommandResult(\"Date cannot be updated for todo!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"type new date in the format: dd/MM/yyyy-HHmm\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                        Interface.lineBreak);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                LocalDateTime updateDateTime \u003d LocalDateTime.parse(Interface.readInput(), formatter);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"                if (updateDateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                    throw new DateTimeException(\"Unfortunately we cannot travel back in Time. \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"                            \"Please key in a valid date\");","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                task.setDate(updateDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"Task updated successfully!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"That task does not exist!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"            Command runCommand \u003d Parser.parseCommand(\"find \" + userCommand[1]);","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"            CommandResult feedback \u003d runCommand.execute();","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"            System.out.println(System.lineSeparator() + \"perhaps you were looking for these tasks?\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"                    feedback.feedbackToUser);","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"Please use the correct format [update task_number description(or)date eg, \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"                    \"update 1 date]\");","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"type new date in the format: dd/MM/yyyy-HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"antrikshv":95}},{"path":"src/main/java/duke/processes/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, HHmm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    public Deadlines(String description, LocalDateTime d) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        super(description, d);","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        return \"deadline\";","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    public String getTaskID() {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        return \"D\";","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        return date.format(format2);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"antrikshv":38}},{"path":"src/main/java/duke/processes/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, HHmm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public Event(String description, LocalDateTime d) {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"        super(description, d);","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"        return \"event\";","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    public String getTaskID() {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        return \"E\";","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        return date.format(format2);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"antrikshv":37}},{"path":"src/main/java/duke/processes/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    public String description;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public LocalDateTime date;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public Task(String description, LocalDateTime date) {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    public void setDate(LocalDateTime date) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    public void undo() {","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"     * returns the LocalDateTime date value instead of the string","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"     * @return LocalDateTime value","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    public LocalDateTime getDateValue() {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"        return date;","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        return getTaskType();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"    public String getTaskID() {","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        return getTaskID();","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"     * returns the String date value instead of the string","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"     * @return String value","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        return getDate();","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"antrikshv":78}},{"path":"src/main/java/duke/processes/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    public ToDo(String description, LocalDateTime d) {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"        super(description, d);","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        return \"todo\";","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    public String getTaskID() {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        return \"T\";","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        return \" \";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"antrikshv":35}},{"path":"src/main/java/duke/processes/utility/Interface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.utility;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"public class Interface {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    public static final String lineBreak \u003d \"...........................\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"            \".......................................\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    public static final String logo \u003d \"                         |\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"            \"_______________     ___ -+- _______________\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"            \"\\\\______       /    /_  \\\\ |  \\\\       ______/\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"            \" \\\\______      \\\\_____/   \\\\___/      ______/\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"            \"  \\\\______          IKAROS         ______/\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"            \"      \\\\_____________     ___________/\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            \"                  /_______\\\\\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"            \"              Welcome to IKAROS!\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            \"           Your one and only butler\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"     * reads the user input and returns it in a String form","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"     * @return string form of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    public static String readInput() {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"     * Greets user and displays today\u0027s date and day of the week","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"    public static void introductoryMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        LocalDate d \u003d LocalDate.now();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"             \" + d.getDayOfWeek() + \", \"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                + d.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Below is your current list of tasks.\"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                + \"What further assistance do you require?\");","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"     * prints the different commands the user can use in this program","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"    public static void displayCommandList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Below are the list of acceptable commands\"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                + \"add todo -\u003e add a todo task to the list [add todo todo_name]\"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"                + \"add event -\u003e adds an event task to the list [add event event_name \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"                \"/at-dd/MM/yyyy-HHmm\"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                + \"add deadline -\u003e adds a deadline task to the list \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                \"[add deadline deadline_name /by-dd/MM/yyyy-HHmm\"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                + \"remove -\u003e removes a task [remove task_number]\"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                + \"done -\u003e marks a task as complete [done task_number]\"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                + \"undo -\u003e marks a task as undone [undo task_number]\"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                + \"list -\u003e Display the list of all tasks\"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                + \"list event -\u003e Display the list of all Events sorted by the Date and Time\"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                + \"list deadline -\u003e Display the list of all Deadlines sorted by the Date and Time\"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"                + \"list todo -\u003e Display the list of all ToDos\"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"                + \"update -\u003e updates either a description or date of a specified task \" +","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                \"[update task_number description(or)date]\"","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"                + \"bye -\u003e kill ikaros\");","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"     * Bid Farewell to the user","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"    public static void goodbyeMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"GoodBye, Ikaros awaits for future commands\" + System.lineSeparator() +","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"                 \"              *FLIES AWAY*\");","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        System.out.println(Interface.lineBreak);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"     * prints the list of an Arraylist of elements of type Task in the specific format","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"     * @param tasks Arraylist of elements of type Task","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        tasks.stream()","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"                .forEach(task -\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"                    i.getAndIncrement();","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"                    System.out.print(i + \".[\" + task.getTaskID() + \"]\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"                            \"[\" + task.getStatusIcon() +","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"                            \"] \" + task.description + \" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"                    if (task.getTaskType().equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"                        System.out.println(\"(at: \" + task.getDate() + \")\");","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"                    } else if (task.getTaskType().equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"                        System.out.println(\"(by: \" + task.getDate() + \")\");","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"                    } else if (task.getTaskType().equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"                        System.out.println(task.getDate());","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"                });","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"antrikshv":120}},{"path":"src/main/java/duke/processes/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.utility;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.processes.commands.*;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class Parser {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"     * parses through the user input to make sense of the different command","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"     * and inform the main class what command the user has inputted","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"     * @param response the direct string message of the users response","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"     * @return returns the Command inputted by the user of type Command","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    public static Command parseCommand(String response) {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"        String[] command \u003d response.split(\" \", 10);","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"        switch (command[0]) {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"        case \"list\":","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"            return new ListCommand(command);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"        case \"done\":","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        case \"undo\":","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            return new DoneUndoCommand(command);","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        case \"remove\":","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            return new RemoveCommand(command);","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        case \"add\":","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            return new AddCommand(command, response);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        case \"help\":","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        case \"find\":","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            return new FindCommand(command, response);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        case \"update\":","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            return new UpdateCommand(command);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Im sorry i did not catch that maybe these instructions below will help\"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator() + Interface.lineBreak);","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"antrikshv":40}},{"path":"src/main/java/duke/processes/utility/ProcessFiles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package duke.processes.utility;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Deadlines;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import duke.processes.tasks.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import java.io.File;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"public class ProcessFiles {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy-HHmm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"     * Scans the text file and inputs the values into the programs ArraysList by","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"     * calling the loadTasks function","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    public static void loadFile() {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        String[] command;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        File ikarosTaskData \u003d new File(\"ikarosTaskData.txt\");","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        Scanner scan;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            scan \u003d new Scanner(ikarosTaskData);","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"            if (ikarosTaskData.exists()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"                while (scan.hasNext()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"                    command \u003d scan.nextLine().split(\"\u003e\");","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"                    loadTasks(command);","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                FileWriter f \u003d new FileWriter(ikarosTaskData.getAbsoluteFile());","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"                f.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"File not found. pls try reload again, or start a new\");","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"File corrupted. pls try reload again, or start a new\");","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        } finally {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"            Interface.printList(Duke.taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            System.out.println(Interface.lineBreak);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"     * Parses through the given string array of commands and then adds the specific","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"     * command to the Arraylist of type Task and prints error if file is in the incorrect","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"     * format or corrupted.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"     * @param command the single line command stored in the .txt file","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"    private static void loadTasks(String[] command) {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"            switch (command[0]) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                ToDo taskTodo \u003d new ToDo(command[2], LocalDateTime.parse(command[3], format1));","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.add(taskTodo);","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                Deadlines taskDeadline \u003d new Deadlines(command[2], LocalDateTime.parse(command[3], format1));","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.add(taskDeadline);","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"            case \"event\":","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                Event taskEvent \u003d new Event(command[2], LocalDateTime.parse(command[3], format1));","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.add(taskEvent);","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"            default:","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"file error\");","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"            if (command[1].equalsIgnoreCase(\"X\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                Duke.taskList.get(Duke.taskList.size() - 1).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"File may be corrupted please check your storage file and start the program again!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"     * At the end of the programs rewrites the date file and stores the new values in","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"     * the Arraylist to remember the list for the next time the program runs","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"    public static void saveTasks() {","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"            FileWriter fw \u003d new FileWriter(\"ikarosTaskData.txt\");","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"            for (Task task : Duke.taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"                fw.write(task.getTaskType() + \"\u003e\"","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"                        + task.getStatusIcon() + \"\u003e\"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"                        + task.getDescription() + \"\u003e\"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"                        + task.getDateValue().format(format1) + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"            fw.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Something went wrong\" + e.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"antrikshv":107}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"hello","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"add todo eat banana","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"add deadline complete cs2113t tutorial prep /by wednesday","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"add event freedom from shn /at 20 sept 12 noon","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"list","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"done 2","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"list","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"undo 2","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"list","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"remove 1","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"antrikshv":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\Exceptions\\*.java","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antrikshv":2,"-":19}}]
