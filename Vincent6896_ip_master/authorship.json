[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"# \"Duke\" User Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"## Introduction","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"Duke is a program which can help you to manage the tasks. It will automatically save the tasks you add and reload when you reopen this program.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"## Quick Start:","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"Prerequisites: Latest version of Java 11 on your computer","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"1. Download Duke at [here](https://github.com/Vincent6896/ip/releases/download/v1.0/individual.project.jar) ","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"2. Move the .jar file to your desired folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"3. Open a terminal and move to that folder which containing the .jar file, and execute the following command: java -jar individual\\ project.jar","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"4. If the program is successfully running, you should see the following:","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"Hello from","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":" ____        _        ","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    Hello! I\u0027m Duke","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    What can I do for you?","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"    Enter \u0027help\u0027 for detailed information","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"#### 1. Add tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"   1. Add todo task:","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"         - Format: ````todo [task]````","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"         - Add a new todo task","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"         - Example: todo homework","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"         - Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"       Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"        [T][ ] homework","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"       Now you have 1 task(s) in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"   2. Add deadline task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"       - Format: ````deadline [task /by [time]]````","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"       - Add a new deadline task","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"       - Example: deadline return book /by Sunday","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"       - Expected output: ","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"       Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"        [D][ ] return book (by: Sunday)","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"       Now you have 2 task(s) in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"   3. Add event task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"       - Format: ````event [task /at [time]]````","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"        - Add a new event task","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"       - Example: event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"       - Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"       Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"        [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"       Now you have 3 task(s) in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"   ```","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"#### 2. List all tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"- Print all task in the list","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"- Format: list","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"Vincent6896"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"Vincent6896"},"content":"    1.[T][ ] homework","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"Vincent6896"},"content":"    2.[D][ ] return book (by: Sunday)","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"    3.[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"#### 3. Mark one task as done and print all finished tasks in list","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"- Format: `done [index]`","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"- Example: `done 1`","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"    [T][X] homework","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"Vincent6896"},"content":"    Congratulations! Now you have done 1 task(s):","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"Vincent6896"},"content":"    1.[T][X] homework","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"#### 4. Delete one task in list","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"Vincent6896"},"content":"- Format: `delete [index]`","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"Vincent6896"},"content":"- Example: `delete 3`","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"Vincent6896"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"    [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"Vincent6896"},"content":"#### 5. Find tasks with keyword","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"Vincent6896"},"content":"- Format: `find [keyword]`","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"- Example: `find book`","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"Vincent6896"},"content":"    Here are the tasks found in the list:","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"Vincent6896"},"content":"    1.[D][ ] return book (by: Sunday)","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"Vincent6896"},"content":"    2.[T][ ] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"#### 6. View the help information","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"Vincent6896"},"content":"- Format: `help`","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"Vincent6896"},"content":"    Hello! Welcome to Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"Vincent6896"},"content":"    I will help you track three types of tasks: Todo, Deadline and Event.","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"Vincent6896"},"content":"    To add task in list, start with \"todo\", \"deadline\" or \"event\"and followed with the description of your task","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"Vincent6896"},"content":"    (For deadlines and events, please enter either \"by (your deadline)\"or \"at (your event time)\")","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"Vincent6896"},"content":"    To view all your tasks, enter \"list\".","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"Vincent6896"},"content":"    To mark one task as done and print all finished tasks in list, enter \"done (task index)\". ","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"Vincent6896"},"content":"    To delete a task in the list, enter \"delete (task index)\". ","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"Vincent6896"},"content":"    To find your tasks with keywords, enter \"find (keyword)\". ","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"Vincent6896"},"content":"    To exit duke, enter \"bye\". ","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"Vincent6896"},"content":"    To view the help information, enter \"help\". ","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"Vincent6896"},"content":"    Thank you for choosing Duke :) Please enter command:","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"Vincent6896"},"content":"#### 7. Exit the program","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"Vincent6896"},"content":"- Format: `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"Vincent6896"},"content":"- Expected output:","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"Vincent6896"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"Vincent6896"},"content":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"Vincent6896"},"content":"````","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"Vincent6896"},"content":"## Command Summary","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"Vincent6896"},"content":" Action |  Format | Function","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"Vincent6896"},"content":" ------------ | ------------- | -------------","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"Vincent6896"},"content":" todo | todo [task_description] | Add todo task","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"Vincent6896"},"content":" event | event [task_description /by [task_time]] | Add event task","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"Vincent6896"},"content":" deadline | deadline [task_description /by [task_time]] | Add deadline task","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"Vincent6896"},"content":" list | list | List all tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"Vincent6896"},"content":" done | done [index] | Mark one task as done and print all remaining finished tasks in list","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"Vincent6896"},"content":" delete | delete [index] | Delete one task in list","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"Vincent6896"},"content":" find | find [keyword] | Find tasks with keyword","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"Vincent6896"},"content":" help | help | View the help information","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"Vincent6896"},"content":" bye | bye | Exit the program","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":16,"Vincent6896":149}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import java.lang.String;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"public class Duke {","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"    public static TaskList list \u003d new TaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    public static TaskDoneList doneList \u003d new TaskDoneList();","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"    public static void run() {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"            String order;","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"            order \u003d in.nextLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"                Command c \u003d Parser.parse(order);","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"                c.executeCommand(list, doneList, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"                e.printErrorMessage(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"        ui.showWelcomeScreen();","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        storage \u003d new Storage(\"dukeList.txt\", \"dukeDoneList.txt\");","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"        storage.readFiles(list, doneList, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"        run();","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Vincent6896":42}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    public static final int FIND_TASK_TODO \u003d 5;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public static final int FIND_TASK_DEADLINE \u003d 9;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    public static final int FIND_TASK_EVENT \u003d 6;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    public static final int FIND_TIME \u003d 4;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    private static String order;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    public AddCommand(String order) {","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     * Add a task into the list","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"     * @throws EmptyTaskException If the description of task is empty,","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"     *                            exception occurs","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) throws EmptyTaskException {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"            if (order.contains(\"todo\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"                String task \u003d order.substring(order.indexOf(\"todo\") + FIND_TASK_TODO);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"                list.addTask(new Todo(task));","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"            } else if (order.contains(\"event\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"                String task \u003d order.substring(order.indexOf(\"event\")","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"                    + FIND_TASK_EVENT, order.indexOf(\"/\") - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                String at \u003d order.substring(order.indexOf(\"/at\") + FIND_TIME);","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"                list.addTask(new Event(task, at));","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"            } else if (order.contains(\"deadline\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"                String task \u003d order.substring(order.indexOf(\"deadline\")","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"                    + FIND_TASK_DEADLINE, order.indexOf(\"/\") - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"                String by \u003d order.substring(order.indexOf(\"/by\") + FIND_TIME);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"                list.addTask(new Deadline(task, by));","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"            ui.printAddCommand(list, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":49}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.ErrorCreateFileException;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"     * Exit the program","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     * @throws ErrorCreateFileException If there are errors","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     *                                  when creating files, exception occurs","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) throws ErrorCreateFileException {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"        Storage storage \u003d new Storage(\"dukeList.txt\", \"dukeDoneList.txt\");","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"            storage.createListFile(list);","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"            storage.createDoneListFile(doneList);","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"            throw new ErrorCreateFileException();","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"        ui.showTerminateScreen(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"        return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    public abstract void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) throws DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"        return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"    private String task;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public DeleteCommand(String task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * Delete the task in list according to the index input by user","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     * @throws ErrorDoneException If the format of index input by user","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     *                            is not correct, exception occurs","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) throws ErrorDeleteException {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"            int index \u003d Integer.parseInt(task.substring(task.indexOf(\" \") + 1));","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"            if (index \u003e list.listSize() || index \u003c\u003d 0) {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    Out of range. Please try again\");","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\\n    \" + list.getTask(index - 1));","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"                list.removeTask(index - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    Now you have \" + list.listSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"            throw new ErrorDeleteException();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"            throw new ErrorDeleteException();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":45}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.ErrorDoneException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    private String task;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public DoneCommand(String task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * Mark the task as done in list according to the index input by user","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     * @throws ErrorDoneException If the format of index","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     *                            is not correct, exception occurs","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) throws ErrorDoneException {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"            int index \u003d Integer.parseInt(task.substring(task.indexOf(\" \") + 1));","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"            if (index \u003e list.listSize() || index \u003c\u003d 0) {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    Out of range. Please try again\");","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"                index \u003d index - 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"                list.getTask(index).isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"                list.getTask(index).description \u003d list.getTask(index).description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"                doneList.addDoneTask(list.getTask(index));","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n    \"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"                    + list.getTask(index));","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"                ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"                ui.printDoneList(doneList, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"            throw new ErrorDoneException();","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"            throw new ErrorDoneException();","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskDoneList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    public String order;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public FindCommand(String order) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * Find a task in the list","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"        String keyWords \u003d this.order.substring(4);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        int j \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Here are the tasks found in the list:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d 0; i \u003c list.listSize(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"            if (list.getTask(i).description.contains(keyWords)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    \" + j + \".\" + list.getTask(i));","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"                j++;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"        if(j \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    There is no task in the list matching the keyword(s)\");","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Vincent6896":39}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskDoneList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"     * Print the help message","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"        ui.showHelpMessage(ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Vincent6896":20}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"     * Print all tasks in the list","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    public void executeCommand(TaskList list, TaskDoneList doneList, Ui ui){","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"        ui.printList(list, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":20}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.exception;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"    public void printErrorMessage(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"        ui.printDukeException(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":8}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.exception;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class EmptyTaskException extends DukeException{","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    public void printErrorMessage(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"        ui.printTaskError(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":10}},{"path":"src/main/java/duke/exception/ErrorCreateFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.exception;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class ErrorCreateFileException extends DukeException{","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"    public void printErrorMessage(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"        ui.printCreateFileError(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":11}},{"path":"src/main/java/duke/exception/ErrorDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.exception;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class ErrorDeleteException extends DukeException{","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    public void printErrorMessage(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"        ui.printDeleteError(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":10}},{"path":"src/main/java/duke/exception/ErrorDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.exception;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class ErrorDoneException extends DukeException{","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    public void printErrorMessage(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"        ui.printDoneError(ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"public class Parser {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    private String command;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     * Determine the command type of the command which is input by the user","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     * If the command type is unknown, DukeException is thrown","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     * @param command  The input by the user","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     * @return the corresponding command type","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     * @throws DukeException if the command does not match any known command type","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    public static String getCommandType(String command) throws DukeException{","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"        if (command.contains(\"done\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"            return \"DONE\";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"            return \"DELETE\";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"bye\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"            return \"BYE\";","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"list\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            return \"LIST\";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"            return \"T\";","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"            return \"D\";","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"            return \"E\";","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"            return \"FIND\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"        } else if (command.contains(\"help\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"            return \"HELP\";","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"     * Parses the full command given by the user as input.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"     * @param command The input by the user that is to be parsed.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"     * @return Command that corresponds to the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"     * @throws DukeException If the command is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"            String commandType \u003d getCommandType(command);","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Vincent6896"},"content":"            switch (commandType) {","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"            case \"DELETE\":","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"                return new DeleteCommand(command);","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"            case \"DONE\":","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"                return new DoneCommand(command);","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"            case \"BYE\":","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"            case \"LIST\":","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"            case \"FIND\":","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"                return new FindCommand(command);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"            case \"HELP\":","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"            default:","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"                return new AddCommand(command);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":77}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import java.io.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"public class Storage {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    private String listFilePath;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    private String doneListFilePath;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    public Storage(String listFilePath, String doneListFilePath) {","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"        this.listFilePath \u003d listFilePath;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"        this.doneListFilePath \u003d doneListFilePath;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     * Read the context of files into list and doneList","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     * @param ui The ui that is used","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"     * @throws IOException If the path is invalid and some other errors occur,","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"     * exception occurs.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"    public void readFiles(TaskList list, TaskDoneList doneList, Ui ui) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"            File listFile \u003d new File(this.listFilePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"            File listDoneFile \u003d new File(this.doneListFilePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"            BufferedReader bufferList \u003d new BufferedReader(new FileReader(listFile));","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            BufferedReader bufferDoneList \u003d new BufferedReader(new FileReader(listDoneFile));","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"            String str;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"                while ((str \u003d bufferList.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"                    String[] tasks \u003d str.split(\",\");","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                    for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"                        String description \u003d tasks[i].substring(8);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"                        if (i \u003d\u003d tasks.length - 1) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"                            description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"                        }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"                        switch (tasks[i].substring(2, 3)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"                        case \"T\":","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"                            if (tasks[i].contains(\"X\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"                                Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"                                todo.description \u003d todo.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"                                todo.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(todo);","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"                            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(new Todo(description));","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"                            }","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"                        case \"D\":","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"                            String by \u003d tasks[i].substring(tasks[i].indexOf(\":\") + 2, tasks[i].indexOf(\")\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"                            if (tasks[i].contains(\"X\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"                                Deadline deadline \u003d new Deadline(description.substring(0, description.indexOf(\"(\") - 1), by);","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"                                deadline.description \u003d deadline.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Vincent6896"},"content":"                                deadline.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(deadline);","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"                            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(new Deadline(description.substring(0, description.indexOf(\"(\") - 1), by));","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"                            }","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"                        case \"E\":","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"                            String at \u003d tasks[i].substring(tasks[i].indexOf(\":\") + 2, tasks[i].indexOf(\")\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"                            if (tasks[i].contains(\"X\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"                                Event event \u003d new Event(description.substring(0, description.indexOf(\"(\") - 1), at);","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"                                event.description \u003d event.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"                                event.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(event);","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"                            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"                                list.addTask(new Event(description.substring(0, description.indexOf(\"(\") - 1), at));","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"                            }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"                        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"                            System.out.println(\"There are errors in reading in files.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"                        }","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"                    }","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"Vincent6896"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"Vincent6896"},"content":"                ui.printList(list, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"Vincent6896"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"                ui.printList(list, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"                while ((str \u003d bufferDoneList.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"                    String[] tasks \u003d str.split(\",\");","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"                    for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"                        String description \u003d tasks[i].substring(8);","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"                        if (i \u003d\u003d tasks.length - 1) {","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"                            description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"                        }","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"                        switch (tasks[i].substring(2, 3)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"                        case \"T\":","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"                            Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"Vincent6896"},"content":"                            todo.description \u003d todo.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"Vincent6896"},"content":"                            todo.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"                            doneList.addDoneTask(todo);","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"                        case \"D\":","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"                            String by \u003d tasks[i].substring(tasks[i].indexOf(\":\") + 2, tasks[i].indexOf(\")\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"Vincent6896"},"content":"                            Deadline deadline \u003d new Deadline(description.substring(0, description.indexOf(\"(\") - 1), by);","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Vincent6896"},"content":"                            deadline.description \u003d deadline.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"                            deadline.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"                            doneList.addDoneTask(deadline);","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Vincent6896"},"content":"                        case \"E\":","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"                            String at \u003d tasks[i].substring(tasks[i].indexOf(\":\") + 2, tasks[i].indexOf(\")\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"                            Event event \u003d new Event(description.substring(0, description.indexOf(\"(\") - 1), at);","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"Vincent6896"},"content":"                            event.description \u003d event.description.replaceFirst(\" \", \"X\");","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"Vincent6896"},"content":"                            event.isDone \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"Vincent6896"},"content":"                            doneList.addDoneTask(event);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"Vincent6896"},"content":"                            continue;","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"Vincent6896"},"content":"                        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"                            System.out.println(\"    There are errors in reading in files.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"                        }","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"                    }","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"Vincent6896"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"Vincent6896"},"content":"                ui.printDoneList(doneList, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"Vincent6896"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"Vincent6896"},"content":"                ui.printDoneList(doneList, ui);","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"Vincent6896"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    No files saved. Please start using Duke now!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"            ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"Vincent6896"},"content":"     * Update all the remaining tasks into a file","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"Vincent6896"},"content":"     * @param list The list of tasks known","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"Vincent6896"},"content":"     * @throws IOException If the path is invalid and some other errors occur,","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Vincent6896"},"content":"     *                     exception occurs.","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"Vincent6896"},"content":"    public void createListFile(TaskList list) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"Vincent6896"},"content":"        File dukeData \u003d new File(this.listFilePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"Vincent6896"},"content":"        if (!dukeData.exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"Vincent6896"},"content":"            dukeData.createNewFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"Vincent6896"},"content":"        FileWriter writer \u003d new FileWriter(dukeData);","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"Vincent6896"},"content":"        BufferedWriter out \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"Vincent6896"},"content":"        out.write(String.valueOf(list));","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"Vincent6896"},"content":"        out.flush();","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"Vincent6896"},"content":"        out.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"Vincent6896"},"content":"     * Update all the remaining tasks which have been finished into a file","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Vincent6896"},"content":"     * @param doneList The list of tasks known","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Vincent6896"},"content":"     * @throws IOException If the path is invalid and some other errors occur,","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Vincent6896"},"content":"     *                     exception occurs.","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Vincent6896"},"content":"    public void createDoneListFile(TaskDoneList doneList) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"Vincent6896"},"content":"        File dukeDoneData \u003d new File(this.doneListFilePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"Vincent6896"},"content":"        if (!dukeDoneData.exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"Vincent6896"},"content":"            dukeDoneData.createNewFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"Vincent6896"},"content":"        FileWriter writer \u003d new FileWriter(dukeDoneData);","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"Vincent6896"},"content":"        BufferedWriter out \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"Vincent6896"},"content":"        out.write(String.valueOf(doneList));","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"Vincent6896"},"content":"        out.flush();","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"Vincent6896"},"content":"        out.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":164}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"public class Deadline extends List {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"    protected String by;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    ","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Vincent6896":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"public class Event extends List {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"    protected String at;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Vincent6896":15}},{"path":"src/main/java/duke/task/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"import java.lang.String;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"public class List {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"    public String description;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"    public List(String description) {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"        this.description \u003d \"[ ] \" + description;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"        return description;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Vincent6896":16}},{"path":"src/main/java/duke/task/TaskDoneList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class TaskDoneList {","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"    public static ArrayList\u003cList\u003e doneList;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"    public TaskDoneList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"        doneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"     * Get the finished task in the doneList corresponding to the index","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"     * @param taskId The index of the task that need to be returned","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"     * @return The task in the doneList corresponding to the index","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"    public List getDoneTask(int taskId) {","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"        return doneList.get(taskId);","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"     * Add the finished task into doneList","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"     * @param task The index of the task that need to be added","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"     * @return True or false which indicates whether add the task successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"    public boolean addDoneTask(List task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"        return doneList.add(task);","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"     * Get size of doneList","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"     * @return The size of doneList","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"    public int doneListSize() {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        return doneList.size();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"        return String.valueOf(doneList);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":45}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"public class TaskList {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    public static ArrayList\u003cList\u003e list;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    public TaskList(ArrayList\u003cList\u003e list) {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"     * Get the task in the list corresponding to the index","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"     * @param taskId The index of the task that need to be returned","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"     * @return The task in the list corresponding to the index","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    public List getTask(int taskId) {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"        return list.get(taskId);","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"     * Add the task into list","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"     * @param task The index of the task that need to be added","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"     * @return True or false which indicates whether add the task successfully","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"    public boolean addTask(List task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"        return list.add(task);","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"     * Remove the task from the list according to the corresponding index","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"     * @param taskId The index of the task that need to be removed","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"     * @return The task in the list corresponding to the index","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"    public List removeTask(int taskId) {","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"        return list.remove(taskId);","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"     * Get size of list","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"     * @return The size of list","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"    public int listSize() {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"        return list.size();","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"        return String.valueOf(list);","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"public class Todo extends List {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Vincent6896":13}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package duke.ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import duke.task.TaskDoneList;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"public class Ui {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"    private static final String SPLIT_LINE \u003d \"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    public void showWelcomeScreen() {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(SPLIT_LINE + \"\\n    Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"            + \"    What can I do for you?\\n\" + SPLIT_LINE);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Enter \\\u0027help\\\u0027 for detailed information\\n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"    public void printSplitLine() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(SPLIT_LINE);","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"     * Print only all tasks which have been finished","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"    public void printDoneList(TaskDoneList doneList, Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"        if (doneList.doneListSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    You have not finished any tasks\");","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    Congratulations! Now you have done \" + doneList.doneListSize() + \" task(s):\");","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"            for (int i \u003d 0; i \u003c doneList.doneListSize(); i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + doneList.getDoneTask(i));","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"     * Print all tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"    public static void printList(TaskList list, Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"        if (list.listSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"            ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    There is no task in your list!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"            ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"            for (int i \u003d 0; i \u003c list.listSize(); i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + list.getTask(i));","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"    public void showTerminateScreen(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"    public void showHelpMessage(Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Hello! Welcome to Duke.\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"            + \"    I will help you track three types of tasks: Todo, Deadline and Event.\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"            + \"    To add task in list, start with \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\"\"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"            + \"and followed with the description of your task\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"            + \"    (For deadlines and events, please enter either \\\"by (your deadline)\\\"\"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"            + \"or \\\"at (your event time)\\\")\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"            + \"    To view all your tasks, enter \\\"list\\\".\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"            + \"    To mark one task as done and print all finished tasks in list,\"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"            + \" enter \\\"done (task index)\\\". \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"            + \"    To delete a task in the list, enter \\\"delete (task index)\\\". \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"            + \"    To find your tasks with keywords, enter \\\"find (keyword)\\\". \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"Vincent6896"},"content":"            + \"    To exit duke, enter \\\"bye\\\". \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"Vincent6896"},"content":"            + \"    To view the help information, enter \\\"help\\\". \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"Vincent6896"},"content":"            + \"    Thank you for choosing Duke :) Please enter command:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"    public void printAddCommand(TaskList list, Ui ui){","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"     \" + list.getTask(list.listSize() - 1));","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    Now you have \" + list.listSize() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"        printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"     * Print error message when program cannot understand the command","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Vincent6896"},"content":"    public void printDukeException(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"     * Print error message when the description of a task is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"    public void printTaskError(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    ☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Vincent6896"},"content":"     * Print error message when the index","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Vincent6896"},"content":"     * after \u0027delete\u0027 command is not correct","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"    public void printDeleteError(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    ☹ OOPS!!! You need to add a correct index after \u0027delete\u0027 \");","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"Vincent6896"},"content":"     * Print error message when the index","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"Vincent6896"},"content":"     * after \u0027done\u0027 command is not correct","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"Vincent6896"},"content":"    public void printDoneError(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    ☹ OOPS!!! You need to add a correct index after \u0027done\u0027 \");","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"Vincent6896"},"content":"     * Print error message when the create-file process is failed","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Vincent6896"},"content":"    public void printCreateFileError(Ui ui) {","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"    ☹ OOPS!!! There are some errors when creating files\");","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"Vincent6896"},"content":"        ui.printSplitLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":138}},{"path":"src/main/java/dukeDoneList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[T][X] borrow book, [D][X] return book (by: Sunday), [E][X] project meeting (at: Mon 2-4pm)]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":1}},{"path":"src/main/java/dukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[T][X] borrow book, [T][ ] homework, [D][X] return book (by: Sunday), [D][ ] finish the lab quiz (by: Today), [E][X] project meeting (at: Mon 2-4pm)]","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Vincent6896":1}},{"path":"src/out/artifacts/ip_jar/dukeDoneList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[T][X] homework]","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"Vincent6896":1}},{"path":"src/out/artifacts/ip_jar/dukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[E][ ] Wang Chuhan attends CS2113 lecture   (at:  Friday 17 Sep 2021 from 4-6pm), [T][X] homework]","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"Vincent6896":1}},{"path":"src/out/production/individual project/dukeDoneList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[T][X] borrow book, [D][X] return book (by: Sunday), [E][X] project meeting (at: Mon 2-4pm)]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Vincent6896":1}},{"path":"src/out/production/individual project/dukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"[[T][X] borrow book, [T][ ] homework, [D][X] return book (by: Sunday), [D][ ] finish the lab quiz (by: Today), [E][X] project meeting (at: Mon 2-4pm)]","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Vincent6896":1}}]
