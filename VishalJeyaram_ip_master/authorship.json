[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"VishalJeyaram":2,"-":22}},{"path":"Tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"event run /at 2024-12-25 19:00 | 1","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"VishalJeyaram":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":" * Class that inherits from Task, used to create a new Deadline task.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    protected String by;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"    protected LocalTime byTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"     * Constructor used to create a new deadline object.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"     * @param by the date and time of the event","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"        String[] dateAndTime \u003d by.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"        this.byDate \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"        this.byTime \u003d LocalTime.parse(dateAndTime[1]);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"     * Method to return the deadline task from the ArrayList in a specified format","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"     * @return deadline task string in a specific format","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"        String properDate \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"        String properTime \u003d byTime.format(DateTimeFormatter.ofPattern(\"ha\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + super.toString() + \" (by: \" + properDate + \" \" + properTime + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"VishalJeyaram":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":" * The entire program begins here. All class objects are created here.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"     * To create new Ui, Storage, Tasklist and Parser object, and load data from the text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     * @param filePath the name of the text file","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"            tasks \u003d new TaskList(storage.loadTasks(),storage);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"            Ui.printFileNotFoundMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"            Ui.printIOExceptionMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"     * Allows the user to send his/her commands to C3PO until the user says \"bye\".","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"    public void sendCommand() {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"        String line;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.greetUser();","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"VishalJeyaram"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"VishalJeyaram"},"content":"            try {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.promptUser();","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"VishalJeyaram"},"content":"                line \u003d ui.sendInput();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"VishalJeyaram"},"content":"                parser.checkCommand(line);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"VishalJeyaram"},"content":"                isExit \u003d parser.isBye;","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"VishalJeyaram"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.printNumberFormatExceptionMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"VishalJeyaram"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"VishalJeyaram"},"content":"                // DukeException errors will be printed ","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"VishalJeyaram"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.printIOExceptionMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"VishalJeyaram"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.printDateTimeExceptionMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.sayBye();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"VishalJeyaram"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"VishalJeyaram"},"content":"        new Duke(\"Tasks.txt\").sendCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"VishalJeyaram":63,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":" * To handle all errors that arise when the command passed by a user is illegal.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"     * Constructor used to create a new deadline object.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"     * @param errorMessage the error message to be printed out","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"VishalJeyaram":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":" * Class that inherits from Task, used to create a new Event task.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    protected LocalDate atDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"    protected LocalTime atTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"     * Constructor used to create a new event object.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"     * @param at the date and time of the event","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"        String[] dateAndTime \u003d at.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"        this.atDate \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"        this.atTime \u003d LocalTime.parse(dateAndTime[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"     * Method to return the event task from the ArrayList in a specified format","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"     * @return event task string in a specific format","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"        String properDate \u003d atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"        String properTime \u003d atTime.format(DateTimeFormatter.ofPattern(\"ha\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + super.toString() + \" (at: \" + properDate + \" \" + properTime + \")\";","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"VishalJeyaram":41}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":" * To make sense of the user\u0027s commands by checking if the command is legal or not.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":" * If the command is not legal, the respective DukeException will be thrown.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":" * If the command is legal, the respective TaskList methods will be called.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"public class Parser {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    protected boolean isBye;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"     * Instantiates the Parser object.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"     * @param tasks the task object","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"     * Checks if the given command is one word or multiple words, calls the respective methods.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"     * @param line user\u0027s input/command.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"    public void checkCommand(String line) throws DukeException, IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"        String[] input \u003d line.split(\" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"        String firstWord \u003d input[0];","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"            checkSingleCommand(firstWord);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"            checkMultiCommand(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"VishalJeyaram"},"content":"     * Determines the type of command given by the user, calls the respective TaskList methods to take action.","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"VishalJeyaram"},"content":"     * If the command is not legal, the respective DukeException will be thrown.","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"VishalJeyaram"},"content":"     * @param firstWord the first word of the command given by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"VishalJeyaram"},"content":"    public void checkSingleCommand(String firstWord) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"VishalJeyaram"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"VishalJeyaram"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"VishalJeyaram"},"content":"            isBye \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"VishalJeyaram"},"content":"        case \"list\":","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"VishalJeyaram"},"content":"            if (tasks.positionCheck \u003d\u003d 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"VishalJeyaram"},"content":"                throw new DukeException(Ui.EMPTY);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"VishalJeyaram"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"VishalJeyaram"},"content":"                tasks.printList();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"VishalJeyaram"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"VishalJeyaram"},"content":"        case \"done\":","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_DONE);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"VishalJeyaram"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_DELETE);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"VishalJeyaram"},"content":"        case \"find\":","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_FIND);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"VishalJeyaram"},"content":"        case \"date\":","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_DATE);","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"VishalJeyaram"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_TASK);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"VishalJeyaram"},"content":"     * Determines the type of command given by the user, calls the respective TaskList methods to take action.","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"VishalJeyaram"},"content":"     * If none of the cases are met, checkTypeOfTask will be called.","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"VishalJeyaram"},"content":"     * If the command is not legal, the respective DukeException will be thrown.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input the array of strings that represent the user\u0027s command","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"VishalJeyaram"},"content":"    public void checkMultiCommand(String[] input) throws DukeException, IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"VishalJeyaram"},"content":"        String firstWord \u003d input[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"VishalJeyaram"},"content":"        String secondWord \u003d input[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"VishalJeyaram"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"VishalJeyaram"},"content":"        case \"done\":","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"VishalJeyaram"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"VishalJeyaram"},"content":"            int taskNumber \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"VishalJeyaram"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"VishalJeyaram"},"content":"            if (tasks.positionCheck \u003c\u003d 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"VishalJeyaram"},"content":"                throw new DukeException(Ui.EMPTY);","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"VishalJeyaram"},"content":"            } else if ((taskNumber \u003e tasks.positionCheck) || (taskNumber \u003c\u003d 0)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"VishalJeyaram"},"content":"                throw new DukeException(Ui.INVALID);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"VishalJeyaram"},"content":"            } else if (firstWord.equals(\"done\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"VishalJeyaram"},"content":"                tasks.markDone(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"VishalJeyaram"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"VishalJeyaram"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"VishalJeyaram"},"content":"                tasks.deleteTask(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"VishalJeyaram"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"VishalJeyaram"},"content":"        case \"find\":","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"VishalJeyaram"},"content":"            String keyword \u003d secondWord;","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"VishalJeyaram"},"content":"            for (int i \u003d 2; i \u003c input.length; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"VishalJeyaram"},"content":"                keyword +\u003d \" \" + input[i];","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"VishalJeyaram"},"content":"            tasks.printListForFindingTask(keyword);","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"VishalJeyaram"},"content":"        case \"date\":","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"VishalJeyaram"},"content":"            if (input.length \u003e 2) {","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"VishalJeyaram"},"content":"                throw new DukeException(Ui.UNSPECIFIED_DATE);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"VishalJeyaram"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"VishalJeyaram"},"content":"                tasks.printListForFindingDate(secondWord);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"VishalJeyaram"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"VishalJeyaram"},"content":"            checkTypeOfTask(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"VishalJeyaram"},"content":"     * Determines the type of task the user wishes to add, calls the respective TaskList methods to take action.","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"VishalJeyaram"},"content":"     * If the command is not legal, the respective DukeException will be thrown.","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input the array of strings that represent the user\u0027s command","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"VishalJeyaram"},"content":"    public void checkTypeOfTask(String[] input) throws DukeException, IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"VishalJeyaram"},"content":"        int length \u003d input.length;","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"VishalJeyaram"},"content":"        String firstWord \u003d input[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"VishalJeyaram"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"VishalJeyaram"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"VishalJeyaram"},"content":"            tasks.addDeadline(input,length);","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"VishalJeyaram"},"content":"        case \"event\":","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"VishalJeyaram"},"content":"            tasks.addEvent(input,length);","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"VishalJeyaram"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"VishalJeyaram"},"content":"            tasks.addTodo(input,length);","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"VishalJeyaram"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"VishalJeyaram"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.UNSPECIFIED_TASK);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"VishalJeyaram":148}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.File;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":" * To load tasks from a text file and to save tasks within the same text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"public class Storage {","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"    protected String filePath;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"     * To append a new task to the text file.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input The array of strings that represent the task that the user wishes to add","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"    public void saveNewTask(String[] input) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"        String fullTaskAsString \u003d \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"        for (String individualString : input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"            fullTaskAsString +\u003d individualString + \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"        fullTaskAsString +\u003d \"| 0\";","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"        fw.write(fullTaskAsString + \"\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"        fw.close();","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"     * To save all tasks by overwriting the text file.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"VishalJeyaram"},"content":"     * @param commands The ArrayList of all the user\u0027s tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"VishalJeyaram"},"content":"    public void saveAllTasks(ArrayList\u003cTask\u003e commands) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"VishalJeyaram"},"content":"        String filePath \u003d new File(this.filePath).getAbsolutePath();","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"VishalJeyaram"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"VishalJeyaram"},"content":"        String taskInFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"VishalJeyaram"},"content":"        String done;","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"VishalJeyaram"},"content":"        for (Task individualTask : commands) {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"VishalJeyaram"},"content":"            if (individualTask instanceof Deadline) {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"VishalJeyaram"},"content":"                taskInFile \u003d \"deadline \" + individualTask.description + \" /by \" + ((Deadline) individualTask).by;","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"VishalJeyaram"},"content":"            } else if (individualTask instanceof Event) {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"VishalJeyaram"},"content":"                taskInFile \u003d \"event \" + individualTask.description + \" /at \" + ((Event) individualTask).at;","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"VishalJeyaram"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"VishalJeyaram"},"content":"                taskInFile \u003d \"todo \" + individualTask.description;","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"VishalJeyaram"},"content":"            if (individualTask.isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"VishalJeyaram"},"content":"                done \u003d \"1\";","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"VishalJeyaram"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"VishalJeyaram"},"content":"                done \u003d \"0\";","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"VishalJeyaram"},"content":"            String fullTaskAsString \u003d taskInFile + \" | \" + done + \"\\n\";","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"VishalJeyaram"},"content":"            Files.write(Paths.get(filePath), fullTaskAsString.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"VishalJeyaram"},"content":"            fw.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"VishalJeyaram"},"content":"     * To load all tasks from the text file.","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"VishalJeyaram"},"content":"     * @return ArrayList containing all tasks from the text file","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"VishalJeyaram"},"content":"    public ArrayList\u003cString\u003e loadTasks() throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"VishalJeyaram"},"content":"        String newFilePath \u003d new File(this.filePath).getAbsolutePath();","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"VishalJeyaram"},"content":"        ArrayList\u003cString\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"VishalJeyaram"},"content":"        File f \u003d new File(newFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"VishalJeyaram"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"VishalJeyaram"},"content":"        String textFromFile;","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"VishalJeyaram"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"VishalJeyaram"},"content":"            textFromFile \u003d s.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"VishalJeyaram"},"content":"            loadedTasks.add(textFromFile);","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(Ui.STARTING_MESSAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"VishalJeyaram"},"content":"        return loadedTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"VishalJeyaram":89}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":" * Parent class of all task classes","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"     * Constructor used to create a new Task object.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"     * @param description all details of task","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"     * Getter used to check if a task has been marked as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"     * To mark a task as done so that it will be listed as completed to the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"     * Method to return the task from the ArrayList.","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"     * @return description of the task","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"VishalJeyaram":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":" * To create an ArrayList to represent the user\u0027s tasks and to perform operations on this list.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"public class TaskList {","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    protected ArrayList\u003cTask\u003e commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"    protected int positionCheck;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    protected int loadFlag;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     * Instantiates the TaskList object and loads all the tasks from the text file into the ArrayList.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"     * @param loadedTasks the ArrayList of tasks from the text file","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"    public TaskList(ArrayList\u003cString\u003e loadedTasks, Storage storage) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"        this.commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"        this.positionCheck \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"        this.loadFlag \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"        String[] taskFromFile;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"        String[] taskInput;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"            for (String task : loadedTasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"                taskFromFile \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"                taskInput \u003d (taskFromFile[0]).split(\" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"                switch (taskInput[0]) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"                case \"deadline\":","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"                    addDeadline(taskInput, taskInput.length);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"                case \"event\":","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"                    addEvent(taskInput, taskInput.length);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"VishalJeyaram"},"content":"                case \"todo\":","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"VishalJeyaram"},"content":"                    addTodo(taskInput, taskInput.length);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"VishalJeyaram"},"content":"                default:","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"VishalJeyaram"},"content":"                if (taskFromFile[1].equals(\"1\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"VishalJeyaram"},"content":"                    markDone(taskNumber);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"VishalJeyaram"},"content":"                taskNumber +\u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"VishalJeyaram"},"content":"            this.loadFlag \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"VishalJeyaram"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"VishalJeyaram"},"content":"            //Catching DukeException errors","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"VishalJeyaram"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"VishalJeyaram"},"content":"            System.out.print(\"There is an error in your input master! Please check it out!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"VishalJeyaram"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"VishalJeyaram"},"content":"            Ui.printDateTimeExceptionMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"VishalJeyaram"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"VishalJeyaram"},"content":"        this.commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"VishalJeyaram"},"content":"        this.positionCheck \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"VishalJeyaram"},"content":"        this.loadFlag \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"VishalJeyaram"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"VishalJeyaram"},"content":"     * To add a deadline task to the ArrayList of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input the array of strings that represent the user\u0027s command","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"VishalJeyaram"},"content":"     * @param length the length of input","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DateTimeParseException if the date or time is not written in the proper format","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"VishalJeyaram"},"content":"    public void addDeadline(String[] input, int length) throws DukeException, IOException, DateTimeParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"VishalJeyaram"},"content":"        String description;","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"VishalJeyaram"},"content":"        String by;","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"VishalJeyaram"},"content":"        for (int i \u003d 1 ; i \u003c length ; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"VishalJeyaram"},"content":"            if ((input[i].equals(\"/by\")) \u0026\u0026 (i !\u003d 1) \u0026\u0026 (i !\u003d (length-1))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"VishalJeyaram"},"content":"                description \u003d input[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"VishalJeyaram"},"content":"                by \u003d input[i+1];","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"VishalJeyaram"},"content":"                for (int j \u003d 2 ; j \u003c i ; j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"VishalJeyaram"},"content":"                    description +\u003d (\" \" + input[j]);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"VishalJeyaram"},"content":"                for (int k \u003d i+2 ; k \u003c length ; k++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"VishalJeyaram"},"content":"                    by +\u003d (\" \" + input[k]);","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"VishalJeyaram"},"content":"                commands.add(new Deadline(description,by));","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"VishalJeyaram"},"content":"                if (loadFlag \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"VishalJeyaram"},"content":"                    Ui.sayTaskAdded();","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"VishalJeyaram"},"content":"                    System.out.println(commands.get(positionCheck));","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"VishalJeyaram"},"content":"                    storage.saveNewTask(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"VishalJeyaram"},"content":"                positionCheck +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"VishalJeyaram"},"content":"                return;","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"VishalJeyaram"},"content":"        throw new DukeException(Ui.DEADLINE_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"VishalJeyaram"},"content":"     * To add an event task to the ArrayList of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input the array of strings that represent the user\u0027s command","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"VishalJeyaram"},"content":"     * @param length the length of input","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DateTimeParseException if the date or time is not written in the proper format","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"VishalJeyaram"},"content":"    public void addEvent(String[] input, int length) throws DukeException, IOException, DateTimeParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"VishalJeyaram"},"content":"        String description;","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"VishalJeyaram"},"content":"        String at;","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"VishalJeyaram"},"content":"        for (int i \u003d 1 ; i \u003c length ; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"VishalJeyaram"},"content":"            if ((input[i].equals(\"/at\")) \u0026\u0026 (i !\u003d 1) \u0026\u0026 (i !\u003d (length-1))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"VishalJeyaram"},"content":"                description \u003d input[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"VishalJeyaram"},"content":"                at \u003d input[i+1];","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"VishalJeyaram"},"content":"                for (int j \u003d 2 ; j \u003c i ; j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"VishalJeyaram"},"content":"                    description +\u003d (\" \" + input[j]);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"VishalJeyaram"},"content":"                for (int k \u003d i+2 ; k \u003c length ; k++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"VishalJeyaram"},"content":"                    at +\u003d (\" \" + input[k]);","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"VishalJeyaram"},"content":"                commands.add( new Event(description,at) );","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"VishalJeyaram"},"content":"                if (loadFlag \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"VishalJeyaram"},"content":"                    Ui.sayTaskAdded();","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"VishalJeyaram"},"content":"                    System.out.println(commands.get(positionCheck));","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"VishalJeyaram"},"content":"                    storage.saveNewTask(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"VishalJeyaram"},"content":"                positionCheck +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"VishalJeyaram"},"content":"                return;","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"VishalJeyaram"},"content":"        throw new DukeException(Ui.EVENT_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"VishalJeyaram"},"content":"     * To add a todo task to the ArrayList of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"VishalJeyaram"},"content":"     * @param input the array of strings that represent the user\u0027s command","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"VishalJeyaram"},"content":"     * @param length the length of input","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws DukeException if the user\u0027s command does not fit the requirements to be considered a legal command","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"VishalJeyaram"},"content":"    public void addTodo(String[] input, int length) throws DukeException, IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"VishalJeyaram"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"VishalJeyaram"},"content":"            throw new DukeException(Ui.TODO_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"VishalJeyaram"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"VishalJeyaram"},"content":"            String description \u003d input[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"VishalJeyaram"},"content":"            for (int i \u003d 2 ; i \u003c length ; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"VishalJeyaram"},"content":"                description +\u003d (\" \" + input[i]);","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"VishalJeyaram"},"content":"            commands.add( new Todo(description) );","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"VishalJeyaram"},"content":"            if (loadFlag \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"VishalJeyaram"},"content":"                Ui.sayTaskAdded();","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"VishalJeyaram"},"content":"                System.out.println(commands.get(positionCheck));","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"VishalJeyaram"},"content":"                storage.saveNewTask(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"VishalJeyaram"},"content":"            positionCheck +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"VishalJeyaram"},"content":"    /** Prints all tasks in the ArrayList of tasks when the user keys in \"list\" */","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"VishalJeyaram"},"content":"    public void printList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.sayLoadingList();","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"VishalJeyaram"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"VishalJeyaram"},"content":"        for (Task num : commands) {","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"VishalJeyaram"},"content":"            System.out.println(i + \". \" + num);","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"VishalJeyaram"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"VishalJeyaram"},"content":"     * Prints all events and deadlines in the ArrayList of tasks that occur on a specified date.","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"VishalJeyaram"},"content":"     * @param dateString the specified date","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"VishalJeyaram"},"content":"    public void printListForFindingDate(String dateString) {","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.sayLoadingList();","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(\"Generating all the tasks that contain \\\"\" + dateString + \"\\\"...\");","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"VishalJeyaram"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"VishalJeyaram"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"VishalJeyaram"},"content":"        for (Task num : commands) {","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"VishalJeyaram"},"content":"            if (num instanceof Event) {","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"VishalJeyaram"},"content":"                if (((Event) num).at.contains(dateString)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"VishalJeyaram"},"content":"                    System.out.println(i + \". \" + num);","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"VishalJeyaram"},"content":"                    i +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"VishalJeyaram"},"content":"            } else if (num instanceof Deadline) {","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"VishalJeyaram"},"content":"                if (((Deadline) num).by.contains(dateString)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"VishalJeyaram"},"content":"                    System.out.println(i + \". \" + num);","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"VishalJeyaram"},"content":"                    i +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"VishalJeyaram"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"VishalJeyaram"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"VishalJeyaram"},"content":"            System.out.println(\"There are no tasks that occur on \\\"\" + dateString + \"\\\" master. My apologies!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"VishalJeyaram"},"content":"     * Prints all tasks in the ArrayList of tasks that contain a keyword","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"VishalJeyaram"},"content":"     * @param keyword the keyword to use filter out tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"VishalJeyaram"},"content":"    public void printListForFindingTask(String keyword) {","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.sayLoadingList();","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(\"Generating all the tasks that contain \\\"\" + keyword + \"\\\"...\");","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"VishalJeyaram"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"VishalJeyaram"},"content":"        for (Task num : commands) {","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"VishalJeyaram"},"content":"            if ((num.description).contains(keyword)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"VishalJeyaram"},"content":"                System.out.println(i + \". \" + num);","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"VishalJeyaram"},"content":"                i +\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"VishalJeyaram"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"VishalJeyaram"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"VishalJeyaram"},"content":"            System.out.println(\"Unfortunately, there are no tasks that contain \\\"\" + keyword + \"\\\" master. My apologies!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"VishalJeyaram"},"content":"     * To mark a task as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"VishalJeyaram"},"content":"     * @param doneTaskNumber the position in the ArrayList of tasks of the task to mark as done","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"VishalJeyaram"},"content":"    public void markDone(int doneTaskNumber) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"VishalJeyaram"},"content":"        (commands.get(doneTaskNumber)).markAsDone();","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"VishalJeyaram"},"content":"        if (loadFlag \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"VishalJeyaram"},"content":"            Ui.sayMarkedDone();","lastModifiedDate":"2021-09-26"},{"lineNumber":233,"author":{"gitId":"VishalJeyaram"},"content":"            System.out.println((doneTaskNumber + 1) + \". \" + commands.get(doneTaskNumber));","lastModifiedDate":"2021-09-26"},{"lineNumber":234,"author":{"gitId":"VishalJeyaram"},"content":"            storage.saveAllTasks(commands);","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"VishalJeyaram"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":237,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"VishalJeyaram"},"content":"     * To delete a task.","lastModifiedDate":"2021-09-26"},{"lineNumber":240,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":241,"author":{"gitId":"VishalJeyaram"},"content":"     * @param doneTaskNumber the position in the ArrayList of tasks of the task to delete","lastModifiedDate":"2021-09-28"},{"lineNumber":242,"author":{"gitId":"VishalJeyaram"},"content":"     * @throws IOException if there is any issue with the input or output","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"VishalJeyaram"},"content":"    public void deleteTask(int doneTaskNumber) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"VishalJeyaram"},"content":"        Ui.sayGoodbyeTask();","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println((doneTaskNumber+1) + \". \" + commands.get(doneTaskNumber));","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"VishalJeyaram"},"content":"        commands.remove(commands.get(doneTaskNumber));","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"VishalJeyaram"},"content":"        positionCheck -\u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(\"Goodbye Task, may the force be with you. You have \" + positionCheck + \" task(s) left Master\");","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"VishalJeyaram"},"content":"        storage.saveAllTasks(commands);","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"VishalJeyaram":252}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":" * Class that inherits from Task, used to create a new Todo task.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":"     * Constructor used to create a new todo object.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"     * Method to return the todo task from the ArrayList in a specified format","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"     * @return todo task string in a specific format","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"VishalJeyaram":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"VishalJeyaram"},"content":"/** To deal with interactions with the user such as the user sending commands","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"VishalJeyaram"},"content":" * and C3PO sending replies.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"VishalJeyaram"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"VishalJeyaram"},"content":"public class Ui {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"VishalJeyaram"},"content":"    protected Scanner in;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"VishalJeyaram"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"     * Instantiates the Ui object and allows the user to send their commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"VishalJeyaram"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"VishalJeyaram"},"content":"    public Ui() {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"VishalJeyaram"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"    public String sendInput() {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"VishalJeyaram"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String EMPTY \u003d \"There is no data in your list master!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String UNSPECIFIED_DONE \u003d \"Oh no master, I am not quite sure which task you would like me to mark as done!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String UNSPECIFIED_DELETE \u003d \"Oh no master, I am not quite sure which task you would like me to delete!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String UNSPECIFIED_FIND \u003d \"Oh no master, I am not quite sure which task you would like me to find!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String UNSPECIFIED_DATE \u003d \"Oh no master, please specify the date for which you would like me to print the respective tasks!\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"VishalJeyaram"},"content":"                                                  \"e.g \\\"date 2021-12-23\\\"\";","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String INVALID \u003d \"Please type in a valid number master! Type \\\"list\\\" to check the index number of your list data\";","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String DEADLINE_ERROR \u003d (\"Sorry Master! I don\u0027t think you have properly keyed in the parameters.\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"VishalJeyaram"},"content":"                                                 \"Please enter \\\"deadline\\\", followed by the task, followed by \\\"/by\\\", \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"VishalJeyaram"},"content":"                                                 \"and lastly followed by the due date to specify the deadline Master!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String EVENT_ERROR \u003d (\"Sorry Master! I don\u0027t think you have properly keyed in the parameters. \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"VishalJeyaram"},"content":"                                              \"Please enter \\\"event\\\", followed by the event, followed by \\\"/at\\\", and \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"VishalJeyaram"},"content":"                                              \"lastly followed by the event duration to specify the timing of the event Master!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String TODO_ERROR \u003d (\"Sorry Master! I don\u0027t think you have properly keyed in the parameters.\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"VishalJeyaram"},"content":"                                             \" Please enter \\\"todo\\\", followed by the task you wish to add to your \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"VishalJeyaram"},"content":"                                             \"duke.Todo list Master!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String UNSPECIFIED_TASK \u003d (\"Sorry Master! Despite the fact that I am fluent in over six million forms\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"VishalJeyaram"},"content":"                                                   \" of communication, I am unable to comprehend your request. Please specify\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"VishalJeyaram"},"content":"                                                   \" the type of task that you wish to add Master!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String NUMBER_FORMAT_EXCEPTION \u003d \"Master, please type in a number to indicate the task you want me to perform the necessary actions for!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String INPUT_OUTPUT_EXCEPTION \u003d \"There is an error in your input master! Please check it out!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String DATE_TIME_PARSE_EXCEPTION \u003d \"Please enter the correct date and time format master! It is \\\"YYYY-MM-DD HH:MM\\\". e.g 2021-12-23 19:00\";","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String FILE_NOT_FOUND_EXCEPTION \u003d \"File not found. Automatic text file creation initiated master!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String STARTING_MESSAGE \u003d \"Accessing archives, loading in data, C3PO systems online!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String ENDING_MESSAGE \u003d \"Goodbye master! May the force be with you!\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String USER_PROMPT_MESSAGE \u003d \"Type something: \";","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String LOGO \u003d \"       /~\\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      |oo )\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      _\\\\\u003d/_\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"     /     \\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"    //|/.\\\\|\\\\\\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"   ||  \\\\_/  ||\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"   || |\\\\ /| ||\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"    # \\\\_ _/  #\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      | | |\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      | | |\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      []|[]\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"      | | |\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"VishalJeyaram"},"content":"                                    + \"     /_]_[_\\\\\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String GREETINGS \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"VishalJeyaram"},"content":"                                  \"Hello! I am C3P0! Human-cyborg relations! \\n\" + \" \\n\" + LOGO + \"\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"VishalJeyaram"},"content":"                                  \"What can I do for you my master?\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String TASK_ADDED \u003d \"Added to Galactic database:\";","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String MARKED_DONE \u003d \"The following task has been marked as done Master!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String LOADING \u003d \"Accessing archives...\";","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"VishalJeyaram"},"content":"    public static final String DELETED_TASK \u003d \"Taking one last look Master, at this Task. Removing the following from my memory\";","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"VishalJeyaram"},"content":"    /** To say goodbye to the user before the program terminates */","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"VishalJeyaram"},"content":"    public static void sayBye() {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(ENDING_MESSAGE + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"VishalJeyaram"},"content":"    /** To indicate to the user that a task has been added to their list */","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"VishalJeyaram"},"content":"    public static void sayTaskAdded() {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(TASK_ADDED);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"VishalJeyaram"},"content":"    /** To indicate to the user that a task has been marked as done */","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"VishalJeyaram"},"content":"    public static void sayMarkedDone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(MARKED_DONE);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"VishalJeyaram"},"content":"    /** To indicate to a user that a task will be deleted */","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"VishalJeyaram"},"content":"    public static void sayGoodbyeTask() {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(DELETED_TASK);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"VishalJeyaram"},"content":"    /** To indicate that their tasks will be shown soon */","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"VishalJeyaram"},"content":"    public static void sayLoadingList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(LOADING);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"VishalJeyaram"},"content":"    /** To welcome the user when they run the program */","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"VishalJeyaram"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(GREETINGS);","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"VishalJeyaram"},"content":"    /** To prompt the user to key in a command */","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"VishalJeyaram"},"content":"    public static void promptUser() {","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.print(USER_PROMPT_MESSAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"VishalJeyaram"},"content":"    /** To print a line to separate commands from the user and those from C3PO */","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"VishalJeyaram"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"VishalJeyaram"},"content":"    public static void printNumberFormatExceptionMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(NUMBER_FORMAT_EXCEPTION);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"VishalJeyaram"},"content":"    public static void printIOExceptionMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(INPUT_OUTPUT_EXCEPTION);","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"VishalJeyaram"},"content":"    public static void printDateTimeExceptionMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(DATE_TIME_PARSE_EXCEPTION);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"VishalJeyaram"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"VishalJeyaram"},"content":"    public static void printFileNotFoundMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"VishalJeyaram"},"content":"        System.out.println(FILE_NOT_FOUND_EXCEPTION);","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"VishalJeyaram"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"VishalJeyaram"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"VishalJeyaram":127}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VishalJeyaram"},"content":"todo go the gym","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"VishalJeyaram"},"content":"deadline submit assignment /by 12","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"VishalJeyaram"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"VishalJeyaram":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"VishalJeyaram"},"content":"    pause","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"VishalJeyaram"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"VishalJeyaram"},"content":"pause","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"-":20,"VishalJeyaram":3}}]
