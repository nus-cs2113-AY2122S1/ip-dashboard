[{"path":"src/main/java/duke/command/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"    // Constants","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public static final String EXIT_STRING \u003d \"bye\";","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    public static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    public static final String MESSAGE_GREET_USER \u003d \" Hey there! I\u0027m Duke.\" + System.lineSeparator() + \" How may I help you?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    public static final String MESSAGE_GOODBYE \u003d \" Goodbye! Hope to see you again soon.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    public static final String DUKE_LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"        printLogoAndGreet();","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        TaskManager dukeTaskManager \u003d new TaskManager();","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        String userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"        while (!userInput.trim().equalsIgnoreCase(EXIT_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"            dukeTaskManager.handleUserInput(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        printGoodbye();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"     * Prints Duke\u0027s logo along with a greeting","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    public static void printLogoAndGreet() {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(\"Hello from\\n\" + DUKE_LOGO);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_GREET_USER);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     * Prints a goodbye message before exiting the program","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"theeugenechong":45,"-":7}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    private final Task[] tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    private int taskCount;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    // Constants","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    private static final String LIST_STRING \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    private static final String DONE_STRING \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String TODO_STRING \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    private static final String DEADLINE_STRING \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    private static final String EVENT_STRING \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_LIST_TASKS \u003d \" Here are the tasks in your list:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_TASK_ADDED \u003d \" I have added a task:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_TASK_MARKED_DONE \u003d \" Great! I have marked the following task as done:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d \" Please enter a valid command!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    private static final String DEADLINE_PREFIX \u003d \"/by\";","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private static final String EVENT_PREFIX \u003d \"/at\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    // Constructor","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    public TaskManager() {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"     * Handles commands input by the user, will print error message if command is of","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"     * the wrong format.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"     * @param userInput Command input by the user","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"    public void handleUserInput(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"        if (userInput.trim().equalsIgnoreCase(LIST_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"            printTaskList(Arrays.copyOf(tasks, taskCount));","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"        } else if (userInput.trim().toLowerCase().startsWith(DONE_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"            handleTaskDone(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        } else if (userInput.trim().toLowerCase().startsWith(TODO_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"            handleTodo(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"        } else if (userInput.trim().toLowerCase().startsWith(DEADLINE_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"            handleDeadline(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        } else if (userInput.trim().toLowerCase().startsWith(EVENT_STRING)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"            handleEvent(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"            printInvalidCommandMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"     * Prints a list of the current tasks Duke has","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"     * @param tasks The array containing tasks to be printed out","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"    public void printTaskList(Task[] tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_LIST_TASKS);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tasks[i].toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"     * Marks a task as done","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"     * @param doneTask User command containing the task ID of the task to mark done","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"     * @throws DoneInvalidFormatException if command does not follow correct format \"done {task ID}\"","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"     * @throws NonNumericTaskIdException if task ID entered is not an integer","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"     * @throws TaskNotInListException if the task to mark done is not in the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"    public void markTaskDone(String doneTask) throws DoneInvalidFormatException, NonNumericTaskIdException, TaskNotInListException {","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"        String[] doneSentence \u003d doneTask.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"        // Checks if done command entered does not follow the correct format of \"done {task ID}\".","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"        if (doneSentence.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"            throw new DoneInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"        // Checks if the task ID entered is numeric.","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"        if (!isNumeric(doneSentence[1])) {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"            throw new NonNumericTaskIdException();","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        int taskToMarkDone \u003d Integer.parseInt(doneSentence[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        // Makes sure that the task being mark done is in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"        if (taskToMarkDone \u003e taskCount || taskToMarkDone \u003c\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"            throw new TaskNotInListException();","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"            tasks[taskToMarkDone - 1].setDone(true);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(MESSAGE_TASK_MARKED_DONE);","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\"   \" + tasks[taskToMarkDone - 1].toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"     * Add a todo to Duke\u0027s task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"     * Splits addedTodo by the first whitespace (or sequence of whitespaces) encountered to separate \u0027todo\u0027 command from","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"     * its description","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"     * @param addedTodo User command containing the todo description","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"     * @throws TodoInvalidFormatException if the command does not follow the correct format \"todo {description}\"","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"    public void addTodo(String addedTodo) throws TodoInvalidFormatException {","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"        String[] splitTodo \u003d addedTodo.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"        if(splitTodo.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"            throw new TodoInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"        String todoDescription \u003d splitTodo[1].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"        Todo newTodo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"        tasks[taskCount] \u003d newTodo;","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_TASK_ADDED);","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(\"   \" + newTodo.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(\" You now have \" + (taskCount + 1) + \" task(s) in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"     * Add a deadline to Duke\u0027s task list","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"     * Splits addedDeadline initially by the first whitespace (or sequence of whitespaces) encountered to separate","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"     * \u0027deadline\u0027 command from its description and deadline. The description and deadline is then split by DEADLINE_PREFIX","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"     * to obtain the arguments needed for Deadline constructor","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"     * @param addedDeadline User command containing the deadline description and deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"     * @throws DeadlineInvalidFormatException if the command does not follow the correct format \"deadline {description} /by {deadline}","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"     * @throws DeadlineLacksArgumentsException if the command does not contain the deadline description or the deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"    public void addDeadline(String addedDeadline) throws DeadlineInvalidFormatException, DeadlineLacksArgumentsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"        String[] splitDeadline \u003d addedDeadline.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"        if(splitDeadline.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"            throw new DeadlineInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"        String[] deadlineDescriptionAndDeadline \u003d splitDeadline[1].split(DEADLINE_PREFIX, 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"        if(deadlineDescriptionAndDeadline.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"            throw new DeadlineInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"        String deadlineDescription \u003d deadlineDescriptionAndDeadline[0].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"        String deadlineDeadline \u003d deadlineDescriptionAndDeadline[1].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"        boolean isValidDeadline \u003d !deadlineDescription.isEmpty() \u0026\u0026 !deadlineDeadline.isEmpty();","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"        // Deadline with valid format is added to task list","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"        if (isValidDeadline) {","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineDeadline);","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"            tasks[taskCount] \u003d newDeadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(MESSAGE_TASK_ADDED);","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\"   \" + newDeadline.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\" You now have \" + (taskCount + 1) + \" task(s) in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"            throw new DeadlineLacksArgumentsException();","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"     * Add an event to Duke\u0027s task list","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"     * Splits addedEvent initially by the first whitespace (or sequence of whitespaces) encountered to separate","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"     * \u0027event\u0027 command from its description and time. The description and time is then split by EVENT_PREFIX","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"     * to obtain the arguments needed for Event constructor","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"theeugenechong"},"content":"     * @param addedEvent User command containing the event description and time","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"     * @throws EventInvalidFormatException if the command does not follow the correct format \"event {description} /at {time}\"","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"     * @throws EventLacksArgumentsException if the command does not contain the event description or the event time","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"    public void addEvent(String addedEvent) throws EventInvalidFormatException, EventLacksArgumentsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"        String[] splitEvent \u003d addedEvent.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"        if(splitEvent.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"            throw new EventInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"        String[] eventDescriptionAndTime \u003d splitEvent[1].split(EVENT_PREFIX, 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"        if (eventDescriptionAndTime.length !\u003d 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"theeugenechong"},"content":"            throw new EventInvalidFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"        String eventDescription \u003d eventDescriptionAndTime[0].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"        String eventTime \u003d eventDescriptionAndTime[1].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"        boolean isValidEvent \u003d !eventDescription.isEmpty() \u0026\u0026 !eventTime.isEmpty();","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"        // Event with valid format is added to task list","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"        if (isValidEvent) {","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"            Event newEvent \u003d new Event(eventDescription, eventTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"            tasks[taskCount] \u003d newEvent;","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(MESSAGE_TASK_ADDED);","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\"   \" + newEvent.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(\" You now have \" + (taskCount + 1) + \" task(s) in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"            System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"            throw new EventLacksArgumentsException();","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"     * Handles the marking of a task as done, taking into account any erroneous input","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"     * @param userInput Command input by the user","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"    public void handleTaskDone(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"            markTaskDone(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"        } catch (DoneInvalidFormatException doneInvalidFormatException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"            doneInvalidFormatException.printDoneInvalidFormatMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"        } catch (NonNumericTaskIdException nonNumericTaskIdException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"            nonNumericTaskIdException.printNonNumericTaskIdMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"theeugenechong"},"content":"        } catch (TaskNotInListException taskNotInListException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"theeugenechong"},"content":"            taskNotInListException.printTaskNotInListMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":223,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":226,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"theeugenechong"},"content":"     * Handles the adding of a todo to Duke\u0027s task list, including any erroneous input","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"theeugenechong"},"content":"     * @param userInput Command input by the user","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":231,"author":{"gitId":"theeugenechong"},"content":"    public void handleTodo(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"theeugenechong"},"content":"            addTodo(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"theeugenechong"},"content":"            taskCount++;","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"theeugenechong"},"content":"        } catch (TodoInvalidFormatException todoInvalidFormatException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"theeugenechong"},"content":"            todoInvalidFormatException.printTodoInvalidFormatMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":238,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":239,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"theeugenechong"},"content":"     * Handles the adding of a deadline to Duke\u0027s task list, including any erroneous input","lastModifiedDate":"2021-09-05"},{"lineNumber":242,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":243,"author":{"gitId":"theeugenechong"},"content":"     * @param userInput Command input by the user","lastModifiedDate":"2021-09-05"},{"lineNumber":244,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":245,"author":{"gitId":"theeugenechong"},"content":"    public void handleDeadline(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":246,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":247,"author":{"gitId":"theeugenechong"},"content":"            addDeadline(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":248,"author":{"gitId":"theeugenechong"},"content":"            taskCount++;","lastModifiedDate":"2021-09-05"},{"lineNumber":249,"author":{"gitId":"theeugenechong"},"content":"        } catch (DeadlineInvalidFormatException deadlineInvalidFormatException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":250,"author":{"gitId":"theeugenechong"},"content":"            deadlineInvalidFormatException.printDeadlineInvalidFormatMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"theeugenechong"},"content":"        } catch (DeadlineLacksArgumentsException deadlineLacksArgumentsException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":252,"author":{"gitId":"theeugenechong"},"content":"            deadlineLacksArgumentsException.printDeadlineLacksArgumentsMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":253,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":254,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":255,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":256,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":257,"author":{"gitId":"theeugenechong"},"content":"     * Handles the adding of an event to Duke\u0027s task list, including any erroneous input","lastModifiedDate":"2021-09-05"},{"lineNumber":258,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":259,"author":{"gitId":"theeugenechong"},"content":"     * @param userInput Command input by the user","lastModifiedDate":"2021-09-05"},{"lineNumber":260,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":261,"author":{"gitId":"theeugenechong"},"content":"    public void handleEvent(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":262,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":263,"author":{"gitId":"theeugenechong"},"content":"            addEvent(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":264,"author":{"gitId":"theeugenechong"},"content":"            taskCount++;","lastModifiedDate":"2021-09-05"},{"lineNumber":265,"author":{"gitId":"theeugenechong"},"content":"        } catch (EventInvalidFormatException eventInvalidFormatException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":266,"author":{"gitId":"theeugenechong"},"content":"            eventInvalidFormatException.printEventInvalidFormatMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":267,"author":{"gitId":"theeugenechong"},"content":"        } catch (EventLacksArgumentsException eventLacksArgumentsException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":268,"author":{"gitId":"theeugenechong"},"content":"            eventLacksArgumentsException.printEventLacksArgumentsMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":269,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":270,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":271,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":272,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":273,"author":{"gitId":"theeugenechong"},"content":"     * Prints invalid command message if the command input by the user does not match any of the specified commands","lastModifiedDate":"2021-09-05"},{"lineNumber":274,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":275,"author":{"gitId":"theeugenechong"},"content":"    public static void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":276,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":277,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":278,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":279,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":280,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":281,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":282,"author":{"gitId":"theeugenechong"},"content":"     * Checks if a string can be parsed to obtain an integer","lastModifiedDate":"2021-09-05"},{"lineNumber":283,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":284,"author":{"gitId":"theeugenechong"},"content":"     * @param str String to be parsed","lastModifiedDate":"2021-09-05"},{"lineNumber":285,"author":{"gitId":"theeugenechong"},"content":"     * @return true if the string is numeric and can be parsed, false otherwise","lastModifiedDate":"2021-09-05"},{"lineNumber":286,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":287,"author":{"gitId":"theeugenechong"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2021-09-05"},{"lineNumber":288,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":289,"author":{"gitId":"theeugenechong"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2021-09-05"},{"lineNumber":290,"author":{"gitId":"theeugenechong"},"content":"            return true;","lastModifiedDate":"2021-09-05"},{"lineNumber":291,"author":{"gitId":"theeugenechong"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-09-05"},{"lineNumber":292,"author":{"gitId":"theeugenechong"},"content":"            return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":293,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":294,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":295,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":296,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":297,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":297}},{"path":"src/main/java/duke/exception/DeadlineInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class DeadlineInvalidFormatException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_WRONG_FORMAT \u003d \" Your command is of the wrong format!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_CORRECT_DEADLINE_FORMAT \u003d \" To add a deadline, enter \\\"deadline {description} /by {deadline}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printDeadlineInvalidFormatMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_WRONG_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_CORRECT_DEADLINE_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":14}},{"path":"src/main/java/duke/exception/DeadlineLacksArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class DeadlineLacksArgumentsException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_LACKS_ARG \u003d \" Your command lacks an argument!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_CORRECT_DEADLINE_FORMAT \u003d \" To add a deadline, enter \\\"deadline {description} /by {deadline}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printDeadlineLacksArgumentsMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_LACKS_ARG);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_CORRECT_DEADLINE_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":15}},{"path":"src/main/java/duke/exception/DoneInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class DoneInvalidFormatException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_WRONG_FORMAT \u003d \" Your command is of the wrong format!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_DONE_CORRECT_FORMAT \u003d \" To mark a task as done, enter \\\"done {ID of done task}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printDoneInvalidFormatMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_WRONG_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_DONE_CORRECT_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":14}},{"path":"src/main/java/duke/exception/EventInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class EventInvalidFormatException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_WRONG_FORMAT \u003d \" Your command is of the wrong format!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_CORRECT_EVENT_FORMAT \u003d \" To add an event, enter \\\"event {description} /at {event time}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printEventInvalidFormatMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_WRONG_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_CORRECT_EVENT_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":14}},{"path":"src/main/java/duke/exception/EventLacksArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class EventLacksArgumentsException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_LACKS_ARG \u003d \" Your command lacks an argument!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_CORRECT_EVENT_FORMAT \u003d \" To add an event, enter \\\"event {description} /at {event time}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printEventLacksArgumentsMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_LACKS_ARG);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_CORRECT_EVENT_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":14}},{"path":"src/main/java/duke/exception/NonNumericTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class NonNumericTaskIdException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_WRONG_FORMAT \u003d \" Your command is of the wrong format!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_NUMERIC_TASK_ID \u003d \" Enter a number for your task ID.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"    public void printNonNumericTaskIdMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_WRONG_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_NUMERIC_TASK_ID);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":14}},{"path":"src/main/java/duke/exception/TaskNotInListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class TaskNotInListException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_TASK_NOT_IN_LIST \u003d \" Sorry, the task is not in the list! Try again.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"    public void printTaskNotInListMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_TASK_NOT_IN_LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":12}},{"path":"src/main/java/duke/exception/TodoInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class TodoInvalidFormatException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    private static final String OUTPUT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    private static final String MESSAGE_COMMAND_WRONG_FORMAT \u003d \" Your command is of the wrong format!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"    public static final String MESSAGE_CORRECT_TODO_FORMAT \u003d \" To add a todo, enter \\\"todo {description}\\\".\";","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    public void printTodoInvalidFormatMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_COMMAND_WRONG_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(MESSAGE_CORRECT_TODO_FORMAT);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"        System.out.println(OUTPUT_DIVIDER);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"theeugenechong":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"        setBy(by);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        return by;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"theeugenechong":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    protected String when;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"    public Event(String description, String when) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"        setWhen(when);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"        return when;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    public void setWhen(String when) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"        this.when \u003d when;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + when + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"theeugenechong":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"    protected String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"        return description;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        return isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"            return \"X\";","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"            return \" \";","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"theeugenechong":40}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"theeugenechong":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"todo Read novel","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"deadline Coding assignment /by Next Tuesday 2359hrs","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"event Micron Eng. Talk /at 1 Sept 1-2pm","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"done 4","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"done abc","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"todo","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"deadline GE Essay /by","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"deadline GE Essay /before","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"event ESL One Grand Finals /at","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"event ESL One Grand Finals","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"blah","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"theeugenechong":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"theeugenechong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin  ../src/main/java/duke/exception/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"theeugenechong":1,"-":37}}]
