[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"# austin.Duke project template","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"madhanse"},"content":"3. After that, locate the `src/main/java/austin.Duke.java` file, right-click it, and choose `Run austin.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"madhanse":2}},{"path":"src/main/java/austin/AustinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"public class AustinException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"    protected String message;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"    public AustinException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"madhanse"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"madhanse":14}},{"path":"src/main/java/austin/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"    /** Deadline date and time */","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"        setBy(by);","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"madhanse"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"madhanse"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"madhanse"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"madhanse"},"content":"        return \"[D] \" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"madhanse"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"madhanse":20}},{"path":"src/main/java/austin/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"    /** List of tasks */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"    private final static String INVALID_COMMAND_MESSAGE \u003d \"Sorry. The command is invalid.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"madhanse"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"madhanse"},"content":"        processCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"madhanse"},"content":"        printByeMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"madhanse"},"content":"     * Processes each command input by the user","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"madhanse"},"content":"    public static void processCommand() {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"madhanse"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"madhanse"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"madhanse"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"madhanse"},"content":"            String[] inputs \u003d line.split(\" \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"madhanse"},"content":"            inputs[0] \u003d inputs[0].toLowerCase();","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"madhanse"},"content":"            printActivatedMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"madhanse"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"madhanse"},"content":"                switch (inputs[0]) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"madhanse"},"content":"                case \"list\":","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"madhanse"},"content":"                    printList(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"madhanse"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"madhanse"},"content":"                case \"help\":","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"madhanse"},"content":"                    printListOfCommands(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"madhanse"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"madhanse"},"content":"                case \"done\":","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"madhanse"},"content":"                    markAsDone(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"madhanse"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"madhanse"},"content":"                default:","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"madhanse"},"content":"                    addTask(inputs);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"madhanse"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"madhanse"},"content":"            } catch (AustinException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"madhanse"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"madhanse"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"madhanse"},"content":"                System.out.println(\"Sorry. The format of the task index is invalid\");","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"madhanse"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"madhanse"},"content":"            printCompletionMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"madhanse"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"madhanse"},"content":"        printActivatedMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"madhanse"},"content":"     * Adds a task into the list based on the command","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"madhanse"},"content":"     * @param inputs User\u0027s command to add the task","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If the command is invalid","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"madhanse"},"content":"    public static void addTask(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"madhanse"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"madhanse"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"madhanse"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"madhanse"},"content":"                addTodoTask(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"madhanse"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"madhanse"},"content":"            case \"event\":","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"madhanse"},"content":"                addEventTask(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"madhanse"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"madhanse"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"madhanse"},"content":"                addDeadlineTask(inputs);","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"madhanse"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"madhanse"},"content":"            default:","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"madhanse"},"content":"                throw new AustinException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"madhanse"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"madhanse"},"content":"        } catch (AustinException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"madhanse"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"madhanse"},"content":"     * Prints the logo and the welcome message at the start of the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"madhanse"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"madhanse"},"content":"        String logo \u003d","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"madhanse"},"content":"                \"        ___      __    __       _______.___________.__  .__   __.\\n\" +","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"madhanse"},"content":"                        \"       /   \\\\    |  |  |  |     /       |           |  | |  \\\\ |  |\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"madhanse"},"content":"                        \"      /  ^  \\\\   |  |  |  |    |   (----`---|  |----|  | |   \\\\|  |\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"madhanse"},"content":"                        \"     /  /_\\\\  \\\\  |  |  |  |     \\\\   \\\\       |  |    |  | |  . `  |\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"madhanse"},"content":"                        \"    /  _____  \\\\ |  `--\u0027  | .----)   |      |  |    |  | |  |\\\\   |\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"madhanse"},"content":"                        \"   /__/     \\\\__\\\\ \\\\______/  |_______/       |__|    |__| |__| \\\\__|  \";","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Hello! I\u0027m Austin\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"madhanse"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"madhanse"},"content":"                + \"In case, if you are unsure of any commands, please type \\\"help\\\".\");","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"madhanse"},"content":"     * Prints a goodbye message before the program ends.","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"madhanse"},"content":"     * This method is called once \"bye\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"madhanse"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"___________________SHUTTING DOWN______________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"madhanse"},"content":"     * Prints all the tasks in the list along with the category and status.","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"madhanse"},"content":"     * Error message is printed if there are no tasks in the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"madhanse"},"content":"     * This method is executed once the \"list\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"madhanse"},"content":"     * @param inputs Used to validate the command","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If either there are no items in the list or if","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"madhanse"},"content":"     *         there are additional keywords in the command","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"madhanse"},"content":"    public static void printList(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"madhanse"},"content":"            // if the command does not contain extra characters or words","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"madhanse"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"madhanse"},"content":"            // if there are no items in the list","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"No items were added into the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Below are the list of tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"madhanse"},"content":"        int i;","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"madhanse"},"content":"        for (i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"madhanse"},"content":"            System.out.print((i + 1) + \". \");","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"madhanse"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Currently, you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"madhanse"},"content":"     * Marks the status of a specific task as done by identifying the task index","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"madhanse"},"content":"     * in the command. Error message is printed if the task index input is out of range.","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"madhanse"},"content":"     * @param inputs User\u0027s command to mark the specific task as done","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If either the user didn\u0027t input the task index or","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"madhanse"},"content":"     *         if the task number is out of range","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"madhanse"},"content":"     * @throws NumberFormatException If the format of the task index is invalid","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"madhanse"},"content":"    private static void markAsDone(String[] inputs) throws AustinException, NumberFormatException {","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The task index is missing.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"madhanse"},"content":"        int taskIndex \u003d parseInt(inputs[1]) - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"madhanse"},"content":"        if ((taskIndex \u003e\u003d tasks.size()) || (taskIndex \u003c 0)){","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"madhanse"},"content":"            // if the task index is out of range","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The task index given is out of range.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"madhanse"},"content":"        tasks.get(taskIndex).setDone(true);","lastModifiedDate":"2021-09-08"},{"lineNumber":152,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Amazing! I have marked this task as done:\");","lastModifiedDate":"2021-09-08"},{"lineNumber":153,"author":{"gitId":"madhanse"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"madhanse"},"content":"     * Adds a todo task into the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"madhanse"},"content":"     * This method is called once the \"todo\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"madhanse"},"content":"     * @param inputs User\u0027s command to add the todo task","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If the task description is empty","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"madhanse"},"content":"    private static void addTodoTask(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The description of todo cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"madhanse"},"content":"        String task \u003d inputs[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"madhanse"},"content":"        Todo newTodo \u003d new Todo(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"madhanse"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"madhanse"},"content":"        printAddTaskMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"madhanse"},"content":"     * Adds a task of \"event\" type into the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"madhanse"},"content":"     * This method is called once the \"event\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"madhanse"},"content":"     * Error message is printed if the format of the command is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"madhanse"},"content":"     * @param inputs User\u0027s command to add the event task","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If either the task description is empty or","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"madhanse"},"content":"     *         if the format of the command is invalid","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"madhanse"},"content":"    private static void addEventTask(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":184,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The description of event cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":185,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":186,"author":{"gitId":"madhanse"},"content":"        String task \u003d inputs[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"madhanse"},"content":"        if (!(task.contains(\"|\"))) {","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The format of calling event command is invalid.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":189,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"madhanse"},"content":"        int index \u003d task.indexOf(\"|\");","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"madhanse"},"content":"        Event newEvent \u003d new Event(task.substring(0, index), task.substring(index + 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"madhanse"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"madhanse"},"content":"        printAddTaskMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":197,"author":{"gitId":"madhanse"},"content":"     * Adds a task of \"deadline\" type into the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"madhanse"},"content":"     * This method is called once the \"deadline\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"madhanse"},"content":"     * Error message is printed if the format of the command is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"madhanse"},"content":"     * @param inputs User\u0027s command to add the deadline task","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If either the task description is empty or","lastModifiedDate":"2021-09-08"},{"lineNumber":203,"author":{"gitId":"madhanse"},"content":"     *         if the format of the command is invalid","lastModifiedDate":"2021-09-08"},{"lineNumber":204,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"madhanse"},"content":"    private static void addDeadlineTask(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The description of deadline cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":208,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":209,"author":{"gitId":"madhanse"},"content":"        String task \u003d inputs[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"madhanse"},"content":"        if (!(task.contains(\"|\"))) {","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(\"Sorry. The format of calling deadline command is invalid.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":212,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"madhanse"},"content":"        int index \u003d task.indexOf(\"|\");","lastModifiedDate":"2021-09-08"},{"lineNumber":214,"author":{"gitId":"madhanse"},"content":"        Deadline newDeadline \u003d new Deadline(task.substring(0, index), task.substring(index + 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"madhanse"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"madhanse"},"content":"        printAddTaskMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":218,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":219,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":220,"author":{"gitId":"madhanse"},"content":"     * Prints a confirmation message to the user to that the task is","lastModifiedDate":"2021-09-10"},{"lineNumber":221,"author":{"gitId":"madhanse"},"content":"     * successfully added into the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":222,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"madhanse"},"content":"    public static void printAddTaskMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":224,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Noted. I have successfully added this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"madhanse"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":226,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Now, you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":227,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":228,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":229,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":230,"author":{"gitId":"madhanse"},"content":"     * Prints the message once the command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":231,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":232,"author":{"gitId":"madhanse"},"content":"    public static void printActivatedMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":233,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"___________________COMMAND ACTIVATED__________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":234,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":235,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":236,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":237,"author":{"gitId":"madhanse"},"content":"     * Prints the list of commands along with their description and format.","lastModifiedDate":"2021-08-31"},{"lineNumber":238,"author":{"gitId":"madhanse"},"content":"     * This method is called once the \"help\" command is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":239,"author":{"gitId":"madhanse"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":240,"author":{"gitId":"madhanse"},"content":"     * @param inputs Validate the command","lastModifiedDate":"2021-09-08"},{"lineNumber":241,"author":{"gitId":"madhanse"},"content":"     * @throws AustinException If there are additional keywords","lastModifiedDate":"2021-09-08"},{"lineNumber":242,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":243,"author":{"gitId":"madhanse"},"content":"    public static void printListOfCommands(String[] inputs) throws AustinException {","lastModifiedDate":"2021-09-08"},{"lineNumber":244,"author":{"gitId":"madhanse"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":245,"author":{"gitId":"madhanse"},"content":"            throw new AustinException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":246,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":247,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"todo: Adds a todo task into the list.\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":248,"author":{"gitId":"madhanse"},"content":"                \"      Format: todo \u003ctask_description\u003e\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":249,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"event: Adds a event task into the list. \" +","lastModifiedDate":"2021-08-31"},{"lineNumber":250,"author":{"gitId":"madhanse"},"content":"                \"The event date and time description is also needed \" +","lastModifiedDate":"2021-09-10"},{"lineNumber":251,"author":{"gitId":"madhanse"},"content":"                \"while creating this task.\\n\" +","lastModifiedDate":"2021-09-10"},{"lineNumber":252,"author":{"gitId":"madhanse"},"content":"                \"      Format: event \u003ctask_description\u003e | \" +","lastModifiedDate":"2021-09-10"},{"lineNumber":253,"author":{"gitId":"madhanse"},"content":"                \"\u003cdate_and_time_information\u003e\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":254,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"deadline: Adds a task which has a deadline into the list. \" +","lastModifiedDate":"2021-08-31"},{"lineNumber":255,"author":{"gitId":"madhanse"},"content":"                \"The deadline date and time information is also needed while \" +","lastModifiedDate":"2021-09-10"},{"lineNumber":256,"author":{"gitId":"madhanse"},"content":"                \"creating this task.\\n\" +","lastModifiedDate":"2021-09-10"},{"lineNumber":257,"author":{"gitId":"madhanse"},"content":"                \"      Format: deadline \u003ctask_description\u003e | \" +","lastModifiedDate":"2021-09-10"},{"lineNumber":258,"author":{"gitId":"madhanse"},"content":"                \"\u003cdate_and_time_information\u003e\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":259,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"done: Marks a specific task as done.\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":260,"author":{"gitId":"madhanse"},"content":"                \"      Format: done \u003ctask_id\u003e\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":261,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"list: Prints all the tasks along with the status of\" +","lastModifiedDate":"2021-09-10"},{"lineNumber":262,"author":{"gitId":"madhanse"},"content":"                \" each task.\\n\" +","lastModifiedDate":"2021-09-10"},{"lineNumber":263,"author":{"gitId":"madhanse"},"content":"                \"      Format: list\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":264,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"bye: Exits the program with a goodbye message.\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":265,"author":{"gitId":"madhanse"},"content":"                \"      Format: bye\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"help: Prints a list of commands.\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":267,"author":{"gitId":"madhanse"},"content":"                \"      Format: help\");","lastModifiedDate":"2021-08-31"},{"lineNumber":268,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":271,"author":{"gitId":"madhanse"},"content":"     * Prints after the command is successfully executed.","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"madhanse"},"content":"    public static void printCompletionMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":274,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"___________________COMMAND EXECUTED___________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":275,"author":{"gitId":"madhanse"},"content":"        System.out.println(\"Anything else?\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":276,"author":{"gitId":"madhanse"},"content":"                + \"In case, if you are unsure of any commands, please type \\\"help\\\".\");","lastModifiedDate":"2021-08-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"madhanse":274}},{"path":"src/main/java/austin/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"    /** Event date and time*/","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"        setAt(at);","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"    public void setAt(String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"madhanse"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"madhanse"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"madhanse"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"madhanse"},"content":"        return \"[E] \" + super.toString() + \" (at:\" + at + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"madhanse"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"madhanse":20}},{"path":"src/main/java/austin/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"    protected String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"    /** Indicates whether the task is done */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"        setDescription(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"        setDone(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"madhanse"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"madhanse"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"madhanse"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"madhanse"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"madhanse"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"madhanse"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"madhanse"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"madhanse"},"content":"     * Checks whether the task is marked and returns an icon if it is marked.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"madhanse"},"content":"     * @return Status icon.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"madhanse"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"madhanse"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"madhanse"},"content":"        //returns the icon to indicate whether the task is completed","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"madhanse"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"madhanse"},"content":"            return \"X\";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"madhanse"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"madhanse"},"content":"        return \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"madhanse"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"madhanse"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"madhanse"},"content":"        return \"[\" + getStatus() + \"] \" + getDescription();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"madhanse"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"madhanse":43}},{"path":"src/main/java/austin/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"package austin;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"madhanse"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"madhanse"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"madhanse"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"madhanse"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"madhanse":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"madhanse"},"content":"help","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"madhanse"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"madhanse"},"content":"todo CS2113 Project","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"madhanse"},"content":"deadline CS2102 project \\by Week 8","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"madhanse"},"content":"event CS2101 presentation \\at 7 Sep 0800","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"madhanse"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"madhanse"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"madhanse"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"madhanse":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"madhanse"},"content":"java -classpath ..\\bin austin.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"madhanse":1}}]
