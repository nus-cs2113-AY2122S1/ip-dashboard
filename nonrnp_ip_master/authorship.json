[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.command.CommandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import duke.storage.StorageManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    private static final String FILE_PATH \u003d \"./data/task.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    private static StorageManager storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"     * Return the task list stored in this object.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * @return task list.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"        return taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"     * Return the ui object of this object.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"     * @return the ui object.","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"    public static Ui getUi() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"        return ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * Initialize the program by assigning new values to the variables in this","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * object, then show welcome message to the user to indicate that the program","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     * has been started.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"    public static void startDuke() {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"        storage \u003d new StorageManager(FILE_PATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"        taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"     * Run Duke until user enter the command \"bye\"","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    public static void runDukeOperations() {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"        Command userCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        CommandResult result;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"        do {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"            userCommand \u003d ui.getCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"            result \u003d taskList.executeCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"            storage.updateStorage(taskList.getTasks());","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"            ui.printCommandResult(result);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"        } while (!userCommand.isExitCommand());","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"     * Show message to user to indicated that the program has been terminated.","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"    public static void exitDuke() {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"        startDuke();","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"        runDukeOperations();","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"        exitDuke();","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nonrnp":69,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":" * Contains the type and description of a user\u0027s command.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public class Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    private String commandType;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    private String commandDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * Constructor of this Command object, initializing the type of the command","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     * and the command\u0027s description.","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"     * @param commandType the type of this command.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"     * @param commandDescription the description of this command.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"    public Command(String commandType, String commandDescription) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"        this.commandDescription \u003d commandDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * Return the type of this command.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * @return command type.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    public String getCommandType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"        return commandType;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * Return the description of this command.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"     * @return command description.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    public String getCommandDescription() {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        return commandDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"     * Check whether this command is an exit command or not.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"     * @return true if this is an exit command, false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"        return commandType.equals(\"bye\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nonrnp":59}},{"path":"src/main/java/duke/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":" * Contains the command from the user and the result after its execution.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public class CommandResult {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"    public static final String EXECUTION_SUCCESS \u003d \"S\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    public static final String EXECUTION_FAIL \u003d \"F\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    public static final String BLANK_DESCRIPTION \u003d \"0\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_TODO \u003d \"1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_DEADLINE \u003d \"2\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_EVENT \u003d \"3\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_TASK_ALREADY_DONE \u003d \"4\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_NUMBER \u003d \"5\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_ADD_TASK \u003d \"6\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_COMMAND \u003d \"7\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    private Command command;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"    private String commandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    private String resultDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"     * Constructor of this CommandResult object, initializing the command ","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"     * retrieved from the user, the result after the execution, and description","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"     * of the result (if any).","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"     * @param command command input from the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"     * @param commandResult result of the command after execution.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"     * @param resultDescription description of the result.","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    public CommandResult(Command command, String commandResult, String resultDescription) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"        this.commandResult \u003d commandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"        this.resultDescription \u003d resultDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"     * Return the original command of this command result.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"     * @return the command of this result.","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"     * Return the result from the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"     * @return the command result.","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"    public String getResult() {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"        return commandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"     * Return the description of the result.","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"     * @return the result description.","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"    public String getResultDescription() {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"        return resultDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nonrnp":64}},{"path":"src/main/java/duke/exception/DukeInvalidAddTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":" * Exception when a task\u0027s description from the user input in invalid.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public class DukeInvalidAddTaskException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"nonrnp":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"public class Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"    private static final int CHAR_TO_DESCRIPTION \u003d 5;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"     * Used for getting a task\u0027s description from todo tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s command.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"     * @return a string containing the task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    public static String getDescription(String description) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"        return description;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * Used for retrieving a task\u0027s description from deadline and event type ","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     * tasks, as the description input from the user\u0027s command contains both","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * the task description and the time.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s command.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"     * @param timeKeyword keyword which specified the time for deadline and event","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"     *                    type tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"     * @return a string containing only the description part of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"    public static String getDescription(String description, String timeKeyword) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"        return description.substring(0, description.indexOf(timeKeyword));","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"     * Used for retrieving a task\u0027s time from deadline and event type tasks,","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * as the description input from the user\u0027s command contains both the ","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * task description and the time.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s command.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"     * @param timeKeyword keyword which specified the time for deadline and event","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"     *                    type tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"     * @return a LocalDate containing only the time of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    public static LocalDate getTime(String description, String timeKeyword) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"        String time \u003d description.substring(description.indexOf(timeKeyword) + CHAR_TO_DESCRIPTION);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        return LocalDate.parse(time);","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nonrnp":46}},{"path":"src/main/java/duke/storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":" * Manage reading and writing task list from and to the specified text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"public class StorageManager {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    private static final String TASK_TODO \u003d \"T\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"    private static final String TASK_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    private static final String TASK_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    private String filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"     * Constructor of the StorageManager object, initializing the path to the","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"     * text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"     * @param filePath path to text file containing the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"    public StorageManager(String filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"     * Return the task type of task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"     * @param input task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * @return the type of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    private String getTaskType(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"        String[] words \u003d input.split(\"--\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"        return words[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"     * Return the task description of task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"     * @param input task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"     * @return the description of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"    private String getTaskDescription(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"        String[] words \u003d input.split(\"--\");","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"        return words[2];","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"     * Return the date of task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"     * @param input task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"     * @return the date of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"    private String getTaskDate(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"        String[] words \u003d input.split(\"--\");","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"        return words[3];","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"     * Check if the task has already been marked as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"     * @param input task stored in text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"    private boolean isMarkedDoneTask(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"        String[] words \u003d input.split(\"--\");","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"        return words[1].equals(\"1\");","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"     * Read each task stored in the text file and convert them to a task","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"     * to be added to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"     * @param input a line inside the text file containing the task type, done","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"     *              status, and description.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"     * @return the task created from the input description.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"    private Task getTask(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"        String taskType \u003d getTaskType(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"        String taskDescription \u003d getTaskDescription(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"            case TASK_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"            case TASK_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"                String deadlineDate \u003d getTaskDate(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"                task \u003d new Deadline(taskDescription + \" /by \" + deadlineDate);","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"            case TASK_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"                String eventDate \u003d getTaskDate(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"                task \u003d new Event(taskDescription + \" /at \" + eventDate);","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"                Duke.getUi().printInvalidTaskInFileMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"        } catch (DukeInvalidAddTaskException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"INVALID TASK FOUND IN FILE\");","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"        if (task !\u003d null \u0026\u0026 isMarkedDoneTask(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"nonrnp"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"        return task;","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"     * Get the tasks stored in the text file, keep reading the stored tasks and","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"     * adding each of them to the task list until the last line in the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"     * @return list of tasks stored in the file","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"     * @throws FileNotFoundException if the text file doesn\u0027t exist.","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"    private ArrayList\u003cTask\u003e getStoredList() throws FileNotFoundException {","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"        Scanner input \u003d new Scanner(inputFile);","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"        String inputTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"            inputTask \u003d input.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"            tasks.add(getTask(inputTask));","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"        return tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"     * Read the tasks stored in the text file. If the file doesn\u0027t exist, ","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"     * return an empty list.","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"     * @return task list stored in the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"            return getStoredList();","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"nonrnp"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"nonrnp"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"nonrnp"},"content":"     * Check if the text file exists or not. If not, then create a new one.","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"nonrnp"},"content":"    private void checkFilePath() {","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"nonrnp"},"content":"        File directory \u003d new File(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"nonrnp"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"nonrnp"},"content":"            directory.getParentFile().mkdirs();","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"nonrnp"},"content":"     * Write each task in the task list to the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"nonrnp"},"content":"     * @throws IOException if the text file doesn\u0027t exist.","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"nonrnp"},"content":"    private void writeToFile() throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"nonrnp"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"nonrnp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"nonrnp"},"content":"            String taskAsString \u003d String.valueOf(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"nonrnp"},"content":"            String taskType \u003d taskAsString.substring(1, 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"nonrnp"},"content":"            String doneSymbol \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"nonrnp"},"content":"            String formattedTask \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"nonrnp"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"nonrnp"},"content":"            case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"nonrnp"},"content":"                formattedTask \u003d \"T--\" + doneSymbol + \"--\" + task.getDescription();","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"nonrnp"},"content":"            case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"nonrnp"},"content":"                Deadline currentDeadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"nonrnp"},"content":"                formattedTask \u003d \"D--\" + doneSymbol + \"--\" + currentDeadline.getDescription() + \"--\" + currentDeadline.getDeadlineDate();","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"nonrnp"},"content":"            case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"nonrnp"},"content":"                Event currentEvent \u003d (Event) task;","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"nonrnp"},"content":"                formattedTask \u003d \"E--\" + doneSymbol + \"--\" + currentEvent.getDescription() + \"--\" + currentEvent.getEventTime();","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"nonrnp"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"nonrnp"},"content":"                System.out.println(\"Invalid Task Found\");","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"nonrnp"},"content":"            writer.write(formattedTask + System.lineSeparator());","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"nonrnp"},"content":"        writer.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"nonrnp"},"content":"     * Update the text file with the task list provided.","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"nonrnp"},"content":"     * @param tasks task list provided.","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"nonrnp"},"content":"    public void updateStorage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"nonrnp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"nonrnp"},"content":"        checkFilePath();","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"nonrnp"},"content":"            writeToFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"nonrnp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"Something went wrong\");","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nonrnp":214}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"    private static final String DEADLINE_TIME_KEYWORD \u003d \" /by\";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"     * Constructor of deadline objects by first initializing a task object","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"     * then the deadlineDate of this object.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s input, containing the task","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     *                    description and deadline date.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @throws DukeInvalidAddTaskException if task description contains \"--\", which","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * is a format reserved for only when saving the task to the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    public Deadline(String description) throws DukeInvalidAddTaskException {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"        super(Parser.getDescription(description, DEADLINE_TIME_KEYWORD));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"            this.deadlineDate \u003d Parser.getTime(description, DEADLINE_TIME_KEYWORD);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"            throw new DukeInvalidAddTaskException();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * Return the date of this deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * @return the deadline date.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"        return deadlineDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * Return this deadline\u0027s representation as a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"     * @return string representation.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nonrnp":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"    private static final String EVENT_TIME_KEYWORD \u003d \" /at\";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private LocalDate eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"     * Constructor of event objects by first initializing a task object","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"     * then the eventTime of this object.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s input, containing the task","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     *                    description and event time.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @throws DukeInvalidAddTaskException if task description contains \"--\", which","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * is a format reserved for only when saving the task to the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    public Event(String description) throws DukeInvalidAddTaskException {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"        super(Parser.getDescription(description, EVENT_TIME_KEYWORD));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"            this.eventTime \u003d Parser.getTime(description, EVENT_TIME_KEYWORD);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"            throw new DukeInvalidAddTaskException();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"        }    ","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * Return the date of this event.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * @return the event date.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    public LocalDate getEventTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"        return eventTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * Return this event\u0027s representation as a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"     * @return string representation.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        String formattedDate \u003d eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nonrnp":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"     * Constructor of Task object, initializing the description and done status","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"     * of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"     * @param description task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"     * @throws DukeInvalidAddTaskException if task description contains \"--\", which","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"     * is a format reserved for only when saving the task to the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    public Task(String description) throws DukeInvalidAddTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"        if (description.contains(\"--\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"            throw new DukeInvalidAddTaskException();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"        this.description \u003d Parser.getDescription(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"     * Check if this task has been marked as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"     * @return true if this task is marked as done, false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"        return isDone;","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     * Return the description of this task.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"     * @return this task\u0027s description.","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"        return description;","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"     * Mark this task as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"     * Return this task\u0027s representation as a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"     * @return string representation.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"        String statusIcon;","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"            statusIcon \u003d \"X\";","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"            statusIcon \u003d \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"        return \"[\" + statusIcon + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"nonrnp":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.command.CommandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"public class TaskList {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"     * Constructor of TaskList object, initializing the task list to be that of ","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"     * the input tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"     * @param tasks input task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     * Return the tasks stored in this list.","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"     * @return list of tasks.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        return tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"     * Return success result for the task list to be shown to the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeListCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"     * Mark a task as done. Return success result if a valid task number","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * is provided. Otherwise, return fail result along with the reason","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     * causing the command to fail.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user containing the number of ","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"     *                    the task to be marked as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeDoneCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"            taskNumber \u003d Integer.parseInt(userCommand.getCommandDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"            if (tasks.get(taskNumber - 1).isDone()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"                return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_TASK_ALREADY_DONE);","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"            return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_NUMBER);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"     * Add a task with a specific type to the task list. Return success result","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"     * if the task can be added to the list. Otherwise, return fail result along","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"     * with the reason causing the command to fail.","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user containing a specific task type","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"     *                    and the task\u0027s description.","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeAddCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"        switch (userCommand.getCommandType()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"            if (userCommand.getCommandDescription().equals(CommandResult.BLANK_DESCRIPTION)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"                return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_TODO);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"                tasks.add(new Todo(userCommand.getCommandDescription()));","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"            } catch (DukeInvalidAddTaskException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"                return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_TODO);","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"                tasks.add(new Deadline(userCommand.getCommandDescription()));","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"            } catch (DukeInvalidAddTaskException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"                return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_DEADLINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"            } ","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"                tasks.add(new Event(userCommand.getCommandDescription()));","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"            } catch (DukeInvalidAddTaskException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"                return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_EVENT);","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"nonrnp"},"content":"            return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_ADD_TASK);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"     * Delete a task from the task list. If the deletion is successful, return","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"     * the command result along with the deleted task\u0027s description. Otherwise,","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"     * return the result with the reason causing the command to fail.","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user containing the number of task","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"     *                    to be deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeDeleteCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"nonrnp"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"nonrnp"},"content":"        String deletedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"nonrnp"},"content":"            taskNumber \u003d Integer.parseInt(userCommand.getCommandDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"            deletedTask \u003d tasks.get(taskNumber - 1).toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"            return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_NUMBER);","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, deletedTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"     * Return success result for the tasks containing the keyword to be shown","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"     * to the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user containing the keyword","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"     *                    for the tasks.","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeFindCommand(Command userCommand) {","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"        String keyword \u003d userCommand.getCommandDescription();","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, keyword);","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"     * Return success result for the help message to be shown to user.","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user.","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeHelpCommand(Command userCommand) {","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"     * Return success result for the program to be terminated.","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeExitCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_SUCCESS, CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"nonrnp"},"content":"     * Return fail result of the command to the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"nonrnp"},"content":"    private CommandResult executeInvalidCommand(Command userCommand) {","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(userCommand, CommandResult.EXECUTION_FAIL, CommandResult.INVALID_COMMAND);","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"nonrnp"},"content":"     * Call different command execution method depending on the input user\u0027s command,","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"nonrnp"},"content":"     * then return the result of the command execution.","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"nonrnp"},"content":"     * @param userCommand input command from user.","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"nonrnp"},"content":"     * @return result of the command","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"nonrnp"},"content":"    public CommandResult executeCommand(Command userCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"nonrnp"},"content":"        switch (userCommand.getCommandType()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_LIST:","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"nonrnp"},"content":"            return executeListCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"nonrnp"},"content":"            return executeDoneCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"nonrnp"},"content":"            return executeAddCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DELETE:","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"nonrnp"},"content":"            return executeDeleteCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_FIND:","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"nonrnp"},"content":"            return executeFindCommand(userCommand);","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_HELP:","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"nonrnp"},"content":"            return executeHelpCommand(userCommand);","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_EXIT:","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"nonrnp"},"content":"            return executeExitCommand(userCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"nonrnp"},"content":"            return executeInvalidCommand(userCommand);","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nonrnp":199}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.exception.DukeInvalidAddTaskException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"     * Constructor of todo objects by initializing a task object.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"     *      ","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"     * @param description task description from user\u0027s input.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"     * @throws DukeInvalidAddTaskException if task description contains \"--\", which","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"     * is a format reserved for only when saving the task to the text file.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    public Todo(String description) throws DukeInvalidAddTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"        super(Parser.getDescription(description));","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     * Return this todo\u0027s representation as a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * @return string representation.","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nonrnp":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import duke.command.CommandResult;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":" * Managing output messages and reading inputs from the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private static final String LOGO \u003d \"    ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"            + \"   |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"            + \"   | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"            + \"   | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"            + \"   |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    private static final String BORDER_LINE \u003d \"------------------------------------------------\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"     * Constructor of this Ui object.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"     * Show welcome message to the user, indicating the program has been","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"     * started.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"        System.out.println(LOGO + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"                + \"    Hello!, I\u0027m Duke\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"                + \"    How can I help you?\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"     * Show goodbye message to the user, indicating the program has terminated","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"     * successfully.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"                + \"    Bye, see you again!\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"     * Show message to the user if there is an invalid task description","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"     * found in the text file.","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"    public void printInvalidTaskInFileMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"                + \"    INVALID TASK DETECTED\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"     * Retrieve the command input from user.","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"     * @return command.","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"            return new Command(words[0].toLowerCase(), words[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"            return new Command(words[0].toLowerCase(), CommandResult.BLANK_DESCRIPTION);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"    private void printInvalidAddTaskMessage(CommandResult result) {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"        String description \u003d result.getResultDescription();","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"        switch (description) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"        case CommandResult.INVALID_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"            description \u003d \"TODO FORMAT: todo [description]\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"                    + \"      NOTE: DO NOT INCLUDE \\\"--\\\" IN YOUR TASK DESCRIPTION\";","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"        case CommandResult.INVALID_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"            description \u003d \"DEADLINE FORMAT: deadline [description] /by [date]\" + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"                    + \"      WITH DATE FORMAT YYYY-MM-DD\" + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"                    + \"      NOTE: DO NOT INCLUDE \\\"--\\\" IN YOUR TASK DESCRIPTION\";","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"        case CommandResult.INVALID_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"            description \u003d \"EVENT FORMAT: event [description] /at [date]\" + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"                    + \"      WITH DATE FORMAT YYYY-MM-DD\" + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"                    + \"      NOTE: DO NOT INCLUDE \\\"--\\\" IN YOUR TASK DESCRIPTION\";","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"            description \u003d \"SOMETHING WENT WRONG\";","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"                + \"    INVALID TASK DESCRIPTION PROVIDED\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"                + \"      \" + description + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"    private void printInvalidTaskNotExistedMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"                + \"    INVALID TASK NUMBER PROVIDED\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"    private void printInvalidTaskAlreadyDoneMessage(CommandResult result) {","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"        int taskNumber \u003d Integer.parseInt(result.getCommand().getCommandDescription());","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"                + \"    Task \" + taskNumber + \" has already been marked as done!\" + System.lineSeparator()","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"nonrnp"},"content":"    private void printTaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"nonrnp"},"content":"        int taskSize \u003d Duke.getTaskList().getTasks().size();","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"nonrnp"},"content":"        if (taskSize \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"    The list is currently empty!\" + System.lineSeparator() + BORDER_LINE);            ","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"            return;","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"        for (int i \u003d 0; i \u003c taskSize; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + Duke.getTaskList().getTasks().get(i));","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"    private void printMarkDoneMessage(CommandResult result) {","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"        int taskNumber \u003d Integer.parseInt(result.getCommand().getCommandDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"                + \"    The following task is now marked as done:\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"                + \"      \" + Duke.getTaskList().getTasks().get(taskNumber - 1) + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"    private void printAddTaskMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"        int taskSize \u003d Duke.getTaskList().getTasks().size();","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"                + \"    Task added: \" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"                + \"      \" + Duke.getTaskList().getTasks().get(taskSize - 1) + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"                + \"    You have \" + taskSize + \" tasks in the list.\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"    private void printDeleteTaskMessage(String taskDescription) {","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"                + \"    The following task is removed from the list: \" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"                + \"      \" + taskDescription + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"                + \"    You now have \" + Duke.getTaskList().getTasks().size() + \" tasks in the list.\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"nonrnp"},"content":"    private void printTaskListWithKeyword(String keyword) {","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"nonrnp"},"content":"        int taskSize \u003d Duke.getTaskList().getTasks().size();","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"nonrnp"},"content":"        if (taskSize \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"    The list is currently empty!\" + System.lineSeparator() + BORDER_LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"nonrnp"},"content":"            return;","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"nonrnp"},"content":"        int taskWithKeywordCount \u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":161,"author":{"gitId":"nonrnp"},"content":"        System.out.println(\"    Finding tasks with keyword \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"nonrnp"},"content":"        for (int i \u003d 0; i \u003c taskSize; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"nonrnp"},"content":"            String taskDescription \u003d Duke.getTaskList().getTasks().get(i).getDescription();","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"nonrnp"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"nonrnp"},"content":"                System.out.println(\"    \" + (taskWithKeywordCount + 1) + \".\" + Duke.getTaskList().getTasks().get(i));","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"nonrnp"},"content":"                taskWithKeywordCount++;","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"nonrnp"},"content":"            }  ","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"nonrnp"},"content":"        if (taskWithKeywordCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"    There is no task containing the keyword \\\"\" + keyword + \"\\\"\");","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"nonrnp"},"content":"    private void printHelpMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"nonrnp"},"content":"                + \"    COMMAND LIST:\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"nonrnp"},"content":"                + \"      help: show command list\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"nonrnp"},"content":"                + \"      list: show all the stored tasks\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"nonrnp"},"content":"                + \"      find: show all the stored tasks that contains a specific keyword\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"nonrnp"},"content":"                + \"      todo: add a task as todo\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"nonrnp"},"content":"                + \"      deadline: add a task as deadline\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"nonrnp"},"content":"                + \"      event: add a task as event\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"nonrnp"},"content":"                + \"      done: mark a task as done\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"nonrnp"},"content":"                + \"      delete: delete a task from the list\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"nonrnp"},"content":"    private void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"nonrnp"},"content":"        System.out.println(BORDER_LINE + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"nonrnp"},"content":"                + \"    INVALID COMMAND\" + System.lineSeparator()","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"nonrnp"},"content":"                + \"    Type \\\"help\\\" to see the list of commands\" + System.lineSeparator()","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"nonrnp"},"content":"                + BORDER_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"nonrnp"},"content":"     * Print successful command result.","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"nonrnp"},"content":"     * @param result command result from user\u0027s input.","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"nonrnp"},"content":"    private void printSuccessCommandResult(CommandResult result) {","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"nonrnp"},"content":"        String commandType \u003d result.getCommand().getCommandType();","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"nonrnp"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_LIST:","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"nonrnp"},"content":"            printTaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"nonrnp"},"content":"            printMarkDoneMessage(result);","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"nonrnp"},"content":"            printAddTaskMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DELETE:","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"nonrnp"},"content":"            printDeleteTaskMessage(result.getResultDescription());","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_FIND:","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"nonrnp"},"content":"            printTaskListWithKeyword(result.getResultDescription());","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"nonrnp"},"content":"            break;    ","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_HELP:","lastModifiedDate":"2021-09-20"},{"lineNumber":222,"author":{"gitId":"nonrnp"},"content":"            printHelpMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":223,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_EXIT:","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"nonrnp"},"content":"            printInvalidCommandMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":231,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":232,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":233,"author":{"gitId":"nonrnp"},"content":"     * Print command result that failed to be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":234,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":235,"author":{"gitId":"nonrnp"},"content":"     * @param result command result from user\u0027s input.","lastModifiedDate":"2021-09-18"},{"lineNumber":236,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":237,"author":{"gitId":"nonrnp"},"content":"    private void printFailCommandResult(CommandResult result) {","lastModifiedDate":"2021-09-18"},{"lineNumber":238,"author":{"gitId":"nonrnp"},"content":"        String commandType \u003d result.getCommand().getCommandType();","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"nonrnp"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":241,"author":{"gitId":"nonrnp"},"content":"            switch (result.getResultDescription()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":242,"author":{"gitId":"nonrnp"},"content":"            case CommandResult.INVALID_NUMBER:","lastModifiedDate":"2021-09-18"},{"lineNumber":243,"author":{"gitId":"nonrnp"},"content":"                printInvalidTaskNotExistedMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"nonrnp"},"content":"            case CommandResult.INVALID_TASK_ALREADY_DONE:","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"nonrnp"},"content":"                printInvalidTaskAlreadyDoneMessage(result);","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"nonrnp"},"content":"                break;","lastModifiedDate":"2021-09-18"},{"lineNumber":248,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":249,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":250,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_DELETE:","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"nonrnp"},"content":"            printInvalidTaskNotExistedMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"nonrnp"},"content":"        case Command.COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"nonrnp"},"content":"            printInvalidAddTaskMessage(result);","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"nonrnp"},"content":"            printInvalidCommandMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":264,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":265,"author":{"gitId":"nonrnp"},"content":"     * Print command result of each user\u0027s command.","lastModifiedDate":"2021-09-18"},{"lineNumber":266,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-09-18"},{"lineNumber":267,"author":{"gitId":"nonrnp"},"content":"     * @param result command result from user\u0027s input.","lastModifiedDate":"2021-09-18"},{"lineNumber":268,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":269,"author":{"gitId":"nonrnp"},"content":"    public void printCommandResult(CommandResult result) {","lastModifiedDate":"2021-09-18"},{"lineNumber":270,"author":{"gitId":"nonrnp"},"content":"        String commandResult \u003d result.getResult();","lastModifiedDate":"2021-09-18"},{"lineNumber":271,"author":{"gitId":"nonrnp"},"content":"        switch (commandResult) {","lastModifiedDate":"2021-09-18"},{"lineNumber":272,"author":{"gitId":"nonrnp"},"content":"        case CommandResult.EXECUTION_SUCCESS:","lastModifiedDate":"2021-09-18"},{"lineNumber":273,"author":{"gitId":"nonrnp"},"content":"            printSuccessCommandResult(result);","lastModifiedDate":"2021-09-18"},{"lineNumber":274,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":275,"author":{"gitId":"nonrnp"},"content":"        case CommandResult.EXECUTION_FAIL:","lastModifiedDate":"2021-09-18"},{"lineNumber":276,"author":{"gitId":"nonrnp"},"content":"            printFailCommandResult(result);","lastModifiedDate":"2021-09-18"},{"lineNumber":277,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":278,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":279,"author":{"gitId":"nonrnp"},"content":"            System.out.println(\"SOMETHING WENT WRONG\");","lastModifiedDate":"2021-09-17"},{"lineNumber":280,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":281,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":282,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":283,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nonrnp":283}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"todo prepare for classes","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"deadline do assignment /by Sunday 6pm","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"event attend lecture /at Friday evening","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"deadline submit iP /by August 30th","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"done 3","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nonrnp":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nonrnp":2,"-":19}}]
