[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"-":21,"LilyDaytoy":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"Duke is a text-based app for people to manage their recent tasks. It works like a memory keeper to record users\u0027 deadlines, events, todos and their completion statuses.","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"## Quick start","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"1. Ensure you have Java `11` installed in your computer.","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/LilyDaytoy/ip/releases/tag/A-Jar).","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"3. Copy the file to the folder you want to use as your *home folder* for Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"4. Open your Command Line Terminal in the folder where `duke.jar` is located and run Duke using `java -jar duke.jar`.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"5. Type the command in the Terminal and press Enter to execute it. For example, type `list` and press Enter will show you all the current tasks you have and their corresponding completion statuses.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"   Here are some example commands you can try:","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    * `list` List all the current tasks and their completion statuses","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    * `find book` Find the tasks including the keyword \"book\"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    * `done 2` Mark the second task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    * `todo quiz` Add the quiz task as a todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    * `bye` Exit the app and Duke will save your records automatically for you","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"6. Look at the **Features** below to get more details about each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"### Notes","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"#### Notes about command format:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. e.g. the `TASK_INDEX` in `done TASK_INDEX` is a parameter that user should provide, such as `done 1`.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken. e.g. if you specified `/by 5pm /by 9pm` then it will be recognized as `/by \"5pm /by 9pm\"` and display the result as `(by:5pm /by 9pm)`.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"#### Notes about the Tasks in Duke:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"* There are 3 types of tasks in Duke: `todo`, `deadline`, `event`.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"  * These three types are distinguished by how user inputs the `TIME` parameter.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"  * `TIME` parameter in Duke will only be recognized as a string with no actual time meaning, any format of time you want to record will be ok.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"* Here are what the 3 types of Tasks represent:","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"  * `todo`: a task you need to do with no `TIME` parameter specified.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"  * `deadline`: a task you need to complete before the deadline, which is the `TIME` parameter you provide.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"  * `event`: a task you need to do during a specific time, which is the `TIME` parameter given by the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"* The 3 types of tasks are stored in Duke as examples below:","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"  * `todo`: `[T][] myTodo`","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"  * `deadline`: `[D][] myDeadline (by : deadline time)`","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"  * `event`: `[E][] myEveny (at: event time)`","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"### Adding a todo task `todo`","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"Add a task you need to do with no time specified to the TaskList in Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"Format: `todo TASK`","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"* `todo watch the lecture`---\u003e`[T][] watch the lecture`","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"* `todo do the assignment`---\u003e`[T][] do the assignment`","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"### Adding a deadline task `deadline`","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"Add a deadline task you need to complete before a certain time to the TaskList in Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"Format: `deadline TASK /by TIME`","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"Example: ","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"* `deadline complete the quiz /by Firday`---\u003e`[D][] complete the quiz (by: Friday)`","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"* `deadline submit the project /by Monday 12pm`---\u003e`[D][] submit the project (by: Monday 12pm)`","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"### Adding an event task `event`","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"Add an event task you need to do during a certain time to the TaskList in Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"Format: `event TASK /at TIME`","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"* `event group meeting /at Monday 6pm`---\u003e`[E][] group meeting (at: Monday 6pm)`","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"* `event meet with prof Li /at Tuesday 1pm`---\u003e`[E][] meet with prof Li (at: Tuesday 1pm)`","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"LilyDaytoy"},"content":"### List all the tasks `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"List all the tasks in the TaskList in Duke and show their completion statuses.","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"LilyDaytoy"},"content":"Format: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"LilyDaytoy"},"content":"![list screenshot](https://i.postimg.cc/Y9PYmcPW/2021-09-29-5-20-42.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"LilyDaytoy"},"content":"### Search for a task `find`","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"LilyDaytoy"},"content":"Display all the tasks containing a specific keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"LilyDaytoy"},"content":"Format `find KEYWORD`","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"LilyDaytoy"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"LilyDaytoy"},"content":"* `find book` will return `read book`,`book a meeting room`","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"* `find work` will return `do homework`,`work woth my groupmates`","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"### Mark a task as done `done`","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"LilyDaytoy"},"content":"Mark a task in the TaskList in Duke as done, change the symbol from `[ ]` to `[x]`","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"LilyDaytoy"},"content":"Format: `done TASK_INDEX`","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"LilyDaytoy"},"content":"* The TASK_INDEX refers to the index displayed in the TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"LilyDaytoy"},"content":"* The TASK_INDEX must be in a valid range present in the TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"LilyDaytoy"},"content":"* `done 1` marks the first task in the TaskList as done. e.g. the first task `[T][] read book` will change to `[T][x] read book`","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"### Deleting a task `delete`","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"LilyDaytoy"},"content":"Remove a task from the TaskList, and it will not be displayed in the list anymore","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"LilyDaytoy"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"LilyDaytoy"},"content":"* The TASK_INDEX refers to the index displayed in the TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"LilyDaytoy"},"content":"* The TASK_INDEX must be in a valid range present in the TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"LilyDaytoy"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"LilyDaytoy"},"content":"* `delete 1` deletes the first task in the TaskList. e.g. the first task `[T][] read book` will no longer be in the list anymore.","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"LilyDaytoy"},"content":"### Exit `bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"LilyDaytoy"},"content":"Exit form Duke app","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"LilyDaytoy"},"content":"Format: `bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"LilyDaytoy"},"content":"### Saving the data","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"LilyDaytoy"},"content":"Duke will automatically save the data for you in hard disk every time you input a command in order to reload your previous tasks next time when you use it.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"LilyDaytoy"},"content":"___","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"LilyDaytoy"},"content":"### Editing your data file","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"LilyDaytoy"},"content":"Users can edit the file `data.txt` and `inputFile.txt` to change their TaskList, but note that only the valid change in the correct format can work, otherwise Duke will not run.","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"LilyDaytoy"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"LilyDaytoy"},"content":"## Command Summary","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"LilyDaytoy"},"content":"Operation | Format and Example","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"LilyDaytoy"},"content":"--------- | -----------","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"LilyDaytoy"},"content":"Add todo | `todo TASK`  e.g. `todo read book`","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"LilyDaytoy"},"content":"Add deadline| `deadline TASK /by TIME` e.g. `deadline complete quiz /by Friday`","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"LilyDaytoy"},"content":"Add event | `event TASK /at TIME` e.g. `event meeting /at Monday`","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"LilyDaytoy"},"content":"List tasks |  `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"LilyDaytoy"},"content":"Search tasks | `find KEYWORD` e.g. `find book` `find work`","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"LilyDaytoy"},"content":"Delete a task | `delete TASK_INDEX` e.g. `delete 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"LilyDaytoy"},"content":"Mark a task as done | `done TASK_INDEX` e.g. `done 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"LilyDaytoy"},"content":"Exit | `bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"LilyDaytoy"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"LilyDaytoy"},"content":"## Reference","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"LilyDaytoy"},"content":"The template of the User Guide is followed by [AddressBook Level 3 (AB3) User Guide](https://se-education.org/addressbook-level3/UserGuide.html#editing-a-person--edit).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"-":17,"LilyDaytoy":106}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public enum Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    LIST, BYE, TODO, EVENT, DEADLINE, DONE, DELETE, INVALID, FIND","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":5}},{"path":"src/main/java/duke/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":" * A DeadLine subclass similar to the Task class with its own getTask method","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"    public static final String MARK_HAS_DEADLINE \u003d \"[D]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public DeadLine(String deadline) {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(deadline);","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        int indexDivider \u003d task.indexOf(\"/\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"        String taskContent \u003d task.substring(0,indexDivider).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        String deadlineContent \u003d task.substring(indexDivider + 1).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"        String[] deadlineSplit \u003d deadlineContent.split(\" \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        String deadline \u003d deadlineSplit[1].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        if(isDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_HAS_DEADLINE + Task.MARK_AS_DONE + \" \" + taskContent +  \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_HAS_DEADLINE + Task.MARK_AS_NOT_DONE + \" \" + taskContent +  \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"        return \"deadline \" + task;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"LilyDaytoy":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":" * The main programme for the Duke programme","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":" * Integrates all classes together。","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"            Storage.loadData();","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        while (true) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"            Parser.input \u003d Parser.getInput();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"            Parser.taskList \u003d Storage.taskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"            Command c;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"            if (Parser.isList()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.LIST;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isDone()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.DONE;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"            } else if(Parser.isDelete()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.DELETE;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isDeadLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.DEADLINE;","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isEvent()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.EVENT;","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isToDo()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.TODO;","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isFind()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.FIND;","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"            } else if (Parser.isBye()){","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"                Ui.bye();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"            } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"                c \u003d Command.INVALID;","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"                Parser.runCommand(Parser.input, c);","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (TaskIndexOutOfBound e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (EmptyToDoException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (InvalidDeadlineTimeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (InvalidEventTimeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (EmptyDoneIndexException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"            Storage.saveData(Parser.taskList.getAllTasksListFormatted(), Storage.filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"            Storage.saveData(Parser.taskList.getAllTasksListOriginal(), Storage.originalInputPath);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"            Ui.lineSeparator();","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"-":4,"LilyDaytoy":61}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":" * An Event subclass similar to the Task class with its own getTask method","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public static final String MARK_IS_EVENT \u003d \"[E]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"    public Event(String event){","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"        super(event);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"        int indexDivider \u003d task.indexOf(\"/\");","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        String taskContent \u003d task.substring(0,indexDivider).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"        String timeContent \u003d task.substring(indexDivider + 1).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        String[] timeSplit \u003d timeContent.split(\" \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        String time \u003d timeSplit[1].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_IS_EVENT + MARK_AS_DONE + \" \" + taskContent +  \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_IS_EVENT + MARK_AS_NOT_DONE + \" \" + taskContent +  \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"        return \"event \" + task;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"LilyDaytoy":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":" * A class containing the methods necessary to parse the user input to specific commands","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":" * and executes these commands according to their purposes.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"public class Parser {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int TODO_LENGTH \u003d 4;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int EVENT_LENGTH \u003d 5;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int DEADLINE_LENGTH \u003d 8;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"    public static String input;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"    public static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"    public static String getInput() {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"        return input;","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isList() {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isBye() {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isDone() {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"done\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isEvent() {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"event\");","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isDeadLine() {","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"deadline\");","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"  ","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isFind() {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"find\");","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isToDo() {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"todo\");","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isDelete() {","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"        return input.startsWith(\"delete\");","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"     * Verifies if the todo command has valid input.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"     * @return Nothing","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isInvalidToDo() {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"        return input.substring(TODO_LENGTH).equals(\"\");","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"     * Verifies if the Deadline command has valid input time","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"LilyDaytoy"},"content":"     * Ensures the Deadline has the necessary part \"/by\"","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"LilyDaytoy"},"content":"     * @return Nothing","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isInvalidDeadLine() {","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"        String inputTemp \u003d input.substring(DEADLINE_LENGTH).trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isEmpty \u003d inputTemp.equals(\"\");","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"LilyDaytoy"},"content":"        String[] task \u003d inputTemp.split(\"/by\");","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"LilyDaytoy"},"content":"        return (isEmpty || task.length \u003d\u003d 0 || task.length \u003d\u003d 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"LilyDaytoy"},"content":"     * Verifies if the Event command has valid input time","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"     * Ensures the Event has the necessary part \"/at\"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"     * @return Nothing","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"LilyDaytoy"},"content":"    public static boolean isInvalidEvent() {","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"LilyDaytoy"},"content":"        String inputTemp \u003d input.substring(EVENT_LENGTH).trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isEmpty \u003d inputTemp.equals(\"\");","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"LilyDaytoy"},"content":"        String[] task \u003d inputTemp.split(\"/at\");","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"LilyDaytoy"},"content":"        return (isEmpty || task.length \u003d\u003d 0 || task.length \u003d\u003d 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"     * Convert the user input string to a specific task object","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"LilyDaytoy"},"content":"     * Categorize them into todos, deadlines, and events.","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"LilyDaytoy"},"content":"     * @return a specific task object","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidDeadlineTimeException","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidEventTimeException","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws EmptyToDoException","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"LilyDaytoy"},"content":"    public static Task convertInputToTask()","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"LilyDaytoy"},"content":"            throws InvalidDeadlineTimeException, InvalidEventTimeException, EmptyToDoException, InvalidCommandException {","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"LilyDaytoy"},"content":"        if (isDeadLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"LilyDaytoy"},"content":"            if (isInvalidDeadLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"LilyDaytoy"},"content":"                throw new InvalidDeadlineTimeException();","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"LilyDaytoy"},"content":"            return new DeadLine(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"LilyDaytoy"},"content":"        if (isEvent()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"LilyDaytoy"},"content":"            if (isInvalidEvent()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"LilyDaytoy"},"content":"                throw new InvalidEventTimeException();","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"LilyDaytoy"},"content":"            return new Event(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"LilyDaytoy"},"content":"        if (isToDo()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"LilyDaytoy"},"content":"            if (isInvalidToDo()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"LilyDaytoy"},"content":"                throw new EmptyToDoException();","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"LilyDaytoy"},"content":"            return new ToDo(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"LilyDaytoy"},"content":"        else {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"LilyDaytoy"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"LilyDaytoy"},"content":"     * Method that executes specific functions in TaskList according to the command received from user","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"LilyDaytoy"},"content":"     * @param input the user input string","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"LilyDaytoy"},"content":"     * @param c the command that parsed from user input to be executed","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws TaskIndexOutOfBound","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidDeadlineTimeException","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidEventTimeException","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws EmptyToDoException","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws EmptyDoneIndexException","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"LilyDaytoy"},"content":"    public static void runCommand(String input, Command c)","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"LilyDaytoy"},"content":"            throws TaskIndexOutOfBound, InvalidDeadlineTimeException, InvalidEventTimeException, EmptyToDoException, InvalidCommandException, EmptyDoneIndexException, InvalidInputException {","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"LilyDaytoy"},"content":"        switch (c) {","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"LilyDaytoy"},"content":"        case LIST:","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.listTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"LilyDaytoy"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"LilyDaytoy"},"content":"        case DONE:","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.tasksDone(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"LilyDaytoy"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"LilyDaytoy"},"content":"        case DELETE:","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.deleteTask(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"LilyDaytoy"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"LilyDaytoy"},"content":"        case FIND:","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.findByKeyWord(input);","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"LilyDaytoy"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"LilyDaytoy"},"content":"        case INVALID:","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"LilyDaytoy"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"LilyDaytoy"},"content":"        case TODO:","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"LilyDaytoy"},"content":"        case EVENT:","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"LilyDaytoy"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"LilyDaytoy"},"content":"            Task task \u003d convertInputToTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"LilyDaytoy"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":" * A class containing methods necessary for file saving and loading every time when using Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":" * Previous tasks will be automatically loaded into Duke when user opens Duke programme","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":" * Two saved files, \"data.txt\" saves the taskList as displayed one; \"inputFile.txt\" saves the taskList as the original user input string.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"public class Storage {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int LENGTH_MARKER \u003d 4;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"    public static String filePath \u003d \"data.txt\";","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"    public static String originalInputPath \u003d \"inputFile.txt\";","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"    public static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"     * Saves the content of tasks into a txt file","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"     * @param dataToWrite string of all tasks to write in a file","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"     * @param path file path to save the txt file","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"    public static void saveData(String dataToWrite, String path) {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"            fw.write(dataToWrite);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"            fw.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"     * Loads all the tasks and their status from previously saved Duke file","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"     * calls loadAllTasksList() method","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"    public static void loadData() throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"        File inputFile \u003d new File(originalInputPath);","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"LilyDaytoy"},"content":"        if(f.createNewFile()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(\"Welcome! This is the first time for you to use Duke! Enjoy!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"            try{","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"                loadAllTasksList();","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(\"Welcome bake to Duke, your task list saved was successfully loaded!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"     * Loads all tasks saved before to the taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"    public static void loadAllTasksList() throws FileNotFoundException {","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"LilyDaytoy"},"content":"        File inputFile \u003d new File(originalInputPath);","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"LilyDaytoy"},"content":"        Scanner s1 \u003d new Scanner(f);","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"        Scanner s2 \u003d new Scanner(inputFile);","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"LilyDaytoy"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"LilyDaytoy"},"content":"        while(s2.hasNext()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"LilyDaytoy"},"content":"            String isDone \u003d s1.nextLine().substring(LENGTH_MARKER, LENGTH_MARKER + 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"LilyDaytoy"},"content":"            String taskMessage \u003d s2.nextLine();   //read the string form of each task","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"            Command taskType \u003d identifyTaskType(taskMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"LilyDaytoy"},"content":"            switch(taskType) {","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"LilyDaytoy"},"content":"            case EVENT:","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"LilyDaytoy"},"content":"                Task event \u003d new Event(taskMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"LilyDaytoy"},"content":"                putToTaskList(taskCount, isDone, event);","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"LilyDaytoy"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"LilyDaytoy"},"content":"                Task deadline \u003d new DeadLine(taskMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"                putToTaskList(taskCount, isDone, deadline);","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"            case TODO:","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"LilyDaytoy"},"content":"                Task todo \u003d new ToDo(taskMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"LilyDaytoy"},"content":"                putToTaskList(taskCount, isDone, todo);","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"LilyDaytoy"},"content":"            taskCount++;","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"    private static void putToTaskList(int taskCount, String isDone, Task task) {","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"LilyDaytoy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"LilyDaytoy"},"content":"        if (isDone.equals(\"X\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"LilyDaytoy"},"content":"            taskList.tasks.get(taskCount).markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"LilyDaytoy"},"content":"    public static Command identifyTaskType(String s) {","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"LilyDaytoy"},"content":"        Parser.input \u003d s;","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"LilyDaytoy"},"content":"        if(Parser.isEvent()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"LilyDaytoy"},"content":"            return Command.EVENT;","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"LilyDaytoy"},"content":"        } else if (Parser.isDeadLine()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"LilyDaytoy"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"LilyDaytoy"},"content":"            return Command.TODO;","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"LilyDaytoy":107}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":" * A Task super class for all its subclass to perform polymorphism","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":" * in order to let the method in the TaskList can correctly process lots of different types of functionalities","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":" * Includes functions to mark tasks as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int TASK_CONTENT_POSITION \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    protected String task;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    private static final String MARK_NO_CATEGORY \u003d \"[N]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    protected static final String MARK_AS_DONE \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    protected static final String MARK_AS_NOT_DONE \u003d \"[ ]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public Task(String task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        this.task \u003d task.split(\" \", 2)[TASK_CONTENT_POSITION];","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_NO_CATEGORY + MARK_AS_DONE + \" \" + task;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_NO_CATEGORY + MARK_AS_NOT_DONE + \" \" + task;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"     * Marks the task as done","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"LilyDaytoy":38}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"import duke.exception.TaskIndexOutOfBound;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"import duke.exception.EmptyDoneIndexException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":" * A class containing the methods necessary for performing operations on task objects","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":" * Contains ArrayList for storing all the tasks and their status.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"public class TaskList {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int KEY_WORD_BEGIN_INDEX \u003d 5;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"    public  ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"     * Adds a new task (including deadline, event, todo) to the taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"     * @param task a specific task object, can be deadline, event, todo","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"  \" + task.getTask());","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks on the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"     * Searches for a specific task by its content to see if the task has already been added to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"     * @param task the task user wants to add","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"     * @return Nothing","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean searchTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"        boolean taskFound \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i\u003d0; i\u003ctasks.size(); i++) {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"            if (tasks.get(i).getTask().equals(task.getTask()) \u0026\u0026 !tasks.get(i).isDone()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"                taskFound \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"        return taskFound;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"LilyDaytoy"},"content":"    public void findByKeyWord(String taskToFind) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"        String keyword \u003d taskToFind.substring(KEY_WORD_BEGIN_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"            if (tasks.get(i).getTask().contains(keyword)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"                System.out.println(tasks.get(i).getTask());","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"   /**","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"    * Deletes a task from the taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"    * @param taskDelete the task user wants to delete","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"    * @throws TaskIndexOutOfBound","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"    * @throws EmptyDoneIndexException","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"LilyDaytoy"},"content":"    */","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"    public void deleteTask(String taskDelete) throws TaskIndexOutOfBound,EmptyDoneIndexException {","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"        int indexOfTask \u003d getIndexOfTask(taskDelete);","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"        Task taskToDelete \u003d tasks.get(indexOfTask - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"LilyDaytoy"},"content":"        tasks.remove(indexOfTask - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(taskToDelete.getTask());","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Now you have\" +  tasks.size()  + \"tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"     * Marks the task that the user completes as done","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"LilyDaytoy"},"content":"     * @param taskDone  the task that the user completes","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws TaskIndexOutOfBound","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws EmptyDoneIndexException","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"LilyDaytoy"},"content":"    public void tasksDone(String taskDone) throws TaskIndexOutOfBound,EmptyDoneIndexException {","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"LilyDaytoy"},"content":"        int indexOfTask \u003d getIndexOfTask(taskDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"LilyDaytoy"},"content":"        tasks.get(indexOfTask-1).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(tasks.get(indexOfTask-1).getTask());","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"LilyDaytoy"},"content":"     * Gets the index of the task that the user wants to do something with","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"LilyDaytoy"},"content":"     * @param task the task that the user wants to do something with","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"LilyDaytoy"},"content":"     * @return the index of the task","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws TaskIndexOutOfBound","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"LilyDaytoy"},"content":"     * @throws EmptyDoneIndexException","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"    private int getIndexOfTask(String task) throws TaskIndexOutOfBound, EmptyDoneIndexException {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"LilyDaytoy"},"content":"        String[] words \u003d task.split(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"LilyDaytoy"},"content":"        if (words.length \u003d\u003d 0 || words.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"LilyDaytoy"},"content":"            throw new EmptyDoneIndexException();","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"LilyDaytoy"},"content":"        int indexOfTask \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"LilyDaytoy"},"content":"        if (indexOfTask \u003c 1 || indexOfTask \u003e tasks.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"LilyDaytoy"},"content":"            throw new TaskIndexOutOfBound(\"Ops! your task index is out of bound!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"LilyDaytoy"},"content":"        return indexOfTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"LilyDaytoy"},"content":"     * Prints the list of all the tasks and their status","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"LilyDaytoy"},"content":"    public void listTasks(){","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"List of tasks:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i\u003d0; i\u003ctasks.size(); i++) {","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"LilyDaytoy"},"content":"            int id \u003d i + 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(id + \".\" + tasks.get(i).getTask());","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"LilyDaytoy"},"content":"     * get all tasks as string list, in order to write in file to store the data.","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"LilyDaytoy"},"content":"     * @return string of all tasks as displayed","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"LilyDaytoy"},"content":"    public String getAllTasksListFormatted() {","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"LilyDaytoy"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"LilyDaytoy"},"content":"            data \u003d data + tasks.get(i).getTask() + \"\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"LilyDaytoy"},"content":"        return data;","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"LilyDaytoy"},"content":"     * get all the taskList in the original input form","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"LilyDaytoy"},"content":"     * @return string of all tasks as the original strings that user inputs","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"LilyDaytoy"},"content":"    public String getAllTasksListOriginal() {","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"LilyDaytoy"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"LilyDaytoy"},"content":"            data \u003d data + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"LilyDaytoy"},"content":"        return data;","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"LilyDaytoy":135}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":" * A Todo subclass similar to the Task class with its own getTask method.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"    public static final String MARK_TO_DO \u003d \"[T]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    public ToDo(String todo){","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"        super(todo);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        if(isDone){","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_TO_DO + MARK_AS_DONE + \" \" + task;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"            return MARK_TO_DO + MARK_AS_NOT_DONE + \" \" + task;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        return \"todo \" + task;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"LilyDaytoy":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":" * A class the display the Ui messages to users.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"public class Ui {","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        greet();","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        lineSeparator();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Hello! I am your memo keeper Duke! \\nWhat can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"        lineSeparator();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"    public static void echo(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"        lineSeparator();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"        lineSeparator();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"Bye. Hope to see you again, don\u0027t forget to complete your task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"    public static void lineSeparator() {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(\"-*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*--*-*-*-*-\");","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"LilyDaytoy":36}},{"path":"src/main/java/duke/exception/EmptyDoneIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class EmptyDoneIndexException extends Exception {","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyDoneIndexException() {","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"        super();","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyDoneIndexException(String s) {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! You need to add index after \u0027done\u0027 \";","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyInputException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyInputException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! I\u0027 am sorry, but your input cannot be empty!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/EmptyToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class EmptyToDoException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyToDoException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public EmptyToDoException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! your todo task cannot be empty!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":19}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidCommandException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! I\u0027 m sorry, but I don\u0027 t know what it means. )-: \";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/InvalidDeadlineTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class InvalidDeadlineTimeException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidDeadlineTimeException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidDeadlineTimeException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! Please add time for Deadline using the keyword \u0027/by\u0027!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/InvalidEventTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class InvalidEventTimeException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidEventTimeException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidEventTimeException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! Please add time for Event using the keyword \u0027/at\u0027!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"        super();","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public InvalidInputException(String s) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! I am sorry, but I don\u0027t know what you are saying )-:\";","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"LilyDaytoy":16}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBound.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"package duke.exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"import duke.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"public class TaskIndexOutOfBound extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"    public TaskIndexOutOfBound() {","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    public TaskIndexOutOfBound(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        return \"Ops! your task index is out of bound!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"LilyDaytoy":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LilyDaytoy"},"content":"todo borrow book","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"LilyDaytoy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"todo do the quiz","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"deadline watch lectures /by Monday 2pm","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"done 1","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"done 4","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"LilyDaytoy":12}}]
