[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the subclass Deadline under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"     * @param by date to complete event by","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":" * This represents the Duke Chat bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"    private static boolean done \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    private static Task[] list \u003d new Task[100];","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    private static int listIndexTracker \u003d 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    private static boolean error \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    private final static String LINES \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    private final static String TAB \u003d \"    \";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"    private final static String GREETING \u003d \"    Hello... I\u0027m Sadge Duke\\n    What can I do for you? :(\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    private final static String GOODBYE \u003d \"    Bye. I\u0027ll miss you...\";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    private final static String TODO \u003d \"todo\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    private final static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"    private final static String EVENT \u003d \"event\";","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    private final static int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    private final static int DATETIME \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"     * Main function that is called upon program execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"     * @param args System Arguments added to program.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"        /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"         * ASCII art source: https://www.twitchquotes.com/copypastas/2059","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"        String sadge \u003d \"   ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠋⠉⣉⣉⠙⠿⠋⣠⢴⣊⣙⢿⣿⣿\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠁⠀⢀⠔⡩⠔⠒⠛⠧⣾⠊⢁⣀⣀⣀⡙⣿\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⣿⣿⣿⣿⣿⣿⠟⠛⠁⠀⠀⠀⠀⠀⡡⠊⠀⠀⣀⣠⣤⣌⣾⣿⠏⠀⡈⢿⡜\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⣿⣿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠡⣤⣶⠏⢁⠈⢻⡏⠙⠛⠀⣀⣁⣤⢢\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣄⡀⠣⣌⡙⠀⣘⡁⠜⠈⠑⢮⡭⠴⠚⠉⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"                + \"   ⠁⠀⢀⠔⠁⣀⣤⣤⣤⣤⣤⣄⣀⠀⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⠁⠀⢀⣠⢠\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"                + \"   ⡀⠀⢸⠀⢼⣿⣿⣶⣭⣭⣭⣟⣛⣛⡿⠷⠶⠶⢶⣶⣤⣤⣤⣶⣶⣾⡿⠿⣫⣾\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"                + \"   ⠇⠀⠀⠀⠈⠉⠉⠉⠉⠉⠙⠛⠛⠻⠿⠿⠿⠷⣶⣶⣶⣶⣶⣶⣶⣶⡾⢗⣿⣿\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"                + \"   ⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣿⣶⣾⣿⣿⣿\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⣿⣿⣷⣶⣤⣄⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣝⡻⣿⣿⣿⣿⣿⣿⣿⣿\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"                + \"   ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡹⣿⣿⣿⣿⣿⣿\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"        /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"         * ASCII art source: https://fsymbols.com/text-art/","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"        String text \u003d \"█▀ ▄▀█ █▀▄ █▀▀ █▀▀   █▀▄ █░█ █▄▀ █▀▀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"                + \"▄█ █▀█ █▄▀ █▄█ ██▄   █▄▀ █▄█ █░█ ██▄\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"        System.out.println(\"Hello from\\n\" + sadge + text);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"        while (!done) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"owensoh"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"            parseInput(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"owensoh"},"content":"     * This function parses the input given by user and prints the appropriate response.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"owensoh"},"content":"    private static void parseInput(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"owensoh"},"content":"        if (input.equalsIgnoreCase(\"Bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"owensoh"},"content":"            System.out.println(GOODBYE);","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"owensoh"},"content":"            setDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"owensoh"},"content":"        } else if (input.equalsIgnoreCase(\"List\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"owensoh"},"content":"            printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"owensoh"},"content":"        } else if (isDoneInput(input)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"owensoh"},"content":"            int index \u003d getDoneIndex(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"owensoh"},"content":"            list[index].markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"owensoh"},"content":"            System.out.print(TAB + \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + TAB + TAB);","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"owensoh"},"content":"            System.out.println(list[index]);","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"owensoh"},"content":"        } else if (isValidTodo(input)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"owensoh"},"content":"            addToList(input, TODO);","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"owensoh"},"content":"            printAddedMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"owensoh"},"content":"        } else if (isValidDeadline(input)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"owensoh"},"content":"            addToList(input, DEADLINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"owensoh"},"content":"            printAddedMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"owensoh"},"content":"        } else if (isValidEvent(input)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"owensoh"},"content":"            addToList(input, EVENT);","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"owensoh"},"content":"            printAddedMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"owensoh"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"owensoh"},"content":"            setError(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"owensoh"},"content":"        if (error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"owensoh"},"content":"            System.out.println(TAB + \"Invalid input\");","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"owensoh"},"content":"            setError(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"owensoh"},"content":"     * This function adds the input description into list accordingly, based on its task type.","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"owensoh"},"content":"     * @param taskType task type identified beforehand (DEADLINE/EVENT/TODO).","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"owensoh"},"content":"    private static void addToList(String input, String taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"owensoh"},"content":"        String[] parameters \u003d new String[2];","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"owensoh"},"content":"        getParameters(parameters, input, taskType);","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"owensoh"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"owensoh"},"content":"        case TODO:","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"owensoh"},"content":"            getParameters(parameters, input, TODO);","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"owensoh"},"content":"            list[listIndexTracker] \u003d new Todo(parameters[DESCRIPTION]);","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"owensoh"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"owensoh"},"content":"            getParameters(parameters, input, DEADLINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"owensoh"},"content":"            list[listIndexTracker] \u003d new Deadline(parameters[DESCRIPTION], parameters[DATETIME]);","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"owensoh"},"content":"        case EVENT:","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"owensoh"},"content":"            getParameters(parameters, input, EVENT);","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"owensoh"},"content":"            list[listIndexTracker] \u003d new Event(parameters[DESCRIPTION], parameters[DATETIME]);","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"owensoh"},"content":"        listIndexTracker++;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"owensoh"},"content":"     * This function prints the message when task is added to list.","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"owensoh"},"content":"    private static void printAddedMessage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + \"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + TAB + list[listIndexTracker - 1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + String.format(\"Now you have %d tasks in the list.\", listIndexTracker));","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"owensoh"},"content":"     * This function prints the individual elements in list.","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"owensoh"},"content":"    private static void printList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"owensoh"},"content":"        for (int i \u003d 0; i \u003c listIndexTracker; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"owensoh"},"content":"            System.out.format(TAB + \"% 3d.\", i + 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"owensoh"},"content":"            System.out.println(list[i]);","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"owensoh"},"content":"     * This function sets done to true, stopping while loop and signifying the end of program.","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"owensoh"},"content":"    private static void setDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"owensoh"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"owensoh"},"content":"     * This function check if done statement and index in done statement is valid.","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"owensoh"},"content":"     * @return returns the validity of the done input.","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"owensoh"},"content":"    private static boolean isDoneInput(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"owensoh"},"content":"        boolean validDoneStatement \u003d Pattern.matches(\"^done \\\\d+$\", input.toLowerCase());","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"owensoh"},"content":"        if (!validDoneStatement) {","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"owensoh"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"owensoh"},"content":"        int numberOnly \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"owensoh"},"content":"        return numberOnly \u003c\u003d listIndexTracker \u0026\u0026 numberOnly \u003c 100;","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":175,"author":{"gitId":"owensoh"},"content":"     * This function retrieves the index given in done statement.","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"owensoh"},"content":"     * @return returns the index given in done statement","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"owensoh"},"content":"    private static int getDoneIndex(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"owensoh"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"owensoh"},"content":"        return Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"owensoh"},"content":"     * This function sets error as the given boolean argument.","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"owensoh"},"content":"     * @param bool boolean to set error as.","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"owensoh"},"content":"    private static void setError(boolean bool) {","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"owensoh"},"content":"        error \u003d bool;","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":191,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":192,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if to do statement is valid.","lastModifiedDate":"2021-08-30"},{"lineNumber":194,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":195,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the to do statement.","lastModifiedDate":"2021-08-30"},{"lineNumber":196,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":197,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidTodo(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":198,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"todo [a-z0-9\\\\s]+\", input.toLowerCase());","lastModifiedDate":"2021-08-30"},{"lineNumber":199,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":200,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":201,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":202,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if deadline statement is valid.","lastModifiedDate":"2021-08-30"},{"lineNumber":203,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":204,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the deadline statement.","lastModifiedDate":"2021-08-30"},{"lineNumber":205,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":206,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidDeadline(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":207,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"deadline [a-z0-9\\\\s]+\\\\b /by .+\", input.toLowerCase());","lastModifiedDate":"2021-08-30"},{"lineNumber":208,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":209,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":210,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":211,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if event statement is valid.","lastModifiedDate":"2021-08-30"},{"lineNumber":212,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":213,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the event statement.","lastModifiedDate":"2021-08-30"},{"lineNumber":214,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":215,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidEvent(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":216,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"event [a-z0-9\\\\s]+\\\\b /at .+\", input.toLowerCase());","lastModifiedDate":"2021-08-30"},{"lineNumber":217,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":218,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":219,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":220,"author":{"gitId":"owensoh"},"content":"     * This function gets the parameters for the Task subclasses by slicing input.","lastModifiedDate":"2021-08-30"},{"lineNumber":221,"author":{"gitId":"owensoh"},"content":"     * @param parameters Array of string of fixed size 2 to store parameters for Task subclasses.","lastModifiedDate":"2021-08-30"},{"lineNumber":222,"author":{"gitId":"owensoh"},"content":"     * @param input User\u0027s input into command line.","lastModifiedDate":"2021-08-30"},{"lineNumber":223,"author":{"gitId":"owensoh"},"content":"     * @param taskType String that is pre-identified (DEADLINE/EVENT/TODO)","lastModifiedDate":"2021-08-30"},{"lineNumber":224,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":225,"author":{"gitId":"owensoh"},"content":"    private static void getParameters(String[] parameters, String input, String taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":226,"author":{"gitId":"owensoh"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":227,"author":{"gitId":"owensoh"},"content":"        case TODO:","lastModifiedDate":"2021-08-30"},{"lineNumber":228,"author":{"gitId":"owensoh"},"content":"            String[] todoParts \u003d input.split(\"(?i)todo \");","lastModifiedDate":"2021-08-30"},{"lineNumber":229,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d todoParts[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":230,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":231,"author":{"gitId":"owensoh"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-30"},{"lineNumber":232,"author":{"gitId":"owensoh"},"content":"            String[] initDeadlineParts \u003d input.split(\"(?i)deadline \");","lastModifiedDate":"2021-08-30"},{"lineNumber":233,"author":{"gitId":"owensoh"},"content":"            String[] deadlineParts \u003d initDeadlineParts[1].split(\" /by \");","lastModifiedDate":"2021-08-30"},{"lineNumber":234,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d deadlineParts[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":235,"author":{"gitId":"owensoh"},"content":"            parameters[DATETIME] \u003d deadlineParts[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":236,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":237,"author":{"gitId":"owensoh"},"content":"        case EVENT:","lastModifiedDate":"2021-08-30"},{"lineNumber":238,"author":{"gitId":"owensoh"},"content":"            String[] initEventParts \u003d input.split(\"(?i)event \");","lastModifiedDate":"2021-08-30"},{"lineNumber":239,"author":{"gitId":"owensoh"},"content":"            String[] eventParts \u003d initEventParts[1].split(\" /at \");","lastModifiedDate":"2021-08-30"},{"lineNumber":240,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d eventParts[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":241,"author":{"gitId":"owensoh"},"content":"            parameters[DATETIME] \u003d eventParts[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":242,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":243,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"owensoh":241,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the subclass Event under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"     * @param at date of event","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"     * This function initialises the task input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"     * This function returns a relevant status icon.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"     * @return \"X\" if task is done, \" \" if it is not.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"     * This function marks a given task as done, and prints a message letting the user know.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"     * This function is a getter for task description.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"     * @return description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"owensoh":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the subclass To Do under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":22}}]
