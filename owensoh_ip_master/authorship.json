[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":" * This represents the subclass Deadline under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"     * @param by          date to complete event by","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"        return \"D\" + FILE_STRING_SEPARATOR + super.toFile() + FILE_STRING_SEPARATOR + by + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"    public boolean isInTask(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"        boolean isInBy \u003d by.toString().contains(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"        boolean isInFormattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toLowerCase().contains(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"        return super.isInTask(input) || isInBy || isInFormattedBy;","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":" * Represents the Duke Chat bot.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    private static boolean isDukeDone \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     * Initialises the variables TaskList and Storage.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"     * @param filePath Contains the path to where the stored tasks are saved in.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"        storage.readSavedTasks(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"     * Creates an instance of duke and runs it.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"     * @param args System Arguments added to program.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"     * Takes in input from user and sends it to parser function.","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"    public void run() {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"        Ui.printWelcomeBanner();","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"        if (isDukeDone) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"            Ui.printFileCorrupted();","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"        while (!isDukeDone) {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"            Ui.padLines();","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"            try {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"                Parser.parseInput(input, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"                Ui.printGeneralInvalidInput();","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"            Ui.padLines();","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"     * Sets isDukeDone to true, signalling end of program.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"    public static void setDukeDone() {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"        isDukeDone \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"owensoh":59,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":" * This represents the subclass Event under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"     * @param at          date of event","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"        return \"E\" + FILE_STRING_SEPARATOR + super.toFile() + FILE_STRING_SEPARATOR + at + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"    public boolean isInTask(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"        boolean isInAt \u003d at.toString().contains(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"        boolean isInFormattedAt \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toLowerCase().contains(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"        return super.isInTask(input) || isInAt || isInFormattedAt;","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":42}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents Exception when an Invalid Input occurs.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"    // no other code needed","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"owensoh":6}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents Exception when an Invalid Task is produced by input.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"    // no other code needed","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"owensoh":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"public class Parser {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    private final static String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"    private final static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    private final static String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    private final static int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    private final static int DATETIME \u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    public Parser() {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"     * This function parses the input given by user and prints the appropriate response.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    public static void parseInput(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"        if (input.equalsIgnoreCase(\"Bye\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"            Ui.sayGoodbye();","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"            Duke.setDukeDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"        } else if (input.equalsIgnoreCase(\"List\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"            Ui.printList(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"        } else if (isValidDoneInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"            handleDoneInput(index, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"        } else if (isValidTodoInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"            addToList(input, TODO, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"        } else if (isValidDeadlineInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"            addToList(input, DEADLINE, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"        } else if (isValidEventInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"            addToList(input, EVENT, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"        } else if (isValidDeleteInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"            handleDeleteInput(index, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"        } else if (isValidFindInput(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"            handleFindInput(input, tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidFindInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"^find [a-z0-9\\\\s\\\\-]+$\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"    private static void handleFindInput(String input, TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"        String findText \u003d input.substring(5).toLowerCase();","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"        TaskList tempTasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"            if (task.isInTask(findText)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"                tempTasks.addTask(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"        if (tempTasks.getLength() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"            Ui.printCannotFind();","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"owensoh"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"            Ui.printFind(tempTasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"owensoh"},"content":"     * This function check if done statement and index in done statement is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"owensoh"},"content":"     * @return returns the validity of the done input.","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidDoneInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"^done \\\\d+$\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"owensoh"},"content":"     * This function check if done statement and index in delete statement is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"owensoh"},"content":"     * @return returns the validity of the delete input.","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidDeleteInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"^delete \\\\d+$\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"owensoh"},"content":"     * This function retrieves the index given in done/delete statement.","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"owensoh"},"content":"     * @return returns the index given in done/delete statement","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"owensoh"},"content":"    private static int getIndex(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"owensoh"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"owensoh"},"content":"        return Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if to do statement is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the to do statement.","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidTodoInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"todo [:a-z0-9\\\\s]+\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if deadline statement is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the deadline statement.","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidDeadlineInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"deadline [a-z0-9\\\\s]+\\\\b /by .+\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"owensoh"},"content":"     * This function uses regex to check if event statement is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"owensoh"},"content":"     * @return returns validity of the event statement.","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"owensoh"},"content":"    private static boolean isValidEventInput(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"owensoh"},"content":"        return Pattern.matches(\"event [a-z0-9\\\\s]+\\\\b /at .+\", input.toLowerCase());","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"owensoh"},"content":"     * This function gets the parameters for the Task subclasses by slicing input.","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"owensoh"},"content":"     * @param parameters Array of string of fixed size 2 to store parameters for Task subclasses.","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"owensoh"},"content":"     * @param input      User\u0027s input into command line.","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"owensoh"},"content":"     * @param taskType   String that is pre-identified (DEADLINE/EVENT/TODO)","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"owensoh"},"content":"    private static void getParameters(String[] parameters, String input, String taskType) throws InvalidTaskException {","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"owensoh"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"owensoh"},"content":"        case TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"owensoh"},"content":"            String[] todoParts \u003d input.split(\"(?i)todo \");","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d todoParts[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"owensoh"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"owensoh"},"content":"            String[] initDeadlineParts \u003d input.split(\"(?i)deadline \");","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"owensoh"},"content":"            String[] deadlineParts \u003d initDeadlineParts[1].split(\" /by \");","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"owensoh"},"content":"            if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"owensoh"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d deadlineParts[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"owensoh"},"content":"            parameters[DATETIME] \u003d deadlineParts[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"owensoh"},"content":"        case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"owensoh"},"content":"            String[] initEventParts \u003d input.split(\"(?i)event \");","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"owensoh"},"content":"            String[] eventParts \u003d initEventParts[1].split(\" /at \");","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"owensoh"},"content":"            if (eventParts.length !\u003d 2) {","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"owensoh"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"owensoh"},"content":"            parameters[DESCRIPTION] \u003d eventParts[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"owensoh"},"content":"            parameters[DATETIME] \u003d eventParts[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"owensoh"},"content":"        if (Objects.equals(parameters[DESCRIPTION], \"\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"owensoh"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"owensoh"},"content":"     * This function handles the done input by marking task as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"owensoh"},"content":"    public static void handleDoneInput(int index, TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"owensoh"},"content":"            tasks.getItemFromIndex(index).markAsDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"owensoh"},"content":"            Ui.printDoneTask(tasks.getItemFromIndex(index));","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"owensoh"},"content":"            Storage.refreshFile(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"owensoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"owensoh"},"content":"            Ui.printInvalidDoneStatement();","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"owensoh"},"content":"     * This function handles the delete input by deleting it.","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"owensoh"},"content":"     * @param input input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"owensoh"},"content":"    public static void handleDeleteInput(int index, TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"owensoh"},"content":"            Task item \u003d tasks.getItemFromIndex(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"owensoh"},"content":"            tasks.deleteItemFromIndex(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"owensoh"},"content":"            Ui.printDeleteTask(item, tasks.getLength());","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"owensoh"},"content":"            Storage.refreshFile(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":190,"author":{"gitId":"owensoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"owensoh"},"content":"            Ui.printInvalidDeleteStatement();","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"owensoh"},"content":"     * This function adds the input description into list accordingly, based on its task type.","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"owensoh"},"content":"     * @param input    input given by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":199,"author":{"gitId":"owensoh"},"content":"     * @param taskType task type identified beforehand (DEADLINE/EVENT/TODO).","lastModifiedDate":"2021-09-20"},{"lineNumber":200,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":201,"author":{"gitId":"owensoh"},"content":"    public static void addToList(String input, String taskType, TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":202,"author":{"gitId":"owensoh"},"content":"        String[] parameters \u003d new String[2];","lastModifiedDate":"2021-09-20"},{"lineNumber":203,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":204,"author":{"gitId":"owensoh"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-20"},{"lineNumber":205,"author":{"gitId":"owensoh"},"content":"            case TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":206,"author":{"gitId":"owensoh"},"content":"                getParameters(parameters, input, TODO);","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"owensoh"},"content":"                Todo todo \u003d new Todo(parameters[DESCRIPTION]);","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"owensoh"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2021-09-20"},{"lineNumber":209,"author":{"gitId":"owensoh"},"content":"                Storage.saveTaskInFile(todo);","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"owensoh"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"owensoh"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"owensoh"},"content":"                getParameters(parameters, input, DEADLINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"owensoh"},"content":"                LocalDate deadlineDate \u003d parseDate(parameters[DATETIME]);","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"owensoh"},"content":"                Deadline deadline \u003d new Deadline(parameters[DESCRIPTION], deadlineDate);","lastModifiedDate":"2021-09-20"},{"lineNumber":215,"author":{"gitId":"owensoh"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2021-09-20"},{"lineNumber":216,"author":{"gitId":"owensoh"},"content":"                Storage.saveTaskInFile(deadline);","lastModifiedDate":"2021-09-20"},{"lineNumber":217,"author":{"gitId":"owensoh"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":218,"author":{"gitId":"owensoh"},"content":"            case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"owensoh"},"content":"                getParameters(parameters, input, EVENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"owensoh"},"content":"                LocalDate eventDate \u003d parseDate(parameters[DATETIME]);","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"owensoh"},"content":"                Event event \u003d new Event(parameters[DESCRIPTION], eventDate);","lastModifiedDate":"2021-09-20"},{"lineNumber":222,"author":{"gitId":"owensoh"},"content":"                tasks.addTask(event);","lastModifiedDate":"2021-09-20"},{"lineNumber":223,"author":{"gitId":"owensoh"},"content":"                Storage.saveTaskInFile(event);","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"owensoh"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"owensoh"},"content":"            Ui.printAddedMessage(tasks.getLastTask(), tasks.getLength());","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"owensoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":228,"author":{"gitId":"owensoh"},"content":"            Ui.printInvalidTaskStatement();","lastModifiedDate":"2021-09-20"},{"lineNumber":229,"author":{"gitId":"owensoh"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":230,"author":{"gitId":"owensoh"},"content":"            Ui.printInvalidTaskStatement();","lastModifiedDate":"2021-09-20"},{"lineNumber":231,"author":{"gitId":"owensoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"owensoh"},"content":"            Ui.printInvalidDateStatement();","lastModifiedDate":"2021-09-20"},{"lineNumber":233,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":234,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":235,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"owensoh"},"content":"    public static LocalDate parseDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"owensoh"},"content":"        return LocalDate.parse(dateString);","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":239,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":240,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"owensoh":240}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"public class Storage {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    protected static String filepath;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    private final static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"    private final static int IS_DONE_INDEX \u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    private final static int TASK_INDEX \u003d 2;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    private final static int BY_AT_INDEX \u003d 3;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"        Storage.filepath \u003d filepath;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    public void readSavedTasks(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"        File dataFile \u003d new File(filepath);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"            Scanner lineScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"            while (lineScanner.hasNext()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"                AddLineTask(tasks, lineScanner.nextLine());","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"            createFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"            Duke.setDukeDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"    public void AddLineTask(TaskList tasks, String line) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"        String[] lineContents \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"        switch (lineContents[TASK_TYPE_INDEX]) {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"        case \"T\":","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"            Todo todo \u003d new Todo(lineContents[TASK_INDEX]);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"        case \"D\":","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"            Deadline deadline \u003d new Deadline(lineContents[TASK_INDEX], LocalDate.parse(lineContents[BY_AT_INDEX]));","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"        case \"E\":","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"            Event event \u003d new Event(lineContents[TASK_INDEX], LocalDate.parse(lineContents[BY_AT_INDEX]));","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"            tasks.addTask(event);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"        if (lineContents[IS_DONE_INDEX].equals(\"1\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"            tasks.getLastTask().markAsDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"owensoh"},"content":"    public static void refreshFile(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"            FileWriter file \u003d new FileWriter(filepath);","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"owensoh"},"content":"            for (Task task : tasks.getList()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"                file.write(task.toFile());","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"owensoh"},"content":"            file.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"owensoh"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"owensoh"},"content":"            System.out.println(\"Unable to write to file...\");","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"owensoh"},"content":"    public static void createFile() {","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"owensoh"},"content":"            File newFile \u003d new File(filepath);","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"owensoh"},"content":"            newFile.getParentFile().mkdirs();","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"owensoh"},"content":"            newFile.createNewFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"owensoh"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"owensoh"},"content":"            System.out.println(\"Unable to create file...\");","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"owensoh"},"content":"    public static void saveTaskInFile(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"owensoh"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"owensoh"},"content":"            FileWriter file \u003d new FileWriter(filepath, true);","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"owensoh"},"content":"            file.write(task.toFile());","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"owensoh"},"content":"            file.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"owensoh"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"owensoh"},"content":"            System.out.println(\"Unable to write to file...\");","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"owensoh":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    public final static String FILE_STRING_SEPARATOR \u003d \" | \";","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"     * This function initialises the task input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"     * This function returns a relevant status icon.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"     * @return \"X\" if task is done, \" \" if it is not.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"     * This function marks a given task as done, and prints a message letting the user know.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"     * This function is a getter for task description.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"     * @return description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"    public boolean isInTask(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"        return description.toLowerCase().contains(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"owensoh"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"        String fileString \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"owensoh"},"content":"            fileString +\u003d \"1\" + FILE_STRING_SEPARATOR;","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"            fileString +\u003d \"0\" + FILE_STRING_SEPARATOR;","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"owensoh"},"content":"        fileString +\u003d getDescription();","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"owensoh"},"content":"        return fileString;","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"owensoh":68}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"public class TaskList {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    public Task getLastTask() {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    public void deleteItemFromIndex(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    public int getLength() {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"    public Task getItemFromIndex(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"        return tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"owensoh":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":" * This represents the subclass To Do under superclass Task in each element of Task[] list in Duke.java.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"     * This function initialises the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"     * @param description description input by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"     * This function modifies the output format.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"        return \"T\" + FILE_STRING_SEPARATOR + super.toFile() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"    public boolean isInTask(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"        return super.isInTask(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"owensoh":32}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owensoh"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"owensoh"},"content":"    private final static String LINES \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"owensoh"},"content":"    private final static String TAB \u003d \"    \";","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"owensoh"},"content":"    private final static String GREETING \u003d TAB + \"Hello... I\u0027m Sadge Duke\\n    What can I do for you? :(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"owensoh"},"content":"    private final static String GOODBYE \u003d TAB + \"Please don\u0027t go... I\u0027ll miss you...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"owensoh"},"content":"    private final static String INVALID_GENERAL \u003d TAB + \"I\u0027m really sorry... This is an invalid input...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"owensoh"},"content":"    private final static String INVALID_DONE \u003d TAB + \"I\u0027m sorry... This is an incorrect done input...\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"owensoh"},"content":"            + TAB + \"Please use \u0027list\u0027 to see what number can be used...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"owensoh"},"content":"    private final static String INVALID_DELETE \u003d TAB + \"Why would you delete a task... Your delete statement is an \"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"owensoh"},"content":"            + \"incorrect input too...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"owensoh"},"content":"    private final static String INVALID_DATE \u003d TAB + \"Your date is invalid... Please use this format: YYYY-MM-DD...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"owensoh"},"content":"    private final static String INVALID_TASK \u003d TAB + \"Your task is really weird... I don\u0027t think I like it...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"owensoh"},"content":"    private final static String CANNOT_FIND \u003d TAB + \"Unfortunately... There aren\u0027t tasks that \"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"owensoh"},"content":"            + \"have what you are looking for...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"owensoh"},"content":"    private final static String CAN_FIND \u003d TAB + \"Yay... These tasks match your find...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"owensoh"},"content":"    private final static String FILE_CORRUPTED \u003d TAB + \"Oh no... File is corrupted, Please go fix it...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"owensoh"},"content":"    public Ui() {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"owensoh"},"content":"    public static void printWelcomeBanner() {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"owensoh"},"content":"        String sadge \u003d \":( :( :( :( :( :( :( :( :( :( :( :(\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"owensoh"},"content":"                + \"D: D: D: D: D: D: D: D: D: D: D: D:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"owensoh"},"content":"                + \":( :( :( :( :( :( :( :( :( :( :( :(\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"owensoh"},"content":"                + \"D: D: D: D: D: D: D: D: D: D: D: D:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"owensoh"},"content":"                + \":( :( :( :( :( :( :( :( :( :( :( :(\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"owensoh"},"content":"                + \"D: D: D: D: D: D: D: D: D: D: D: D:\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"owensoh"},"content":"        String text \u003d \"SADGE DUKE\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"owensoh"},"content":"        System.out.println(\"Hello from\\n\" + sadge + text);","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"owensoh"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"owensoh"},"content":"    public static void padLines() {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"owensoh"},"content":"        System.out.println(LINES);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"owensoh"},"content":"    public static void printGeneralInvalidInput() {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"owensoh"},"content":"        System.out.println(INVALID_GENERAL);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"owensoh"},"content":"    public static void printList(TaskList list) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"owensoh"},"content":"        for (int index \u003d 0; index \u003c list.getLength(); index++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"owensoh"},"content":"            System.out.format(TAB + \"% 3d.\", index + 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"owensoh"},"content":"            System.out.println(list.getItemFromIndex(index));","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"owensoh"},"content":"    public static void printAddedMessage(Task item, int size) {","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + \"Okay... I guess I\u0027ll add this task... \");","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + TAB + item);","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + String.format(\"Now you have %d tasks in the list...\", size));","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"owensoh"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"owensoh"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"owensoh"},"content":"    public static void printDoneTask(Task item) {","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"owensoh"},"content":"        System.out.print(TAB + \"Nice... I guess I will mark this task as done...:\"","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"owensoh"},"content":"                + System.lineSeparator() + TAB + TAB);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"owensoh"},"content":"        System.out.println(item);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"owensoh"},"content":"    public static void printDeleteTask(Task item, int length) {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"owensoh"},"content":"        System.out.print(TAB + \"Are you sure about this? I\u0027ll just delete this anyway...\"","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"owensoh"},"content":"                + System.lineSeparator() + TAB + TAB);","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"owensoh"},"content":"        System.out.println(item);","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"owensoh"},"content":"        System.out.println(TAB + String.format(\"Now you have %d tasks in the list...\", length));","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"owensoh"},"content":"    public static void printInvalidDoneStatement() {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"owensoh"},"content":"        System.out.println(INVALID_DONE);","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"owensoh"},"content":"    public static void printInvalidDeleteStatement() {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"owensoh"},"content":"        System.out.println(INVALID_DELETE);","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"owensoh"},"content":"    public static void printInvalidTaskStatement() {","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"owensoh"},"content":"        System.out.println(INVALID_TASK);","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"owensoh"},"content":"    public static void printInvalidDateStatement() { System.out.println(INVALID_DATE); }","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"owensoh"},"content":"    public static void printCannotFind() { System.out.println(CANNOT_FIND); }","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"owensoh"},"content":"    public static void printFind(TaskList tempTasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"owensoh"},"content":"        System.out.println(CAN_FIND);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"owensoh"},"content":"        for (int index \u003d 0; index \u003c tempTasks.getLength(); index++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"owensoh"},"content":"            System.out.format(TAB + \"% 3d.\", index + 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"owensoh"},"content":"            System.out.println(tempTasks.getItemFromIndex(index));","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"owensoh"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"owensoh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"owensoh"},"content":"    public static void printFileCorrupted() {","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"owensoh"},"content":"        System.out.println(FILE_CORRUPTED);","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"owensoh"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"owensoh"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"owensoh":104}}]
