[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"T. .test","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"D.X.aa.2020-02-02T03:30","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"D. .dingus.2019-10-01T15:00","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"E.X.deeznuts.2020-01-01T15:00.2020-01-01T16:00","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"E. .career fair.2021-11-01T12:00.2021-11-01T17:00","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Kureans":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"## What is Duke?","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"Duke is a **task management tool** designed to help individuals keep track of their tasks. ","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"This **command-line based app** features a personal assistant, Lizzy, that you can interact with in order","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"to perform various actions.","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"## Setting Up","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"1. Ensure that you have Java 11 set up on your computer.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"2. Download the latest `ip.jar` file from [here.](https://github.com/Kureans/ip/releases/tag/A-Release)","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"3. Copy the file into any folder of your choice.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"4. Open a new terminal into the chosen folder, and execute `java -jar ip.jar` to run the program. If","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"successful, this should be what you see upon start-up:","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"Howdy! It\u0027s","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"      ___                   ___           ___           ___","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"     /\\__\\      ___        /\\  \\         /\\  \\         |\\__\\","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    /:/  /     /\\  \\       \\:\\  \\        \\:\\  \\        |:|  |","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"   /:/  /      \\:\\  \\       \\:\\  \\        \\:\\  \\       |:|  |","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"  /:/  /       /::\\__\\       \\:\\  \\        \\:\\  \\      |:|__|__","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":" /:/__/     __/:/\\/__/ _______\\:\\__\\ _______\\:\\__\\     /::::\\__\\","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":" \\:\\  \\    /\\/:/  /    \\::::::::/__/ \\::::::::/__/    /:/~~/~","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"  \\:\\  \\   \\::/__/      \\:\\~~\\~~      \\:\\~~\\~~       /:/  /","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"   \\:\\  \\   \\:\\__\\       \\:\\  \\        \\:\\  \\        \\/__/","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    \\:\\__\\   \\/__/        \\:\\__\\        \\:\\__\\","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"     \\/__/                 \\/__/         \\/__/","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"                      ____...---...___","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"___.....---\"\"\"                .                   \"\"--..____","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     .                  .            .","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":" .             _.--._       /|","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"        .    .\u0027()..()`.    / /","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"            ( `-.__.-\u0027 )  ( (    .","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"   .         \\        /    \\ \\","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"       .      \\      /      ) )        .","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            .\u0027 -.__.- `.-.-\u0027_.\u0027","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":" .        .\u0027  /-____-\\  `.-\u0027       .","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"          \\  /-.____.-\\  /-.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"           \\ \\`-.__.-\u0027/ /\\|\\|           .","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"          .\u0027  `.    .\u0027  `.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"          |/\\/\\|    |/\\/\\|","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"Hey! I\u0027m Lizzy the Lizard!","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"What can I do for you?","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"Shows a list of all tasks in your task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"Format: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"1.[T][ ] do laundry","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"2.[D][ ] complete assignment (by: Oct 01 2021 11:59 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"3.[E][ ] career fair (at: Nov 01 2021 12:00 PM to Nov 01 2021 05:00 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"### Adding a task: `todo`, `deadline`, `event`","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"In Duke, you can add 3 different types of tasks: Todos, Deadlines, and Events.","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"- ToDos: tasks without any date/time attached to it *e.g., visit new theme park*","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"- Deadlines: tasks that need to be done before a specific date/time *e.g., submit report by 11/10/2019 5pm*","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"- Events: tasks that start at a specific time and ends at a specific time *e.g., team project meeting on 2/10/2019 2-4pm*","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"#### Adding a Todo Task:","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"Format: `todo \u003cTASK\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"todo do laundry","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"[T][ ] do laundry","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"#### Adding a Deadline Task:","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"Format: `deadline \u003cTASK\u003e /by \u003cDATE_TIME\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"`\u003cDATE_TIME\u003e` must be in the exact format as specified (`dd/mm/yyyy hhmm`), or the task will","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"not be added.","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"deadline complete assignment /by 01/10/2021 2359","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"[D][ ] complete assignment (by: Oct 01 2021 11:59 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"#### Adding an Event Task:","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"Format: `event \u003cTASK\u003e /at \u003cSTART_DATE_TIME\u003e to \u003cEND_DATE_TIME\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"`\u003cSTART_DATE_TIME\u003e` `\u003cEND_DATE_TIME\u003e`and  must be in the exact format as specified (`dd/mm/yyyy hhmm`), or the task will","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"not be added.","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"event career fair /at 01/11/2021 1200 to 01/11/2021 1700","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"[E][ ] career fair (at: Nov 01 2021 12:00 PM to Nov 01 2021 05:00 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"### Mark a task as done: `done`","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"Marks a task as completed. This process is irreversible; trying to mark","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"a already completed task as done will bring up an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"Format: `done \u003cTASK_INDEX\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"`TASK_INDEX` refers to the index number of the task in the most recent list.","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"done 2","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"*If task is incomplete:*","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"[D][X] complete assignment (by: Oct 01 2021 11:59 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"*If task was already completed:*","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"Slow down there bud! You\u0027ve already completed this task!","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"### Delete a task: `delete`","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"Removes a task from the task list. This process is irreversible.","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"Format: `delete \u003cTASK_INDEX\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"`TASK_INDEX` refers to the index number of the task in the most recent list.","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"delete 2","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"[D][X] complete assignment (by: Oct 01 2021 11:59 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"### Find all tasks containing a keyword: `find`","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"Finds tasks whose description contains the given keyword.","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"Kureans"},"content":"Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"Kureans"},"content":"find career","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"Kureans"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"Kureans"},"content":"1.[E][ ] career fair (at: Nov 01 2021 12:00 PM to Nov 01 2021 05:00 PM)","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"### Exit the program: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"Kureans"},"content":"Exits Duke.","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"Kureans"},"content":"Format: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"Kureans"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"Kureans"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"Kureans"},"content":"### View list of commands: ","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"Kureans"},"content":"The list of commands is displayed whenever you type in an incorrect command.","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"Kureans"},"content":"Example Usage:","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"Kureans"},"content":"abcd","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"Kureans"},"content":"Outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"Kureans"},"content":"Sorry bud, but that command is gibberish to me. I can only read 8 words!","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"Kureans"},"content":"The eight words are:","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"Kureans"},"content":"done","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"Kureans"},"content":"delete","lastModifiedDate":"2021-09-25"},{"lineNumber":225,"author":{"gitId":"Kureans"},"content":"find","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"Kureans"},"content":"todo","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"Kureans"},"content":"deadline","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"Kureans"},"content":"event","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"Kureans"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":232,"author":{"gitId":"Kureans"},"content":"### Saving the data:","lastModifiedDate":"2021-09-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":234,"author":{"gitId":"Kureans"},"content":"The task list data is saved in the hard disk automatically after the execution","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"Kureans"},"content":"of any command that changes data, so there is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":237,"author":{"gitId":"Kureans"},"content":"## Command Summary","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":239,"author":{"gitId":"Kureans"},"content":"| Action       | Format + Examples                                                                                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":240,"author":{"gitId":"Kureans"},"content":"| :---         | :---                                                                                                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":241,"author":{"gitId":"Kureans"},"content":"| **List**     | `list`                                                                                                             |","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"Kureans"},"content":"| **Todo**     | `todo \u003cTASK_NAME\u003e`\u003cbr/\u003eeg., `todo do laundry`                                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"Kureans"},"content":"| **Deadline** | `deadline \u003cTASK_NAME\u003e /by \u003cDATE_TIME\u003e`\u003cbr/\u003eeg., `deadline complete assignment /by 01/10/2021 2359`                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"Kureans"},"content":"| **Event**    | `event \u003cTASK_NAME\u003e /at \u003cSTART_DATE_TIME\u003e \u003cEND_DATE_TIME\u003e`\u003cbr/\u003eeg., `event career fair /at 01/10/2021 1200 01/10/2021 1700` |","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"Kureans"},"content":"| **Done**     | `done \u003cTASK_INDEX\u003e`\u003cbr/\u003eeg., `done 1`                                                                             |","lastModifiedDate":"2021-09-25"},{"lineNumber":246,"author":{"gitId":"Kureans"},"content":"| **Find**     | `find \u003cKEYWORD\u003e`\u003cbr/\u003eeg., `find career`                                                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":247,"author":{"gitId":"Kureans"},"content":"| **Delete**   | `delete \u003cTASK_INDEX\u003e`\u003cbr/\u003eeg., `delete 2`                                                                         |","lastModifiedDate":"2021-09-25"},{"lineNumber":248,"author":{"gitId":"Kureans"},"content":"| **Exit**     | `bye` |","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"-":24,"Kureans":224}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"    private static final int TODO_DESCRIPTION_START_INDEX \u003d 5;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    private static final int DEADLINE_DESCRIPTION_START_INDEX \u003d 9;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    private static final int EVENT_DESCRIPTION_START_INDEX \u003d 6;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    private String line;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    private String taskType;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    public AddCommand(String line, String taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        this.line \u003d line;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    /**+","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"     * Executes command to add a task to the TaskList.","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        case \"T\":","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"            addNewTodoWithExceptionHandling(line, tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        case \"D\":","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            addNewDeadlineWithExceptionHandling(line, tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        case \"E\":","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"            addNewEventWithExceptionHandling(line, tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"     * Adds a new event task with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"     * @param line string containing user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"    private void addNewEventWithExceptionHandling(String line, TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"            tasks.addNewEvent(line.substring(EVENT_DESCRIPTION_START_INDEX));","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"            ui.printAddedTaskMessage(tasks.getLatestTask(), tasks.getTaskCount());","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"        } catch (EmptyDescriptionException | StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyDescriptionMessage(COMMAND_EVENT);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidFormatMessage(COMMAND_EVENT);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidDateTimeFormatMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"     * Adds a new deadline task with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"     * @param line string containing user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"    private void addNewDeadlineWithExceptionHandling(String line, TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Kureans"},"content":"            tasks.addNewDeadline(line.substring(DEADLINE_DESCRIPTION_START_INDEX));","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"            ui.printAddedTaskMessage(tasks.getLatestTask(), tasks.getTaskCount());","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"        } catch (EmptyDescriptionException | StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyDescriptionMessage(COMMAND_DEADLINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidFormatMessage(COMMAND_DEADLINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidDateTimeFormatMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"     * Adds a new todo task with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"     * @param line string containing user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"    private void addNewTodoWithExceptionHandling(String line, TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"            tasks.addNewTodo(line.substring(TODO_DESCRIPTION_START_INDEX));","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"            ui.printAddedTaskMessage(tasks.getLatestTask(), tasks.getTaskCount());","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"        } catch (EmptyDescriptionException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyDescriptionMessage(COMMAND_TODO);","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":102}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"     * Executes command that prints an exit message to the console.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"     * Checks if exit command is called.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"     * @return True if exit command is called. False otherwise.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"     * Abstract method that sub commands implement to execute user input commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    public abstract void executeCommand(TaskList tasks, LizUi ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"     * Checks if exit command is called.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"     * @return True if exit command is called. False otherwise.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    private String[] lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    public DeleteCommand(String[] lineArgs) {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"        this.lineArgs \u003d lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"     * Executes command that deletes a task off the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        deleteTaskWithExceptionHandling(lineArgs, tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"     * Deletes a specified task with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains delete command and delete index number.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    private void deleteTaskWithExceptionHandling(String[] lineArgs, TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"            tasks.deleteTask(tasks.getTaskList(), lineArgs, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyIndexAfterDeleteMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        } catch (InvalidIndexException | NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidDoneOrDeleteMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"            ui.printIndexOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"    private String[] lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    public DoneCommand(String[] lineArgs) {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"        this.lineArgs \u003d lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"     * Executes command that marks a task as done on the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        markAsDoneWithExceptionHandling(lineArgs, tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"     * Marks a specified task as done with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains done command and done index number.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    private void markAsDoneWithExceptionHandling(String[] lineArgs, TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"            tasks.markAsDone(tasks.getTaskList(), lineArgs, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyIndexAfterDoneMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"        } catch (InvalidIndexException | NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"            ui.printInvalidDoneOrDeleteMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"            ui.printIndexOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    private String[] lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    public FindCommand(String[] lineArgs) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"        this.lineArgs \u003d lineArgs;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"     * Execute command to find all tasks that match the given keyword in the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"        findMatchingTasksWithExceptionHandling(tasks, lineArgs, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     * Finds matching tasks with corresponding exception handling. Checked exceptions when caught, print","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"     * a corresponding error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains find command and keyword string.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"    private void findMatchingTasksWithExceptionHandling(TaskList tasks, String[] lineArgs, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTasks(tasks, lineArgs);","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"            ui.printTaskList(matchingTasks.size(), matchingTasks, true);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"            ui.printEmptyDescriptionMessage(COMMAND_FIND);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":45}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"     * Executes command that prints an invalid command notice message to the console.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"        ui.printInvalidCommandMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.program.LizUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.program.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"     * Executes command that prints out either the entire task list, or the task list of matching tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    public void executeCommand(TaskList tasks, LizUi ui) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"        ui.printTaskList(tasks.getTaskCount(), tasks.getTaskList(), false);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":18}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Kureans":4}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class InvalidFormatException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Kureans":4}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Kureans":4}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class TaskIndexOutOfBoundsException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Kureans":4}},{"path":"src/main/java/duke/program/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.program;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    private static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    private LizUi ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"     * Duke Constructor that loads in task data from the given file path.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"     * @param filePath file path of the save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"     * @param folderPath folder path of the save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    public Duke(String filePath, String folderPath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        storage \u003d new Storage(filePath, folderPath);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        ui \u003d new LizUi();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"            tasks \u003d new TaskList(storage.loadFile(ui));","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"            ui.printFileErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"     * Main method of Duke. Instantiates Duke and runs the main program.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"     * @param args not utilised here.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        new Duke(FILE_PATH, FOLDER_PATH).run();","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"     * Executes the main program of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"    public void run() {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"            try {","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"                String line \u003d ui.readCommand(in);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"                Command c \u003d parser.parseUserInput(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"                c.executeCommand(tasks, ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"                storage.saveFile(tasks.getTaskList(), ui);","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"                ui.printFileErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"            } finally {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"Kureans":63}},{"path":"src/main/java/duke/program/LizUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.program;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"public class LizUi {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    private static final int LINE_LENGTH \u003d 40;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_TODO \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    private static final String LIZTEXT \u003d \"      ___                   ___           ___           ___     \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"            \"     /\\\\__\\\\      ___        /\\\\  \\\\         /\\\\  \\\\         |\\\\__\\\\    \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"            \"    /:/  /     /\\\\  \\\\       \\\\:\\\\  \\\\        \\\\:\\\\  \\\\        |:|  |   \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"            \"   /:/  /      \\\\:\\\\  \\\\       \\\\:\\\\  \\\\        \\\\:\\\\  \\\\       |:|  |   \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"            \"  /:/  /       /::\\\\__\\\\       \\\\:\\\\  \\\\        \\\\:\\\\  \\\\      |:|__|__ \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"            \" /:/__/     __/:/\\\\/__/ _______\\\\:\\\\__\\\\ _______\\\\:\\\\__\\\\     /::::\\\\__\\\\\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"            \" \\\\:\\\\  \\\\    /\\\\/:/  /    \\\\::::::::/__/ \\\\::::::::/__/    /:/~~/~   \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"            \"  \\\\:\\\\  \\\\   \\\\::/__/      \\\\:\\\\~~\\\\~~      \\\\:\\\\~~\\\\~~       /:/  /     \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"            \"   \\\\:\\\\  \\\\   \\\\:\\\\__\\\\       \\\\:\\\\  \\\\        \\\\:\\\\  \\\\        \\\\/__/      \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"            \"    \\\\:\\\\__\\\\   \\\\/__/        \\\\:\\\\__\\\\        \\\\:\\\\__\\\\                  \\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"            \"     \\\\/__/                 \\\\/__/         \\\\/__/                  \\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    private static final String LIZLOGO \u003d \"                      ____...---...___\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"            \"___.....---\\\"\\\"\\\"                .                   \\\"\\\"--..____\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"            \"     .                  .            .\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"            \" .             _.--._       /|\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            \"        .    .\u0027()..()`.    / /\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"            \"            ( `-.__.-\u0027 )  ( (    .\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            \"   .         \\\\        /    \\\\ \\\\\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"            \"       .      \\\\      /      ) )        .\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"            \"            .\u0027 -.__.- `.-.-\u0027_.\u0027\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"            \" .        .\u0027  /-____-\\\\  `.-\u0027       .\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"            \"          \\\\  /-.____.-\\\\  /-.\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"            \"           \\\\ \\\\`-.__.-\u0027/ /\\\\|\\\\|           .\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"            \"          .\u0027  `.    .\u0027  `.\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"            \"          |/\\\\/\\\\|    |/\\\\/\\\\|\";","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"     * Helper function that prints a horizontal line between outputs for better readability.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"        for (int i \u003d 0; i \u003c LINE_LENGTH; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"     * Prints a greeting message.","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Howdy! It\u0027s\\n\" + LIZTEXT + LIZLOGO);","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Hey! I\u0027m Lizzy the Lizard!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"     * Prints an exit message.","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"     * Helper function that helps read user input and returns it as a string.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"     * @param in Scanner object to read user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"     * @return user input as a string.","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"    public static String readCommand(Scanner in) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"     * Prints out either the entire task list if list command is called, or only","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"     * matching tasks in the task list if the find command is called.","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"     * @param taskCount total number of tasks to be printed.","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"     * @param tasks array list of tasks to be printed.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"     * @param isFind boolean that determines whether method call was from a find command or not.","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"    public static void printTaskList(int taskCount, ArrayList\u003cTask\u003e tasks, boolean isFind) {","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"        if (isFind) {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"            String taskType \u003d tasks.get(i).getType();","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"            String taskStatus \u003d tasks.get(i).getStatusIcon();","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"            String taskDescription \u003d tasks.get(i).getDescription();","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"%d.\", i+1);","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"            printIndividualTask(tasks.get(i), taskType, taskStatus, taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"     * Helper function that prints out an individual task in the specified format.","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"     * @param task individual task object.","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"     * @param taskType type of task (todo, deadline or event).","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"     * @param taskStatus string character representing whether task is done. \"X\" is done, \" \" is not done.","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"     * @param taskDescription string description of the task.","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"    private static void printIndividualTask(Task task, String taskType, String taskStatus, String taskDescription) {","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"        if (taskType.equals(TASK_TYPE_ICON_TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][%s] %s%n\", taskType, taskStatus, taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"        } else if (taskType.equals(TASK_TYPE_ICON_DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"            LocalDateTime taskByTime \u003d task.getByDateTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"            String taskByTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(taskByTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][%s] %s (by: %s)%n\", taskType, taskStatus, taskDescription, taskByTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"        } else if (taskType.equals(TASK_TYPE_ICON_EVENT)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"            LocalDateTime taskStartTime \u003d task.getStartTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"            LocalDateTime taskEndTime \u003d task.getEndTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"            String taskStartTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(taskStartTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"            String taskEndTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(taskEndTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][%s] %s (at: %s to %s)%n\", taskType, taskStatus,","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"                    taskDescription, taskStartTimeString, taskEndTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"            printGenericErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"     * Prints a notice message after marking a task as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"     * @param task task to be marked as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"     * @param taskCount number of tasks currently in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"    public void printMarkAsDoneMessage(Task task, int taskCount) {","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"        String taskStatus \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"        printIndividualTask(task, taskType, taskStatus, taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"     * Prints a notice message after deleting a task.","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"     * @param taskCount number of tasks in the list after deletion.","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"    public void printDeletedTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"        String taskStatus \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"        printIndividualTask(task, taskType, taskStatus, taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"     * Prints a notice message after adding a new task.","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"     * @param taskCount number of tasks in the list after adding.","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"Kureans"},"content":"    public void printAddedTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"        if (taskType.equals(TASK_TYPE_ICON_TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][ ] %s%n\", taskType, taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"        } else if (taskType.equals(TASK_TYPE_ICON_DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"            LocalDateTime byTime \u003d task.getByDateTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"Kureans"},"content":"            String byTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(byTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][ ] %s (by: %s)%n\", taskType, taskDescription, byTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"        } else if (taskType.equals((TASK_TYPE_ICON_EVENT))) {","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"Kureans"},"content":"            LocalDateTime startTime \u003d task.getStartTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"Kureans"},"content":"            LocalDateTime endTime \u003d task.getEndTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"Kureans"},"content":"            String startTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(startTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"Kureans"},"content":"            String endTimeString \u003d DATE_TIME_FORMAT_OUTPUT.format(endTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"Kureans"},"content":"            System.out.printf(\"[%s][ ] %s (at: %s to %s)%n\", taskType, taskDescription,","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"                    startTimeString, endTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"Kureans"},"content":"            printGenericErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"Kureans"},"content":"    ///////////////////////////////","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"Kureans"},"content":"    //ALL ERROR MESSAGES GO BELOW//","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"Kureans"},"content":"    ///////////////////////////////","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"Kureans"},"content":"    public static void printFileErrorMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Hey bud, something went wrong with the file :/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"Kureans"},"content":"    public static void printIndexOutOfBoundsMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud, you can\u0027t check off/delete what is not yet there :/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"Kureans"},"content":"    public static void printInvalidDoneOrDeleteMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud, that\u0027s not a valid task number to check off/delete!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"Kureans"},"content":"    public static void printAlreadyDoneMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Slow down there bud! You\u0027ve already completed this task!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"Kureans"},"content":"    public static void printEmptyIndexAfterDoneMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Hey bud, the format for marking off a task is :done [index]\");","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"Kureans"},"content":"    public static void printEmptyIndexAfterDeleteMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Hey bud, the format for marking off a task is :delete [index]\");","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"Kureans"},"content":"    public static void printEmptyDescriptionMessage(String command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud! The description after \" + command + \" can\u0027t be blank!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"Kureans"},"content":"    public static void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud, but that command is gibberish to me. I can only read 8 words!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"The eight words are:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"Kureans"},"content":"        System.out.printf(\"list%ndone%ndelete%nfind%ntodo%ndeadline%nevent%nbye%n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"Kureans"},"content":"    public static void printInvalidFormatMessage(String command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"Kureans"},"content":"        String timeIndicatorCommand \u003d (command.equals(COMMAND_DEADLINE)) ? \"by\" : \"at\";","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud, but your formatting is gibberish to me. Here is how it should be formatted: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"Kureans"},"content":"        System.out.println(command + \" {description} /\" + timeIndicatorCommand + \" {timing}\");","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"Kureans"},"content":"    public static void printGenericErrorMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Oops! Something went wrong :(\");","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"Kureans"},"content":"    public void printInvalidDateTimeFormatMessage() {","lastModifiedDate":"2021-09-23"},{"lineNumber":244,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"Sorry bud, but that\u0027s an invalid date-time format! It should be as follows: \" +","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"Kureans"},"content":"                System.lineSeparator() + \"/by dd/mm/yyyy HHmm (for deadlines)\" + System.lineSeparator() +","lastModifiedDate":"2021-09-23"},{"lineNumber":246,"author":{"gitId":"Kureans"},"content":"                \"/at dd/mm/yyyy HHmm to dd/mm/yyyy HHmm (for events)\");","lastModifiedDate":"2021-09-23"},{"lineNumber":247,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":248}},{"path":"src/main/java/duke/program/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.program;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_TODO \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_SPACE \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"     * Parses user input into a command for execution.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"     * @param line full user input string.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"     * @return command based on given user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    public Command parseUserInput(String line) {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"        String[] lineArgs \u003d line.split(SEPARATOR_SPACE);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"        String command \u003d lineArgs[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            if (line.equals(COMMAND_BYE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_DONE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"                return new DoneCommand(lineArgs);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"                return new DeleteCommand(lineArgs);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"                return new AddCommand(line,TASK_TYPE_ICON_TODO);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"                return new AddCommand(line, TASK_TYPE_ICON_DEADLINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_EVENT)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"                return new AddCommand(line, TASK_TYPE_ICON_EVENT);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"            } else if (command.equals(COMMAND_FIND)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"                return new FindCommand(lineArgs);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"                return new InvalidCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":60}},{"path":"src/main/java/duke/program/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.program;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_DOT \u003d \".\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_DOT_WITH_ESCAPE \u003d \"\\\\.\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_TODO \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    private static final String TASK_TYPE_ICON_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    private static final String ICON_DONE \u003d \"X\";","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    private String filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    private String folderPath;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    public Storage(String filePath, String folderPath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"     * Loads tasks from file into memory when Duke is run.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object to print error messages when invalid task type is encountered.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"     * @return the ArrayList of task objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"     * @throws IOException if there is an error when loading the file.","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"    public ArrayList\u003cTask\u003e loadFile(LizUi ui) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"        //the mkdir and createNewFile methods will always be called regardless","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"        //if they already exist or not. This is because in the case that the folder/file","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"        //already exists, the methods have implicit checks that guard against duplicate creations.","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"        folder.mkdir();","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"        f.createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"            String[] taskArgs \u003d s.nextLine().split(SEPARATOR_DOT_WITH_ESCAPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"            String taskType \u003d taskArgs[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"            boolean taskStatus \u003d taskArgs[1].equals(ICON_DONE);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"            String taskDescription \u003d taskArgs[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"            if (taskType.equals(TASK_TYPE_ICON_TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"                tasks.add(new ToDo(taskDescription, taskStatus));","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"            } else if (taskType.equals(TASK_TYPE_ICON_DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"                String taskByTimeString \u003d taskArgs[3];","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"                LocalDateTime taskByTime \u003d LocalDateTime.parse(taskByTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"                tasks.add(new Deadline(taskDescription, taskByTime, taskStatus));","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"            } else if (taskType.equals(TASK_TYPE_ICON_EVENT)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"                String taskStartTimeString \u003d taskArgs[3];","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"                String taskEndTimeString \u003d taskArgs[4];","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"                LocalDateTime taskStartTime \u003d LocalDateTime.parse(taskStartTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"                LocalDateTime taskEndTime \u003d LocalDateTime.parse(taskEndTimeString);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"                tasks.add(new Event(taskDescription, taskStartTime, taskEndTime, taskStatus));","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"                ui.printGenericErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"        return tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"     * Saves the current task list into the specified file.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"     * @param tasks ArrayList of task objects in current task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object to print error messages when invalid task type is encountered.","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"     * @throws IOException if there is an error when writing to the file.","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks, LizUi ui) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"            String taskType \u003d tasks.get(i).getType();","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"            String taskStatus \u003d tasks.get(i).getStatusIcon();","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"            String taskDescription \u003d tasks.get(i).getDescription();","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"            if (taskType.equals(TASK_TYPE_ICON_TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"                fw.write(taskType + SEPARATOR_DOT + taskStatus + SEPARATOR_DOT + taskDescription);","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"            } else if (taskType.equals(TASK_TYPE_ICON_DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"                LocalDateTime byTime \u003d tasks.get(i).getByDateTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"                fw.write(taskType + SEPARATOR_DOT + taskStatus + SEPARATOR_DOT + taskDescription + SEPARATOR_DOT + byTime);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"            } else if (taskType.equals((TASK_TYPE_ICON_EVENT))) {","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"                LocalDateTime startTime \u003d tasks.get(i).getStartTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"                LocalDateTime endTime \u003d tasks.get(i).getEndTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"                fw.write(taskType + SEPARATOR_DOT + taskStatus + SEPARATOR_DOT + taskDescription + SEPARATOR_DOT","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"                        + startTime + SEPARATOR_DOT + endTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"                ui.printGenericErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"        fw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":109}},{"path":"src/main/java/duke/program/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.program;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_BY \u003d \"/by\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_AT \u003d \"/at\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_TO \u003d \"to\";","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    private static final String ICON_DONE \u003d \"X\";","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT_INPUT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    private static int taskCount;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"        this.taskCount \u003d tasks.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"     * Gets the latest task on the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"     * @return the latest task object.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"    public Task getLatestTask() {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        return tasks.get(taskCount-1);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"    public int getTaskCount() {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"        return taskCount;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"        return tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"     * Adds a new todo task to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"     * @param rawDescription String containing the task description.","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"     * @throws EmptyDescriptionException when description is left empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"    public void addNewTodo(String rawDescription)","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"            throws EmptyDescriptionException {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"        String description \u003d rawDescription.trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"        taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"     * Adds a new deadline task to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"     * @param descriptionAndTime String containing the task description and the due date/time.","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"     * @throws EmptyDescriptionException when description is left empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"     * @throws InvalidFormatException when due date/time is not written in the specified format.","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"    public void addNewDeadline(String descriptionAndTime)","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"            throws EmptyDescriptionException, InvalidFormatException, DateTimeParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"        String[] descriptionAndByTimeArray \u003d descriptionAndTime.split(SEPARATOR_BY);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"        String description \u003d descriptionAndByTimeArray[0].trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Kureans"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"        if (descriptionAndByTimeArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"        String byDateTimeString \u003d descriptionAndByTimeArray[1].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(byDateTimeString, DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"        tasks.add(new Deadline(description, byDateTime));","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"        taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"     * Adds a new event task to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"     * @param descriptionAndTime String containing the task description, the start date/time and end date/time.","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"     * @throws EmptyDescriptionException when description is left empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"     * @throws InvalidFormatException when due date/time is not written in the specified format.","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"    public void addNewEvent(String descriptionAndTime)","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"            throws EmptyDescriptionException, InvalidFormatException {","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"        String[] descriptionAndAtTimeArray \u003d descriptionAndTime.split(SEPARATOR_AT);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"        String description \u003d descriptionAndAtTimeArray[0].trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"        if (descriptionAndAtTimeArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"        String[] startAndEndTimeArray \u003d descriptionAndAtTimeArray[1].split(SEPARATOR_TO);","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"        String startTimeString \u003d startAndEndTimeArray[0].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"        String endTimeString \u003d startAndEndTimeArray[1].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(startTimeString, DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(endTimeString, DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"        tasks.add(new Event(description, startTime, endTime));","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"        taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"     * Marks a task as done on the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"     * @param tasks ArrayList of task objects in current task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains done command and done index number.","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object to print the marked as done notice message.","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"     * @throws InvalidIndexException when 2nd line argument cannot be parsed as integer.","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"     * @throws TaskIndexOutOfBoundsException when task index provided is out of range of the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"    public void markAsDone(ArrayList\u003cTask\u003e tasks, String[] lineArgs, LizUi ui)","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"            throws InvalidIndexException, TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"        if (lineArgs.length \u003e 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"        int doneIndex \u003d Integer.parseInt(lineArgs[1]) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"        if (doneIndex \u003e\u003d taskCount || doneIndex \u003c 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"            if (tasks.get(doneIndex).getStatusIcon().equals(ICON_DONE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"                ui.printAlreadyDoneMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"                tasks.get(doneIndex).setDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"                ui.printMarkAsDoneMessage(tasks.get(doneIndex), taskCount);","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"     * removes a task off the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"     * @param tasks ArrayList of task objects in current task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains delete command and delete index number.","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"     * @param ui ui object to print the deleted task notice message.","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"     * @throws InvalidIndexException when 2nd line argument cannot be parsed as integer.","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"     * @throws TaskIndexOutOfBoundsException when task index provided is out of range of the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"    public void deleteTask(ArrayList\u003cTask\u003e tasks, String[] lineArgs, LizUi ui)","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"            throws InvalidIndexException, TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"        if (lineArgs.length \u003e 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"        int deleteIndex \u003d Integer.parseInt(lineArgs[1]) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"        if (deleteIndex \u003e\u003d taskCount || deleteIndex \u003c 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"            //taskCount - 1 is passed as the taskCount parameter for printDeletedTaskMessage since","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"            //print method is called first before removing","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"            ui.printDeletedTaskMessage(tasks.get(deleteIndex), taskCount - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"            tasks.remove(deleteIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"        taskCount--;","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"     * Finds all tasks in the task list that contain the given keyword, and outputs an array containing","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"     * all matching tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"     * @param tasks ArrayList of task objects in current task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"     * @param lineArgs parsed array of line arguments. Contains find command and keyword string.","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"Kureans"},"content":"     * @return ArrayList of tasks that match the keyword.","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"Kureans"},"content":"     * @throws EmptyDescriptionException when no keyword is entered after find command.","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"Kureans"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(TaskList tasks, String[] lineArgs)","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"Kureans"},"content":"            throws EmptyDescriptionException {","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"Kureans"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"Kureans"},"content":"        String keyword \u003d lineArgs[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"        for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"Kureans"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"Kureans"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"        return matchingTasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Kureans":195}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    private String type;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    public Deadline(String description, LocalDateTime byDateTime, boolean isDone) {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        return byDateTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    public String getType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        return type;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Kureans":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    private String type;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime, boolean isDone) {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"        return startTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"        return endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    public String getType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        return type;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Kureans":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"     * Checks if a task is completed and returns a corresponding status icon.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"     * @return \"X\" if task is done, \" \" if task is not done.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"     * Getter for task subclasses that obtains the task type in the form of a task type icon.","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"     * @return \u0027T\u0027 for a todo task, \u0027D\u0027 for a deadline task, \u0027E\u0027 for an event task.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"    public String getType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"        return null;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getByDateTime() { return null; }","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getStartTime() { return null; }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"    public LocalDateTime getEndTime() { return null; }","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Kureans":48}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"    private String type;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    public String getType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"        return type;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Kureans":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"todo","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"todo sleep","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"deadline go to bed","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"deadline /by","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"deadline go to bed /by 10pm","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"deadline go to bed /by 01/10/2021 2200","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"done abc","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"done 1 2 3","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"event","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"event power nap","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"event /at","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"event power nap /at 01/11/2021 1715 to 01/11/2021 1730","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"done 4","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"done 3","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"gibberish","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Kureans":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java  ..\\src\\main\\java\\duke\\program\\*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"java -classpath ..\\bin duke.program.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Kureans":3}}]
