[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"Duke is a Personal Assistant Command Line Chatbot designed to help you manage your tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"* [Quick Start Guide](#Quick-Start-Guide)","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"* [Features](#Features)","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"* ","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"## Quick Start Guide","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"1. Ensure you have `Java 11` installed on your computer.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"2. Download the latest `duke.jar` file from [here](https://github.com/justinfidelis/ip/releases).","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"3. Move the file to the folder that you want to use as the Duke\u0027s root folder.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"4. Execute the `java -jar duke.jar` command in the terminal in the same folder as the `duke.jar` file to launch Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"5. Type the command into the terminal and press Enter to execute it.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"6. Refer to the [features](#Features) section below for details of each command","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"### Adding a new Todo","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"justinfidelis":16,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"        interactWithUser();","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * Starts Duke, repeatedly waits for and executes user commands until exit command is received.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        boolean isInteracting \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(Output.getStartMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"            storage.loadData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"            ui.printOutput(\"  \" + e.getMessage() + System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        while (isInteracting) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"            String userInput \u003d ui.readInput().stripLeading();","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"                command.execute(taskList, storage, ui);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"                isInteracting \u003d !command.isExit();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"                ui.printOutput(\"  \" + e.getMessage() + System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(Output.getExitMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"justinfidelis":35,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/duke/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class Output {","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private static final String SPACER \u003d \"  \";","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * Gets the Duke startup message.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing Duke startup message","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public static String getStartMessage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        String startMessage \u003d SPACER + \"Hello! I\u0027m Duke\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + \"How may I assist you\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        return startMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * Gets the help message containing a list of all Duke commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing a list of all Duke commands","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        String helpMessage \u003d \"Here is a list of commands:\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"todo [task name] - adds todo task to task manager\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"event [task name] /at [date] - adds event task to task manager\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"deadline [task name] /by [date] - adds deadline task to task manager\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"list - lists all tasks\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"done [task index] - marks the specified task as completed\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"delete [task index] - deletes the specified task\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + \"bye - close the application\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        return helpMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"     * Gets the Duke exit message.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing Duke exit message","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    public static String getExitMessage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"        String exitMessage \u003d SPACER + \"Goodbye! Hope to see you soon!\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        return exitMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"     * Gets the message indicating that a task has been successfully added.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"     * @param task       Task that was added","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"     * @param tasksCount the new number of Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the message that a task was added successfully","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"    public static String getAddTaskMessage(Task task, int tasksCount) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        String addTaskMessage \u003d SPACER + \"Ok! I\u0027ve added this task:\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + task + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + \"Now you have \" + tasksCount + \" tasks.\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        return addTaskMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"     * Gets the message indicating that a task was marked as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"     * @param task Task that was marked as completed","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the message that a task was marked as completed","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    public static String getCompleteTaskMessage(Task task) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        String completeTaskMessage \u003d SPACER + \"Ok! I\u0027ve marked this task as done:\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + task + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        return completeTaskMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * Gets the message indicating that a task was successfully deleted.","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     * @param removedTask the Task that was deleted","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * @param tasksCount  the new number of Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the message that a task was deleted successfully","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    public static String getDeleteTaskMessage(Task removedTask, int tasksCount) {","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"        String deleteTaskMessage \u003d SPACER + \"Ok! I\u0027ve deleted this task:\" + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + SPACER + removedTask + System.lineSeparator()","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"                + SPACER + \"Now you have \" + tasksCount + \" tasks.\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        return deleteTaskMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"     * Gets a message listing out all the Tasks whose names contain the keyword, together with their information.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"     * @param tasks   ArrayList containing the Tasks that matched the keyword","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * @param keyword String that was searched for in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the message listing out all Tasks and their information","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"    public static String getSearchedTaskListMessage(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        String taskListMessage \u003d SPACER + \"Here are your tasks that contain the keyword \\\"\" + keyword + \"\\\":\" + System.lineSeparator();","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"            taskListMessage +\u003d SPACER + SPACER + (i + 1) + \".\" + tasks.get(i) + System.lineSeparator();","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"        return taskListMessage;","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"     * Gets a message listing out all the Tasks and their information.","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"     * @param tasks ArrayList containing all the Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the message listing out all Tasks and their information","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"    public static String getTaskListMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"        String taskListMessage \u003d SPACER + \"Here are your tasks:\" + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"            taskListMessage +\u003d SPACER + SPACER + (i + 1) + \".\" + tasks.get(i) + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        return taskListMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"justinfidelis":117}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"public class Parser {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_MARK_DONE \u003d \"done\";","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String and returns the corresponding command to be executed","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput The String that contains the user\u0027s input","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * @return The corresponding Command based on the user\u0027s input","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String is not in the correct format or","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     *                       does not correspond to a valid command","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_HELP)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_MARK_DONE)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"            return parseDoneCommand(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"            return parseDeleteCommand(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"            return parseFindCommand(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_TODO)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseTodoTask(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_DEADLINE)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseDeadlineTask(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_EVENT)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseEventTask(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        throw new DukeException(\"Sorry, I do not understand your command.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     * Takes in a user input String corresponding to a DoneCommand and returns a DoneCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String corresponding to a DoneCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * @return a DoneCommand containing the information specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String does not contain a valid task index","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    private static DoneCommand parseDoneCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"            taskIndex \u003d Integer.parseInt(userInput.substring(5).strip()) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide a valid number.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please specify the index of the task.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        return new DoneCommand(taskIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * Takes in a user input String corresponding to a DeleteCommand and returns a DeleteCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     * containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String corresponding to a DeleteCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     * @return a DeleteCommand containing the information specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String does not contain a valid task index","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"    private static DeleteCommand parseDeleteCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"            taskIndex \u003d Integer.parseInt(userInput.substring(7).strip()) - 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide a valid number.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please specify the index of the task.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"     * Takes in a user input String corresponding to a FindCommand and returns a FindCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"     * containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String corresponding to a FindCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"     * @return a FindCommand containing the information specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String does not contain a keyword to search for","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"    private static FindCommand parseFindCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"            //if no space character after \"find\"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"            if (userInput.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please enter your search in the format \\\"find [keyword]\\\".\");","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"            keyword \u003d userInput.substring(5);","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please specify a keyword to search for.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String containing information for a ToDo and returns","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"     * a ToDo containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput the user input String that corresponds to a command to add","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"     *                  a ToDo","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"     * @return an Event that contains the details specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if the userInput String is not in the correct format","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"     *                       or has missing information","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"    private static ToDo parseTodoTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"            //if no space character after \"todo\"","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"            if (userInput.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please provide a todo in the format \\\"todo [task name]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"            //if task name is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"            String todoName \u003d userInput.substring(4).strip();","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"            if (todoName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a task name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"            return new ToDo(todoName);","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide a todo in the format \\\"todo [task name]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String containing information for a Deadline and returns","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"     * a Deadline containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput the user input String that corresponds to a command to add","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"     *                  a Deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"     * @return an Event that contains the details specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if the userInput String is not in the correct format","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"     *                       or has missing information","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"justinfidelis"},"content":"    private static Deadline parseDeadlineTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"justinfidelis"},"content":"            //if no space character after \"deadline\"","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"justinfidelis"},"content":"            if (userInput.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please provide a deadline in the format \\\"deadline [task name] /by [date]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"            int byIndex \u003d userInput.indexOf(\" /by \");","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"justinfidelis"},"content":"            //if \" /by \" separator is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please use the \\\" /by \\\" separator to separate the deadline name and date.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"            String deadlineName \u003d userInput.substring(8, byIndex).strip();","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"            //if task name is found","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"            if (deadlineName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a deadline name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"justinfidelis"},"content":"            String deadlineDateString \u003d userInput.substring(byIndex + 5).strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"            //if do by date is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"            if (deadlineDateString.equals(\"\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a do by date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"justinfidelis"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString, formatter);","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"            return new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide a deadline in the format \\\"deadline [task name] /by [date]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide the date in the format \\\"dd mm yyyy\\\", eg. \\\"12 02 2021\\\".\");","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":202,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String containing information for an Event and returns","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"     * an Event containing the specified information","lastModifiedDate":"2021-09-16"},{"lineNumber":205,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":206,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput the user input String that corresponds to a command to add","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"justinfidelis"},"content":"     *                  an Event","lastModifiedDate":"2021-09-16"},{"lineNumber":208,"author":{"gitId":"justinfidelis"},"content":"     * @return an Event that contains the details specified in userInput","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if the userInput String is not in the correct format","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"     *                       or has missing information","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":212,"author":{"gitId":"justinfidelis"},"content":"    private static Event parseEventTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":213,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"            //if no space character after \"event\"","lastModifiedDate":"2021-09-14"},{"lineNumber":215,"author":{"gitId":"justinfidelis"},"content":"            if (userInput.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-14"},{"lineNumber":216,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please provide an in the format \\\"event [task name] /at [date]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":217,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":218,"author":{"gitId":"justinfidelis"},"content":"            int atIndex \u003d userInput.indexOf(\" /at \");","lastModifiedDate":"2021-09-04"},{"lineNumber":219,"author":{"gitId":"justinfidelis"},"content":"            //if \" /at \" separator is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"            if (atIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please use the \\\" /at \\\" separator to separate the event name and date.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":222,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"            String eventName \u003d userInput.substring(5, atIndex).strip();","lastModifiedDate":"2021-09-14"},{"lineNumber":224,"author":{"gitId":"justinfidelis"},"content":"            //if task name is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":225,"author":{"gitId":"justinfidelis"},"content":"            if (eventName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":226,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify an event name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":227,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":228,"author":{"gitId":"justinfidelis"},"content":"            String eventDate \u003d userInput.substring(atIndex + 5).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":229,"author":{"gitId":"justinfidelis"},"content":"            //if event date is not found","lastModifiedDate":"2021-09-14"},{"lineNumber":230,"author":{"gitId":"justinfidelis"},"content":"            if (eventDate.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify an event date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"            return new Event(eventName, eventDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":235,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Please provide an in the format \\\"event [task name] /at [date]\\\".\");","lastModifiedDate":"2021-09-14"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":238}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import java.io.File;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"public class Storage {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private final String pathName \u003d \"data/data.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private final File file \u003d new File(pathName);","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for Storage class. Attempts to access data file,","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * creates a new data file if it is not found.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if unable to create or load data file","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to load data.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * Loads data from data file into taskList.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList TaskList where loaded data will be stored in.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if unable to open data.txt file","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    public void loadData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"                Task task \u003d readTask(scanner.nextLine());","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"            taskList.deleteAllTasks();","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"            saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(e.getMessage() + \" New data file created.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * Reads task information from taskList and stores it into data/data.txt file.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the TaskList to be stored.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if unable to save data.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"            FileWriter fw \u003d new FileWriter(pathName);","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"            fw.write(taskList.getStorageString());","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"            fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to save data.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"     * Creates a Task containing the information specified in string.","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     * @param storageLine String corresponding to a line that was read from storage file to be parsed into a Task.","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * @return Task containing the information stored in string.","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if information in data.txt is in the incorrect format.","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"    private Task readTask(String storageLine) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"            String[] words \u003d splitWords(storageLine);","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseTask(words);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"            markCompleted(words, task);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"            return task;","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to parse data file.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"     * Splits the given string using on the | character as a separator","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"     * @param storageLine line that was read from storage file to be parsed into a Task","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * @return Array of Strings after storageLine was split","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    private static String[] splitWords(String storageLine) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"        String[] words \u003d storageLine.split(\" \\\\| \");","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        return words;","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"     * Returns a Task corresponding to the values stored in words.","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"     * @param words String array containing the information of the Task","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"     * @return Task corresponding to the information in words","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException             if words contains invalid values","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"     * @throws IndexOutOfBoundsException if words is missing some Task information","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"    private static Task parseTask(String[] words) throws DukeException, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        switch (words[0]) {","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        case \"T\":","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"            return new ToDo(words[2]);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"        case \"E\":","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"            return new Event(words[2], words[3]);","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"        case \"D\":","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"            LocalDate byDate \u003d LocalDate.ofEpochDay(Long.parseLong(words[3]));","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"            return new Deadline(words[2], byDate);","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to parse data file.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"     * Sets the given Task as completed based on the values stored in words.","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"     * @param words String array containing the information of the Task","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"     * @param task  Task to be marked as read if indicated in words","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"     * @throws IndexOutOfBoundsException if words is missing some Task information","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    private static void markCompleted(String[] words, Task task) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"        if (words[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"            task.setCompleted();","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"justinfidelis":133}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class TaskList {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * Returns the number of Tasks in TaskList.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @return the number of Tasks in TaskList","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public int size() {","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     * Adds the task to the list of tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     * @return the Task that was deleted","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if taskIndex is \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task index must be greater than 0.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        return tasks.remove(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"     * Deletes all tasks in TaskList.","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAllTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     * Marks the task at the specified index as completed.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task to be marked as completed","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * @return the Task that was marked as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if taskIndex \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"    public Task completeTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task index must be greater than 0.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        tasks.get(taskIndex).setCompleted();","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     * Creates a String containing the task information for all Tasks in TaskList for printing to terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the task information for all Tasks in TaskList for printing to terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    public String getMessageString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"        return Output.getTaskListMessage(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     * Creates a String containing the task information for all Tasks in TaskList for storage","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the task information for all Tasks in TaskList, separated by lineSeparators","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        String storageString \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"            storageString \u003d storageString + task.getStorageString() + System.lineSeparator();","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"        return storageString;","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * Searches through the TaskList and returns Tasks whose name contains the given keyword,","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * i.e. keyword is a substring of the task\u0027s name","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     * @param keyword substring that will be searched for in the list of Tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * @return ArrayList containing the tasks that contain keyword as a substring","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"    private ArrayList\u003cTask\u003e searchTasks(String keyword) {","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"     * Creates a String containing the task information for all Tasks in TaskList that contain","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"     * the given keyword for printing to terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"     * @param keyword substring that will be searched for in the list of Tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the information of all Tasks containing the keyword","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"    public String getSearchedTasksMessage(String keyword) {","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d searchTasks(keyword);","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"        return Output.getSearchedTaskListMessage(filteredTasks, keyword);","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":119}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class Ui {","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    private static final String LINE \u003d \"  ────────────────────────────────────────────────\";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * Gets user input from terminal and returns it as a String.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * @return the String containing the user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public String readInput() {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String line;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        line \u003d inputScanner.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        return line;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * Prints the output message to the terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * @param outputMessage the output message to be printed","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    public void printOutput(String outputMessage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        System.out.print(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"justinfidelis":32}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Output;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    Task task \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for AddCommand, command to add task to taskList","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     * @param task the Task to be added to taskManager","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * Calls the addTask method in taskList to add the specified task","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that the task will be added to","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  the storage class that will store the updated TaskList","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if the maximum number of tasks has been reached","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d Output.getAddTaskMessage(task, taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * Returns if the command type is the exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @return boolean value of whether the command is the exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     * Abstract method that executes the command","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that will be modified (by most Command subclasses)","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @param ui The ui class instance that will print out the completion message (by most Command subclasses)","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException exception that will be thrown by some Command subclasses","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Output;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * Constructs a DeleteCommand to delete the task at the specified index","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task in taskList to be deleted","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * deletes the task at the specified index in taskList","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that contains the task to be marked","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  the storage class that will store the updated TaskList","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if taskIndex \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d Output.getDeleteTaskMessage(deletedTask, taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"justinfidelis":37}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Output;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * Constructs a DoneCommand to mark the task at the specified index as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task in taskList to be marked as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * Marks the task at the specified index in taskList as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that contains the task to be marked","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if taskIndex \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"        Task completedTask \u003d taskList.completeTask(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d Output.getCompleteTaskMessage(completedTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":36}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * Returns true as the Command type is exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @return true","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        return true;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * Does nothing","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private String keyword;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * Constructs a FindCommand to search for tasks that contain the given keyword","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     * @param keyword the keyword to be searched for in TaskList","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * Searches for Tasks in taskList that contain the keyword and lists them in the terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that will be searched through and read","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d taskList.getSearchedTasksMessage(keyword);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"justinfidelis":31}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Output;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * Prints out the help message detailing possible user commands","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d Output.getHelpMessage();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"justinfidelis":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     * Lists out the Tasks in taskList to the terminal","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that will be read","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @param storage  not used in this subclass implementation","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     * @param ui       the ui class instance that will print out the completion message","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String outputMessage \u003d taskList.getMessageString();","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(outputMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":20}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yy\");","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private LocalDate byDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public Deadline(String taskName, LocalDate byDate) {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + byDate.format(formatter) + \")\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"        return \"D | \" + c + \" | \" + taskName + \" | \" + byDate.toEpochDay();","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    private String atDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public Event(String taskName, String atDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(at: \" + atDate + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        return \"E | \" + c + \" | \" + taskName + \" | \" + atDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for Task, task is marked as not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * @param taskName the String containing the name of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        this.taskName \u003d taskName.replace(\"|\",\"\");","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"     * Marks task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * Returns task name as String.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @return the String of the task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        return taskName;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @return the Boolean of whether the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        return isCompleted;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"     * Creates a description of the task containing whether it has been completed and its name.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"     * @return a String describing the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        String checkbox \u003d isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        return checkbox + \" \" + taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     * Creates a String containing the Task information for storage.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * @return a String describing the task for storage.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        return \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"justinfidelis":60}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":5}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        return \"T | \" + c + \" | \" + taskName;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"deadline ","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"deadline submit report","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"deadline submit report /by","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"deadline submit report /by tuesday","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"deadline submit report /by 21 09 2021","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"deadline return book /by 25 0 2021","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"deadline return book /by 25 10 2021","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"done","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"done 2","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"todo buy groceries","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"eventlunch","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"event lunch","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"event /at ","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"event lunch /at ","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"event lunch /at Thursday noon","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"done a","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"done 4","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"event dinner /at Friday 6pm","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"done 4","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"delete 4","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"delete 4","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"done 2","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"todo read book","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"find book","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"find","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"find re","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"invalid","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"REM delete data file from previous runs","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"if exist data\\data.txt del data\\data.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinfidelis":5,"-":19}}]
