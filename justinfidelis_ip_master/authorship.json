[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"        printStartMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        interactWithUser();","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * Prints the Duke application logo in the terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public static void printAppLogo() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     * Prints a horizontal line in the terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    private static void printLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  ──────────────────────────────\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"     * Prints the application start message in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    public static void printStartMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  Hello! I\u0027m Duke\\n  How may I assist you\");","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"     * Prints the application exit message in the terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  Goodbye! Hope to see you soon!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"     * Gets user input and returns it as a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     * @return the String containing the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    public static String getUserInput(Scanner in) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        String line;","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        return line;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"     * Starts Duke, repeatedly waits for and executes user commands until exit command is received.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        boolean isInteracting \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"            storage.loadData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"            printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"            System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"            printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        while (isInteracting) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"            String userInput \u003d getUserInput(in).stripLeading();","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"                command.execute(taskList, storage);","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"                isInteracting \u003d !command.isExit();","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"                printLine();","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"                System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"                printLine();","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        printExitMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"justinfidelis":82,"-":10}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"public class Parser {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_MARK_DONE \u003d \"done\";","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_NEW_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String and returns the corresponding command to be executed","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput The String that contains the user\u0027s input","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     * @return The corresponding Command based on the user\u0027s input","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String is not in the correct format or","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"     *                       does not correspond to a valid command","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_MARK_DONE)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            int taskIndex \u003d -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"                taskIndex \u003d Integer.parseInt(userInput.substring(5).strip()) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please provide a valid number.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify the index of the task.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"            return new DoneCommand(taskIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"            int taskIndex \u003d -1;","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"                taskIndex \u003d Integer.parseInt(userInput.substring(7).strip()) - 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please provide a valid number.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify the index of the task.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_TODO)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseTask(userInput, TaskType.TODO);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_DEADLINE)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseTask(userInput, TaskType.DEADLINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_NEW_EVENT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d parseTask(userInput, TaskType.EVENT);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        throw new DukeException(\"Sorry, I do not understand your command.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * Takes in the userInput String and returns a Task that is to be added to taskManager","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput The String that contains the user\u0027s input, must correspond to a","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     *                  command that creates a Task","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * @param taskType  The Enum TaskType that specifies the Task subclass to be created","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * @return The Task that contains the details specified in userInput","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the userInput String is not in the correct format","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     *                       or has missing information","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    private static Task parseTask(String userInput, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"        case TODO:","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"                String todoName \u003d userInput.substring(5).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"                if (todoName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"                    throw new DukeException(\"Please specify a task name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"                return new ToDo(todoName);","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a task name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"            int byIndex \u003d userInput.indexOf(\" /by \");","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a do by date by using the \\\" /by \\\" separator.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"            String deadlineName \u003d userInput.substring(9, byIndex).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"            if (deadlineName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a deadline name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"            String deadlineDate \u003d userInput.substring(byIndex + 5).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"            if (deadlineDate.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify a do by date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"            return new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"        case EVENT:","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"            int atIndex \u003d userInput.indexOf(\" /at \");","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"            if (atIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify an event date by using the \\\" /at \\\" separator.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"            String eventName \u003d userInput.substring(6, atIndex).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"            if (eventName.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify an event name.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"            String eventDate \u003d userInput.substring(atIndex + 5).strip();","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"            if (eventDate.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Please specify an event date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"            return new Event(eventName, eventDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import java.io.File;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"public class Storage {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    private final String pathName \u003d \"data/data.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private final File file \u003d new File(pathName);","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to load data.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * Loads data from data file into taskList.","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList TaskList where loaded data will be stored in.","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if unable to open data.txt file","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    public void loadData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"                Task task \u003d readTask(scanner.nextLine());","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"                taskList.addTask(task, false);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            taskList.deleteAllTasks();","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(e.getMessage() + \" New data file created.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"     * Reads task information from taskList and stores it into data/data.txt file.","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the TaskList to be stored.","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if unable to save data.","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"            FileWriter fw \u003d new FileWriter(pathName);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"            fw.write(taskList.getStorageString());","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"            fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to save data.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"     * Creates a Task containing the information specified in string.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"     * @param string String to be read from storage to be parsed into a Task.","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"     * @return Task containing the information stored in string.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException if information in data.txt is in the incorrect format.","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    private Task readTask(String string) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"            Task task \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"            String[] words \u003d string.split(\" \\\\| \");","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"            switch (words[0]) {","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"            case \"T\":","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"                task \u003d new ToDo(words[2]);","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"            case \"E\":","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"                task \u003d new Event(words[2], words[3]);","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"            case \"D\":","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"                task \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            default:","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"                throw new DukeException(\"Error: Unable to parse data file.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"            if (words[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"                task.setCompleted();","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"            return task;","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Error: Unable to parse data file.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"justinfidelis":95}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class TaskList {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        addTask(task, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     * Adds a task to the list of tasks, prints completion message if specified","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @param doesPrint Boolean determining whether completion message will be printed","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    public void addTask(Task task, boolean doesPrint) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        if (doesPrint) {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"            printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"            System.out.println(\"  Ok! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"            System.out.println(\"    \" + task);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"            System.out.println(\"  Now you have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"            printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * Deletes the task at the specified index","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003c\u003d -1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task index must be greater than 0.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"        } else if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        System.out.print(\"  Ok! I\u0027ve deleted this task:\" + System.lineSeparator() + \"    \");","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  Now you have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * Deletes all tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAllTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"     * Prints a list of all the tasks in the taskManager","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  Here are your tasks:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"            System.out.print(\"    \" + (i + 1) + \".\");","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     * Marks the task at the specified index as completed","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex the index of the task to be marked as completed","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    public void completeTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"        if (taskIndex \u003c\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task index must be greater than 0.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        } else if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        tasks.get(taskIndex).setCompleted();","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"        System.out.print(\"  Ok! I\u0027ve marked this task as done:\" + System.lineSeparator() + \"    \");","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * Creates a string containing the task information for all Tasks in TaskList","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     * @return string containing the task information for all Tasks in TaskList, separated by lineSeparators","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        String storageString \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"            storageString \u003d storageString + task.getStorageString() + System.lineSeparator();","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        return storageString;","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"     * Prints a horizontal line in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    private static void printLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(\"  ──────────────────────────────\");","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":111}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    Task task \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for AddCommand, command to add task to taskManager","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     * @param task the Task to be added to taskManager","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * Calls the addTask method in taskManager to add the specified task","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList The taskManager that the task will be added to","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If the maximum number of tasks has been reached","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     * Returns if the command type is the exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @return boolean value of whether the command is the exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"     * Abstract method that executes the command","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskManager that will be modified (by most Command subclasses)","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException exception that will be thrown by some Command subclasses","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    public abstract void execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"     * Calls the deleteTask method in taskList to delete the task at the specified index","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskList that contains the task to be marked","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If taskIndex \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"justinfidelis":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for DoneCommand, command to mark the task at the specified index as completed","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     * @param taskIndex The index of the task in taskManager to be marked as completed","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * Calls the completeTask method in taskManager to mark the task at the specified index as completed","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList the taskManager that contains the task to be marked","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     * @throws DukeException If taskIndex \u003c 0 or if there is no task at the specified index","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        taskList.completeTask(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     * Returns true as the Command type is exitCommand","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @return true","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        return true;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     * Does nothing","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList Does not matter in this subclass implementation","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     * Calls the printTasks method in taskManager to list out its Tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @param taskList The taskManager that will be read","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        taskList.printTasks();","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"justinfidelis":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    private String byDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public Deadline(String taskName, String byDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + byDate + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        return \"D | \" + c + \" | \" + taskName + \" | \" + byDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":21}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    private String atDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public Event(String taskName, String atDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(at: \" + atDate + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        return \"E | \" + c + \" | \" + taskName + \" | \" + atDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"     * Constructor for Task, task is marked as not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     * @param taskName the String containing the name of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"     * Marks task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     * Returns task name as String.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @return the String of the task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        return taskName;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @return the Boolean of whether the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        return isCompleted;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"     * Creates a description of the task containing whether it has been completed and its name.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"     * @return a String describing the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        String checkbox \u003d isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        return checkbox + \" \" + taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     * Creates a String containing the Task information for storage.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * @return a String describing the task for storage.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        return \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"justinfidelis":60}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":5}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        String c \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        return \"T | \" + c + \" | \" + taskName;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"deadline submit report","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"deadline submit report /by ","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"deadline submit report /by Tuesday 23:59","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"done 2","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"todo buy groceries","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"event lunch","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"event lunch /at ","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"event lunch /at Thursday noon","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"done a","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"done 4","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"event dinner /at Friday 6pm","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"done 4","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"delete 4","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"delete 4","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"done 2","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"todo read book","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"invalid","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"justinfidelis":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"REM delete data file from previous runs","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"if exist data\\data.txt del data\\data.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinfidelis":5,"-":19}}]
