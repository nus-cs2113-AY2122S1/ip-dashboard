[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"# main.Duke project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"3. After that, locate the `src/main/java/main.Duke.java` file, right-click it, and choose `Run main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ptejasv":2,"-":22}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"    private String taskType;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"    private String taskName;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"    private String date;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"     * Constructor to create an add command with a type, task name and either a \"by\" or \"at\" date","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"     * @param taskType either \"todo\", \"deadline\" or \"event\"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"     * @param taskName the description of the task without the date","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"     * @param date the \"by\" or \"at\" date","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"    public AddCommand(String taskType, String taskName, String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"     * Constructor to create an add command only for todo type tasks, which initialises an empty \"by\" or \"at\" date","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"     * @param taskType the type of task created, \"todo\"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"     * @param taskName the description of the task","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"    public AddCommand(String taskType, String taskName) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"        this(taskType, taskName, \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ptejasv"},"content":"     * Utilises the TaskManager object to add a task to the full list of tasks on taro. Specifics of the task type","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"     * based on todo, deadline and event are handled by the TaskManager object.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"     * @param taskManager the TaskManager type object used to handle internal task related operations","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"     * @param ui the UI type object used to handle i/o for taro","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"            Task newTask \u003d taskManager.addTask(taskType, taskName, date);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"            ui.printTaskAddedMessage(newTask, taskManager.getTaskCount());","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"            ui.printString(\"there was an issue writing your new task to saved data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":53}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"    public abstract void execute(TaskManager taskManager, UI ui);","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":10}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"       try {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"            Task deletedTask \u003d taskManager.deleteTask(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"            ui.printTaskDeletedMessage(deletedTask, taskManager.getTaskCount());","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"           ui.printString(\"there was an error while deleting that task in memory\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"       }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"ptejasv":26}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"    private int taskIndex;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     * Initialises the done command so that the index of the task based on zero-based numbering is taskIndex - 1","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"     * @param taskIndex the index of the task to be marked done as seen from the \"list\" command\u0027s printed output","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"     * Uses the TaskManager object to mark the task as done internally, and then prints a message using the UI object","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"     * to let the user know the task is marked done.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"     * @param taskManager the TaskManager type object used to handle internal task related operations","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"     * @param ui the UI type object used to handle i/o for taro","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"            Task doneTask \u003d taskManager.markAsDone(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"            ui.printMarkedDoneMessage(doneTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"            ui.printString(\"there was an error while marking that task as done.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":37}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     * Exits the programme after printing an exit message","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     * @param taskManager the TaskManager type object used to handle internal task related operations","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * @param ui the UI type object used to handle i/o for taro","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":19}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     * Uses the UI object to print a list of all tasks stored by taro","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     * @param taskManager the TaskManager type object used to handle internal task related operations","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * @param ui the UI type object used to handle i/o for taro","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"        ui.printTasksList(taskManager.getTasks(), taskManager.getTaskCount());","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":18}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":" * Represent exceptions specific to duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"    String message;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"        return message;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":17}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package main;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"    private final UI ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"    private File dataFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"    private static final String ROOT_DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"    private static final String DATA_FILE \u003d \"taro.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    public static final Path DATA_FILE_PATH \u003d Paths.get(ROOT_DIR, \"src\", DATA_DIR, DATA_FILE);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"     * Constructor for main.Duke (renamed to taro) that initializes the key properties","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"        new Duke().startDuke();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"     * Greets the user by showing the logo and prepares to take user input to perform commands","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"    private void startDuke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"        ui.printLogo();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"        ui.greetUser();","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"        getDataFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"        handleCommands();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ptejasv"},"content":"     * Handles the main functionality of duke by using the ui object to read from standard input and then pass the","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"ptejasv"},"content":"     * input to the parser to return an executable command object. After the command is executed, the user can enter","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"ptejasv"},"content":"     * more commands until \"bye\" is entered. An invalid command prints an error message to standard output.","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ptejasv"},"content":"    private void handleCommands() {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ptejasv"},"content":"        while (true) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ptejasv"},"content":"            String userInput \u003d ui.readUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ptejasv"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ptejasv"},"content":"                Command currentCommand \u003d parser.parseInput(userInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"ptejasv"},"content":"                currentCommand.execute(taskManager, ui);","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"ptejasv"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"ptejasv"},"content":"                ui.printString(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ptejasv"},"content":"    private void getDataFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ptejasv"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ptejasv"},"content":"            dataFile \u003d new File(String.valueOf(DATA_FILE_PATH));","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ptejasv"},"content":"            if (!dataFile.createNewFile()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ptejasv"},"content":"                try {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ptejasv"},"content":"                    taskManager.loadFileContent(dataFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ptejasv"},"content":"                    ui.printString(\"your saved data has been loaded\");","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ptejasv"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ptejasv"},"content":"                    ui.printString(\"there was an error retrieving your saved data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ptejasv"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ptejasv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"ptejasv"},"content":"            ui.printString(\"there was an error retrieving your saved data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ptejasv":80,"-":3}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"import command.*;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import ui.UI;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"public class Parser {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"    private static final int DATE_BUFFER \u003d 3;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"    public static final String PREFIX_BY \u003d \"/by\";","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    public static final String PREFIX_AT \u003d \"/at\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"    public static final String ERROR_MISSING_PARAM_MESSAGE \u003d \"the description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    public static final String ERROR_INVALID_COMMAND_MESSAGE \u003d \"sorry, I didn\u0027t understand that command\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"     * Parses raw user input passed into commands to execute and if possible, date and description format for","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"     * deadlines and events.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"     * @param userInput raw user input from standard input","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"     * @return executable type Command object","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"     * @throws DukeException error for either an invalid command or missing parameters for a todo task","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"    public Command parseInput(String userInput) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"        int positionOfSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"        String commandWord \u003d positionOfSpace \u003e 0 ? userInput.substring(0, positionOfSpace).strip() : userInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"        switch(commandWord) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"            return parseAddCommand(commandWord, userInput.substring(positionOfSpace + 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"            int doneIndex \u003d Integer.parseInt(userInput.substring(positionOfSpace + 1)) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"            return new DoneCommand(doneIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"            int deleteIndex \u003d Integer.parseInt(userInput.substring(positionOfSpace + 1)) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"            throw new DukeException(ERROR_INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ptejasv"},"content":"     * Filters either todo, deadline or event commands to determine the task to be added and if required, the date","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ptejasv"},"content":"     * needed for the deadline or event to create an AddCommand object.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ptejasv"},"content":"     * @param commandWord one of: \"todo\", \"deadline\" or \"event\", used to determine what type of task is to be added","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ptejasv"},"content":"     * @param taskDescription the full description of the task, including (if any) a date","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ptejasv"},"content":"     * @return the executable AddCommand with relevant fields configured","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"ptejasv"},"content":"     * @throws DukeException error for either missing description for todo command or an invalid command","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"ptejasv"},"content":"    private AddCommand parseAddCommand(String commandWord, String taskDescription) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"ptejasv"},"content":"        String taskName;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ptejasv"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"ptejasv"},"content":"            if (taskDescription.equals(COMMAND_TODO)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"ptejasv"},"content":"                throw new DukeException(ERROR_MISSING_PARAM_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"ptejasv"},"content":"            taskName \u003d taskDescription;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"ptejasv"},"content":"            return new AddCommand(COMMAND_TODO, taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ptejasv"},"content":"            String deadlineDate \u003d taskDescription.substring(taskDescription.indexOf(PREFIX_BY) + DATE_BUFFER).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"ptejasv"},"content":"            taskName \u003d taskDescription.substring(0, taskDescription.indexOf(PREFIX_BY)).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"ptejasv"},"content":"            return new AddCommand(COMMAND_DEADLINE, taskName, deadlineDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"ptejasv"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"ptejasv"},"content":"            String eventDate \u003d taskDescription.substring(taskDescription.indexOf(PREFIX_AT) + DATE_BUFFER).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"ptejasv"},"content":"            taskName \u003d taskDescription.substring(0, taskDescription.indexOf(PREFIX_AT)).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"ptejasv"},"content":"            return new AddCommand(COMMAND_EVENT, taskName, eventDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"ptejasv"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"ptejasv"},"content":"            throw new DukeException(ERROR_INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ptejasv":85}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"    private String by;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"     * Creates a new task.Task object to be stored in taro\u0027s list of Tasks,","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"     * sets the name of the task as the name passed in by the user and","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     * marks the task as incomplete","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     * @param description the name of the task to be created","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * @param by the date or time by the task is to be done","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ptejasv":23}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"    String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"     * Creates a new task.Task object to be stored in taro\u0027s list of Tasks,","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"     * sets the name of the task as the name passed in by the user and","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     * marks the task as incomplete","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     * @param description the name of the task to be created","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * @param at the date or time of the event","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ptejasv":23}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"     * Creates a new task.Task object to be stored in taro\u0027s list of Tasks,","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     * sets the name of the task as the name passed in by the user and","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     * marks the task as incomplete","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * @param description the name of the task to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"     * Returns the icon to be printed while listing out tasks stored by main.Duke","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"     * Done tasks are denoted by X","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"     * @return the icon to be used while listing tasks on main.Duke to standard output","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ptejasv":50}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import main.Duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"    private static final String TODO_INDICATOR \u003d \"T\";","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"    private static final String DEADLINE_INDICATOR \u003d \"D\";","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    private static final String EVENT_INDICATOR \u003d \"E\";","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"    private static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"    private File dataFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"        return tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"    public int getTaskCount() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"     * Adds a new task to the full list of tasks stored by taro based on whether it is a todo, deadline or event.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"     * Increments the total count of tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"     * @param taskName the description of the task to be added as specified by the user","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"     * @param date the date or time (either deadline or event date) to be attached to the task","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ptejasv"},"content":"     * @param taskType either \"deadline\" or \"event\", used to indicate whether the task is a deadline or event","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"     * @return the task.Task instance that has been added","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"    public Task addTask(String taskType, String taskName, String date) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"        switch(taskType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"        case Parser.COMMAND_TODO:","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"            newTask \u003d new Todo(taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"            writeAddTask(taskName);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"        case Parser.COMMAND_DEADLINE:","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"            newTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ptejasv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"ptejasv"},"content":"            writeAddTask(DEADLINE_INDICATOR, taskName, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ptejasv"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ptejasv"},"content":"        case Parser.COMMAND_EVENT:","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ptejasv"},"content":"            newTask \u003d new Event(taskName, date);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ptejasv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"ptejasv"},"content":"            writeAddTask(EVENT_INDICATOR, taskName, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ptejasv"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ptejasv"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ptejasv"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ptejasv"},"content":"        return newTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ptejasv"},"content":"     * Marks the task at taskIndex in the list as done","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"ptejasv"},"content":"     * @param taskIndex the (index + 1) of the task to be marked done in tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ptejasv"},"content":"    public Task markAsDone(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ptejasv"},"content":"        Task doneTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"ptejasv"},"content":"        doneTask.setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"ptejasv"},"content":"        writeDoneTask(taskIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ptejasv"},"content":"        return doneTask;","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"ptejasv"},"content":"    public Task deleteTask(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ptejasv"},"content":"        Task toDelete \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"ptejasv"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"ptejasv"},"content":"        writeDeleteTask(taskIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ptejasv"},"content":"        return toDelete;","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ptejasv"},"content":"    public void loadFileContent(File dataFile) throws FileNotFoundException {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ptejasv"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ptejasv"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ptejasv"},"content":"            String[] allItems \u003d scanner.nextLine().trim().split(\"\\\\s*[|]\\\\s*\", 0);","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ptejasv"},"content":"            switch (allItems[0]) {","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ptejasv"},"content":"            case TODO_INDICATOR:","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"ptejasv"},"content":"                tasks.add(new Todo(allItems[2]));","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ptejasv"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ptejasv"},"content":"            case DEADLINE_INDICATOR:","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ptejasv"},"content":"                tasks.add(new Deadline(allItems[2], allItems[3]));","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"ptejasv"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"ptejasv"},"content":"            case EVENT_INDICATOR:","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ptejasv"},"content":"                tasks.add(new Event(allItems[2], allItems[3]));","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ptejasv"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"ptejasv"},"content":"            default:","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"ptejasv"},"content":"                return;","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"ptejasv"},"content":"            if (Integer.parseInt(allItems[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"ptejasv"},"content":"                tasks.get(tasks.size() - 1).setDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"ptejasv"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"ptejasv"},"content":"    private void writeAddTask(String taskDesc) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"ptejasv"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(Duke.DATA_FILE_PATH), true);","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"ptejasv"},"content":"        fw.write(\"\\n\" + TaskManager.TODO_INDICATOR + SEPARATOR + \"0\" + SEPARATOR + taskDesc);","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"ptejasv"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"ptejasv"},"content":"    private void writeAddTask(String taskType, String taskDesc, String date) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"ptejasv"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(Duke.DATA_FILE_PATH), true);","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"ptejasv"},"content":"        fw.write(\"\\n\" + taskType + SEPARATOR + \"0\" + SEPARATOR + taskDesc + SEPARATOR + date);","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"ptejasv"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"ptejasv"},"content":"    private void writeDoneTask(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"ptejasv"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"ptejasv"},"content":"        String newText \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ptejasv"},"content":"        int indexScanner \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"ptejasv"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ptejasv"},"content":"            if (indexScanner \u003d\u003d taskIndex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ptejasv"},"content":"                newText +\u003d scanner.nextLine().replace(\"0\", \"1\") + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"ptejasv"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"ptejasv"},"content":"                newText +\u003d scanner.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"ptejasv"},"content":"            indexScanner++;","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"ptejasv"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(Duke.DATA_FILE_PATH), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"ptejasv"},"content":"        fw.write(newText);","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"ptejasv"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"ptejasv"},"content":"    private void writeDeleteTask(int taskIndex) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"ptejasv"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"ptejasv"},"content":"        String newText \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"ptejasv"},"content":"        int indexScanner \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"ptejasv"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"ptejasv"},"content":"            if (indexScanner \u003d\u003d taskIndex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"ptejasv"},"content":"                scanner.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"ptejasv"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"ptejasv"},"content":"                newText +\u003d scanner.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"ptejasv"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"ptejasv"},"content":"            indexScanner++;","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"ptejasv"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(Duke.DATA_FILE_PATH), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"ptejasv"},"content":"        fw.write(newText);","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"ptejasv"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ptejasv":157}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"     * Creates a new task.Task object to be stored in taro\u0027s list of Tasks,","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"     * sets the name of the task as the name passed in by the user and","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"     * marks the task as incomplete","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"     * @param description the name of the task to be created","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ptejasv":20}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ptejasv"},"content":"package ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ptejasv"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ptejasv"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"ptejasv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"ptejasv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ptejasv"},"content":"public class UI {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ptejasv"},"content":"    private static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ptejasv"},"content":"     * Formats and prints strings to standard output","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ptejasv"},"content":"     * @param response taro\u0027s response to be printed out","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ptejasv"},"content":"    public void printString(String response) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\" \" + response);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ptejasv"},"content":"     * Prints taro logo to the standard output with a greeting","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ptejasv"},"content":"    public void printLogo() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ptejasv"},"content":"        String logo \u003d \" _                       \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ptejasv"},"content":"                \"| |_   ____   ____  ___  \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ptejasv"},"content":"                \"|  _) / _  | / ___)/ _ \\\\ \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ptejasv"},"content":"                \"| |__( ( | || |   | |_| |\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ptejasv"},"content":"                \" \\\\___)\\\\_||_||_|    \\\\___/ \";","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\"greetings from\\n\" + logo);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ptejasv"},"content":"     * Prints a greeting to standard output","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ptejasv"},"content":"    public void greetUser() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ptejasv"},"content":"        printString(\"hello! I\u0027m taro\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ptejasv"},"content":"                \" how can I help you?\");","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ptejasv"},"content":"     * Reads in user input","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ptejasv"},"content":"     * @return a String containing the raw user input","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ptejasv"},"content":"    public String readUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ptejasv"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ptejasv"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ptejasv"},"content":"     * Acknowledge that a task has been added to the list by printing out the task details","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ptejasv"},"content":"     * @param task the task.Task object that has been added to the list","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ptejasv"},"content":"     * @param taskCount the total number of tasks stored by taro","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ptejasv"},"content":"    public void printTaskAddedMessage(Task task, int taskCount) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\" okay! I have added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\" now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ptejasv"},"content":"     * Prints out a list of all tasks stored by taro, with an indication of whether the task is a todo item, a","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"ptejasv"},"content":"     * deadline or an event and if it has been completed or not","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ptejasv"},"content":"     * @param tasks the list of tasks stored by taro","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"ptejasv"},"content":"     * @param taskCount the total number of tasks on the list","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"ptejasv"},"content":"    public void printTasksList(ArrayList\u003cTask\u003e tasks, int taskCount) {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"ptejasv"},"content":"        System.out.println(\" here are the tasks in your list:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"ptejasv"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"ptejasv"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"ptejasv"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"ptejasv"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"ptejasv"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"ptejasv"},"content":"     * Print a response when a task has been marked as complete","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"ptejasv"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"ptejasv"},"content":"     * @param task the task.Task item that has been marked done","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"ptejasv"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"ptejasv"},"content":"    public void printMarkedDoneMessage(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"ptejasv"},"content":"        printString(\"great work! I have marked this task as done:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"ptejasv"},"content":"                \"  \" + task);","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"ptejasv"},"content":"    public void printTaskDeletedMessage(Task deletedTask, int taskCount) {","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"ptejasv"},"content":"        printString(\"noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"ptejasv"},"content":"                \"  \" + deletedTask +","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"ptejasv"},"content":"                \"\\n now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"ptejasv"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"ptejasv"},"content":"        printString(\"bye. I hope to see you soon!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"ptejasv"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"ptejasv"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"ptejasv"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ptejasv":102}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ptejasv"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ptejasv":1,"-":20}}]
