[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"        Ui.greetUser();","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"        TaskManager.engageUser();","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"        Ui.byeUser();","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"-":2,"kahhe":8}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"     * DukeException constructor.","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"     * @param message Message to be printed, representing which error has occurred.","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"        super(message);","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"kahhe":12}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"public class FileManager {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"    private static final String DELIMITER \u003d \"---\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    private static final String TODO \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"    private static final String DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    private static final String EVENT \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    public static void loadFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"                parseText(s.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"                if (!s.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"                    Ui.printTaskLoadedSuccessMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"            Ui.printLoadFileNotFoundMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"    public static void parseText(String line) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"        String[] words \u003d line.split(DELIMITER);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"kahhe"},"content":"        parseComponents(words);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"    public static void parseComponents(String[] words) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"        String taskIsDone \u003d words[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"        String taskName\u003d words[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"        String taskDetails \u003d \"Hello there. Welcome to my FileManager.java!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"        if (taskType.equals(DEADLINE) || taskType.equals(EVENT)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"kahhe"},"content":"            taskDetails \u003d words[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"kahhe"},"content":"        if (taskType.equals(TODO) || taskType.equals(DEADLINE) || taskType.equals(EVENT)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"kahhe"},"content":"            TaskManager.addTaskFromFile(taskType, taskIsDone, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"kahhe"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"            throw new DukeException(\"Unidentified task type.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"kahhe"},"content":"    public static void saveTaskToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"kahhe"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"                fw.write(getTaskForSaving(tasks, i));","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"kahhe"},"content":"            fw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kahhe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kahhe"},"content":"            System.out.println(\"File not found. Save failed.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"kahhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"kahhe"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"kahhe"},"content":"    public static String getTaskForSaving(ArrayList\u003cTask\u003e tasks, int taskIndex) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"kahhe"},"content":"        return tasks.get(taskIndex).toSaveFile(DELIMITER) + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"kahhe":77}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    protected static int taskCount \u003d 0; //can be replaced with tasks.size()","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"    protected static int taskCompleted \u003d 0; //encapsulate in type Task?","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    private static final String TODO \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    private static final String DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    private static final String EVENT \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"     * Adds inputs from user to list[] to keep track of user\u0027s tasks, deadlines, and events.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"     * @param taskName    Name of task from user.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"     * @param taskType    Type of task from user.","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"     * @param taskDetails Time/date of event/deadline.","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"    public static void addTask(String taskType, String taskName, String taskDetails) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"            case TODO:","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"                addTodo(false, taskName);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"                addDeadline(false, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"            case EVENT:","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"                addEvent(false, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"                return;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"            confirmTaskAdded(false);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"            Ui.printMissingTextError();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"kahhe"},"content":"    public static void addTaskFromFile(String taskType, String taskIsDone, String taskName, String taskDetails) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kahhe"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"kahhe"},"content":"        if (taskIsDone.equals(\"1\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"kahhe"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"        } else if (taskIsDone.equals(\"0\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"kahhe"},"content":"            isDone \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"kahhe"},"content":"            //todo throw exception","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"            case TODO:","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"kahhe"},"content":"                addTodo(isDone, taskName);","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kahhe"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kahhe"},"content":"                addDeadline(isDone, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"kahhe"},"content":"            case EVENT:","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"kahhe"},"content":"                addEvent(isDone, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"kahhe"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"kahhe"},"content":"                return;","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kahhe"},"content":"            updateTaskCountAndTaskCompleted(isDone);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kahhe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"kahhe"},"content":"            Ui.printMissingTextError();","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"kahhe"},"content":"    public static void addTodo(boolean isDone, String taskName) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"kahhe"},"content":"        if (isEmpty(taskName)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"kahhe"},"content":"            throw new DukeException(\"todo name missing.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"kahhe"},"content":"        tasks.add(new Todo(isDone, taskName));","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"kahhe"},"content":"    public static void addDeadline(boolean isDone, String taskName, String taskDetails) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"kahhe"},"content":"        if (isEmpty(taskName)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"kahhe"},"content":"            throw new DukeException(\"deadline name missing.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"kahhe"},"content":"        tasks.add(new Deadline(isDone, taskName, taskDetails));","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"kahhe"},"content":"    public static void addEvent(boolean isDone, String taskName, String taskDetails) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"kahhe"},"content":"        if (isEmpty(taskName)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"kahhe"},"content":"            throw new DukeException(\"event name missing.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"kahhe"},"content":"        tasks.add(new Event(isDone, taskName, taskDetails));","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"kahhe"},"content":"    public static void updateTaskCountAndTaskCompleted(boolean isDone) {","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"kahhe"},"content":"        taskCount++;","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"kahhe"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"kahhe"},"content":"            taskCompleted++;","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"kahhe"},"content":"     * Prints confirmation to user of added task and updates taskCount number","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kahhe"},"content":"    public static void confirmTaskAdded(boolean isDone) {","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"kahhe"},"content":"        updateTaskCountAndTaskCompleted(isDone);","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"        int taskPending \u003d taskCount - taskCompleted;","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"kahhe"},"content":"        String isPlural \u003d (taskPending) \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"kahhe"},"content":"        Ui.printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"kahhe"},"content":"        Ui.printAddedTask(tasks, isPlural, taskPending);","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"kahhe"},"content":"        Ui.printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"kahhe"},"content":"     * Marks tasks in tasks[] as done, only if they exist or has not been completed.","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"kahhe"},"content":"     * @param userInput String from user to be converted into a number that is associated with a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"kahhe"},"content":"    public static void doneTask(String userInput) {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"kahhe"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"kahhe"},"content":"        boolean isExists;","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"kahhe"},"content":"            //todo abstraction here with a TaskManager method with `throws DukeException`","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"kahhe"},"content":"            taskNumber \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"kahhe"},"content":"            isExists \u003d taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskCount;","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"kahhe"},"content":"            Ui.printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"kahhe"},"content":"            if (!isExists) {","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskDoesNotExist();","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"kahhe"},"content":"            } else if (tasks.get(taskNumber).getDoneStatus()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskAlreadyDone();","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"kahhe"},"content":"            } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"kahhe"},"content":"                taskCompleted++;","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"kahhe"},"content":"                tasks.get(taskNumber).setAsDone();","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskDone(tasks, taskNumber);","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"kahhe"},"content":"            Ui.printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"kahhe"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"kahhe"},"content":"            Ui.printNumberFormatError();","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"kahhe"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"kahhe"},"content":"            Ui.printMissingTextError();","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"kahhe"},"content":"    public static void deleteTask(String userInput) {","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"kahhe"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"kahhe"},"content":"        boolean isExists;","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"kahhe"},"content":"            //todo abstraction here with a TaskManager method with `throws DukeException`","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"kahhe"},"content":"            taskNumber \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"kahhe"},"content":"            isExists \u003d taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskCount;","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"kahhe"},"content":"            Ui.printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"kahhe"},"content":"            if (!isExists) {","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskDoesNotExist();","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"kahhe"},"content":"            } else if (tasks.get(taskNumber).getDoneStatus()){","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"kahhe"},"content":"                taskCount--;","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskAlreadyDone();","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"kahhe"},"content":"                Ui.printDeleteDoneTask();","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"kahhe"},"content":"                tasks.remove(tasks.get(taskNumber));","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"kahhe"},"content":"            } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"kahhe"},"content":"                taskCount--;","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"kahhe"},"content":"                Ui.printTaskDeleted(tasks, taskNumber);","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"kahhe"},"content":"                tasks.remove(tasks.get(taskNumber));","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"kahhe"},"content":"            Ui.printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"kahhe"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"kahhe"},"content":"            Ui.printNumberFormatError();","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"kahhe"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"kahhe"},"content":"            Ui.printMissingTextError();","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"kahhe"},"content":"     * Checks whether there exist more inputs after user inputs command word.","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"kahhe"},"content":"     * @param input Expected input from user after the command word taskType is typed.","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"kahhe"},"content":"     * @return true if input is empty, false if input is not empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"kahhe"},"content":"    public static boolean isEmpty(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"kahhe"},"content":"        return input.equals(\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"kahhe"},"content":"     * Engages user base on what the user has typed and executes a corresponding command.","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"kahhe"},"content":"    public static void engageUser() {","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"kahhe"},"content":"        Scanner text \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"kahhe"},"content":"        String taskType;","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"kahhe"},"content":"        String taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"kahhe"},"content":"        String taskDetails \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"kahhe"},"content":"        String userInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"kahhe"},"content":"        String[] words \u003d new String[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"kahhe"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"kahhe"},"content":"        //todo more S L A P P would be nice","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"kahhe"},"content":"        do {","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"kahhe"},"content":"            taskType \u003d text.next().toLowerCase();","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"kahhe"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"kahhe"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"kahhe"},"content":"                FileManager.saveTaskToFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"kahhe"},"content":"                isExit \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"kahhe"},"content":"            case \"hello\":","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"kahhe"},"content":"            case \"hi\":","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"kahhe"},"content":"            case \"yo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"kahhe"},"content":"                Ui.mockUser();","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"kahhe"},"content":"            case \"list\":","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"kahhe"},"content":"                Ui.printList(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"kahhe"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"kahhe"},"content":"                taskName \u003d text.nextLine().substring(1); //.substring(1) to remove whitespace before taskName","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"kahhe"},"content":"                taskType \u003d TODO;","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"kahhe"},"content":"                addTask(taskType, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"kahhe"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"kahhe"},"content":"            case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"kahhe"},"content":"                userInput \u003d text.nextLine().substring(1)","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"kahhe"},"content":"                ;","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"kahhe"},"content":"                if (userInput.equals(\"\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"kahhe"},"content":"                    Ui.printMissingTextError();","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"kahhe"},"content":"                    break;","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"kahhe"},"content":"                } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"kahhe"},"content":"                    taskType \u003d DEADLINE;","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"kahhe"},"content":"                    words \u003d userInput.split(\" /by \");","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"kahhe"},"content":"                } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"kahhe"},"content":"                    taskType \u003d EVENT;","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"kahhe"},"content":"                    words \u003d userInput.split(\" /at \");","lastModifiedDate":"2021-09-22"},{"lineNumber":245,"author":{"gitId":"kahhe"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":246,"author":{"gitId":"kahhe"},"content":"                taskName \u003d words[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"kahhe"},"content":"                taskDetails \u003d words[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"kahhe"},"content":"                addTask(taskType, taskName, taskDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"kahhe"},"content":"            case \"done\":","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"kahhe"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"kahhe"},"content":"                userInput \u003d text.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"kahhe"},"content":"                if (userInput.equals(\"\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"kahhe"},"content":"                    Ui.printMissingTextError();","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"kahhe"},"content":"                } else if (taskType.equals(\"done\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"kahhe"},"content":"                    words \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"kahhe"},"content":"                    userInput \u003d words[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"kahhe"},"content":"                    TaskManager.doneTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":259,"author":{"gitId":"kahhe"},"content":"                } else if (taskType.equals(\"delete\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":260,"author":{"gitId":"kahhe"},"content":"                    words \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"kahhe"},"content":"                    userInput \u003d words[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"kahhe"},"content":"                    TaskManager.deleteTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":263,"author":{"gitId":"kahhe"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":265,"author":{"gitId":"kahhe"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"kahhe"},"content":"                userInput \u003d text.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"kahhe"},"content":"                Ui.printWrongTaskTypeError(taskType, userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":268,"author":{"gitId":"kahhe"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":269,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":270,"author":{"gitId":"kahhe"},"content":"        } while (!isExit);","lastModifiedDate":"2021-09-22"},{"lineNumber":271,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":272,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"kahhe":272}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"    public static final String INDENT \u003d \"    │ \";","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"     * Prints the top horizontal line to demarcate text from Tired.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    public static void printTopLine() {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"        System.out.println(\"    ┌────────────────────────────────────────────────────────────────────┐\");","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"     * Prints the bottom horizontal line to demarcate text from Tired.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    public static void printBottomLine() {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        System.out.println(\"    └────────────────────────────────────────────────────────────────────┘\");","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"     * Prints logo of Tired","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"    public static void printLogo() {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"        // Generated with: https://patorjk.com/software/taag/","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"        String logo \u003d \"         ______       __     __                 __\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"                + \"        / ____/___   / /_   / /   ____   _____ / /_\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"                + \"       / / __ / _ \\\\ / __/  / /   / __ \\\\ / ___// __/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"                + \"      / /_/ //  __// /_   / /___/ /_/ /(__  )/ /_  \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"                + \"      \\\\____/ \\\\___/ \\\\__/  /_____/\\\\____//____/ \\\\__/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"                + \"            ┌─┐┬  ┌─┐┌─┐┌─┐┌─┐┌─┐\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"                + \"            ├─┘│  ├┤ ├─┤└─┐├┤  ┌┘\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"                + \"      o o o ┴  ┴─┘└─┘┴ ┴└─┘└─┘ o\";","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"*Sigh* Hi... I\u0027m Tired                                             │\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"What do you want from me?                                          │\");","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"    public static void printMockery() {","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"You know what a todo list bot is?\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"I\u0027m a todo list bot. So stop chatting with me.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"\\\"Only in the agony of parting do we look into the depths of love.\\\" │\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"kahhe"},"content":"                + INDENT + \" —— George Eliot                                                   │\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"                                                                   │\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"Ha! As if I care! Goodbye!!                                        │\");","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"    public static void printWrongTaskType(String firstWord, String remainingWords) {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Look what you typed:\\n\" + INDENT + firstWord + remainingWords);","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT);","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Please don\u0027t embarrass yourself any further.\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"Use the right commands. Type \\\"help\\\" if you don\u0027t know.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"~\\\"help\\\" command still under development.~\");","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"    public static void printMissingText() {","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"And?? Retype and complete your sentence like a grown adult. Please.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"kahhe"},"content":"    public static void printNumberExpected() {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Does that look like a number to you? Type. A. Number.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kahhe"},"content":"    public static void printAddedTask(ArrayList\u003cTask\u003e tasks, String isPlural, int taskPending) {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \" Fine. Added to your list:\");","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \" You have \" + taskPending + \" pending task\"","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"kahhe"},"content":"                + isPlural + \". tHaT\u0027s aWeSoMe!!!!!1!!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"kahhe"},"content":"    public static void printTaskLoadedSuccessfully() {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Loaded previously saved file.                                      │\");","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"kahhe"},"content":"    public static void printLoadFileNotFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT+ \"Load file: not found.                                              │\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"kahhe"},"content":"                + INDENT + \"Tasks added in this session will be automatically saved upon exit. │\");","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"kahhe"},"content":"    public static void printTaskDoesNotExist() {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Wha- Hey! Task does not exist!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"kahhe"},"content":"    public static void printTaskAlreadyDone() {","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Dude... you\u0027ve done the task already.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"kahhe"},"content":"    public static void printTaskDone(ArrayList\u003cTask\u003e tasks, int taskNumber) {","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"About time. I\u0027ve mark that task as done:\");","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"[\" + tasks.get(taskNumber).getStatusIcon() + \"]\"","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"kahhe"},"content":"                + tasks.get(taskNumber).getTaskName());","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"kahhe"},"content":"    public static void printDeleteDoneTask() {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"But I\u0027ll delete for you, cus\u0027 I\u0027m nice. :)\");","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"kahhe"},"content":"    public static void printTaskDeleted(ArrayList\u003cTask\u003e tasks, int taskNumber) {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"Lazy eh? Gotcha fam, removed the task:\");","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"[\" + tasks.get(taskNumber).getStatusIcon() + \"]\"","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"kahhe"},"content":"                + tasks.get(taskNumber).getTaskName());","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"kahhe"},"content":"        System.out.println(INDENT + \"You left \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kahhe"},"content":"     * Prints the tasks of tasks collated by Tired.","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"kahhe"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"kahhe"},"content":"            System.out.println(INDENT + \"Here are your tasks, oRgAnIc iTeLlIgEnCe:\");","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"kahhe"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"kahhe"},"content":"                System.out.println(INDENT + (tasks.indexOf(t) + 1) + \".\" + t.toString());","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"kahhe"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"kahhe"},"content":"            System.out.println(INDENT + \"Why are you asking for a list???                                   │\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"kahhe"},"content":"                    + INDENT + \"It\u0027s empty, like something I know.                                 │\");","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"kahhe"},"content":"     *  Prints error message to user. Prompts user to input correct command.","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"kahhe"},"content":"    public static void printWrongTaskTypeError(String firstWord, String remainingWords) {","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"kahhe"},"content":"        printWrongTaskType(firstWord, remainingWords);","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"kahhe"},"content":"     * Prints error message for when user leaves out important information in input.","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"kahhe"},"content":"    public static void printMissingTextError() {","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"kahhe"},"content":"        printMissingText();","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"kahhe"},"content":"    public static void printNumberFormatError() {","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"kahhe"},"content":"        printNumberExpected();","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"kahhe"},"content":"    public static void printTaskLoadedSuccessMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"kahhe"},"content":"        printTaskLoadedSuccessfully();","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"kahhe"},"content":"    public static void printLoadFileNotFoundMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"kahhe"},"content":"        printLoadFileNotFound();","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"kahhe"},"content":"     * Prints greeting message to user when code is ran.","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"kahhe"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"kahhe"},"content":"        FileManager.loadFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"kahhe"},"content":"        printLogo();","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"kahhe"},"content":"        printGreeting();","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"kahhe"},"content":"     * Prints a snarky remark to user.","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"kahhe"},"content":"    public static void mockUser() {","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"kahhe"},"content":"        printMockery();","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"kahhe"},"content":"     * Prints farewell message to user and exits code.","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"kahhe"},"content":"    public static void byeUser() {","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"kahhe"},"content":"        printTopLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"kahhe"},"content":"        printGoodbye();","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"kahhe"},"content":"        printBottomLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"kahhe":196}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"kahhe":9}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"kahhe":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.task;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"    protected String by;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"    protected String type;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"    public Deadline(boolean isDone, String taskName, String by) {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"        super(taskName);","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"    public String getType() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"        return type;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"    public String toSaveFile(String DELIMITER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"        return \"D\" + super.toSaveFile(DELIMITER) + DELIMITER + by;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kahhe":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.task;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"    protected String at;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"    protected String type;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"    public Event(boolean isDone, String TaskName, String at) {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"        super(TaskName);","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    public String getType() {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"        return type;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"    public String toSaveFile(String DELIMITER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"        return \"E\" + super.toSaveFile(DELIMITER) + DELIMITER + at;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kahhe":27}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.task;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"    protected String taskName;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"    protected static final String DELIMITER \u003d \" * \";","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"     * Constructor for Task, generates name and status of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"     * @param description Name of task","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"        this.taskName \u003d description;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"     * Checks if task has been completed and returns the corresponding symbol.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"     * @return Whitespace if task is not completed, tick if task is completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"        return isDone;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"        return taskName;","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"kahhe"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"    public String toSaveFile(String DELIMITER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"        return DELIMITER + (isDone? 1 : 0) + DELIMITER + taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"kahhe":48}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package duke.task;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"    protected String type;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"    public Todo(boolean isDone, String taskName) {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"        super(taskName);","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    public String getType() {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"        return type;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"    public String toSaveFile(String DELIMITER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"        return \"T\" + super.toSaveFile(DELIMITER);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kahhe":26}},{"path":"src/main/java/kahhe-todo.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"#Todo List \u003cbr\u003e for improvements in the future","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"---","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"[ ] `done`, `delete`, `deadline`, and `event` commands not working with 1 or more whitespace (ArrayIndexOutOfBoundsException)","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"[ ] More abstraction","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"[ ] Need more S L A P P in methods","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"[ ] `todo` + empty space generates task with whitespace as taskName","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"[ ] `engageUser()` to handle parsing then commands, separately","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"[ ] If load file is blank, no message on whether file was loaded successfully or not","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"[Google](https://www.google.com)  ","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"kahhe":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"todo Homework someday","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kahhe":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"java -classpath C..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"kahhe":1}}]
