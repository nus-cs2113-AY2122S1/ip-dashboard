[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" * Main class that is called upon program execution","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    public static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"    public static final File myFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"     * Initialises Ui, Storage and TaskList. If there is a user file provided, the TaskList will copy all tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * stored in the user file","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * @param myFile File containing tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    public Duke(File myFile) {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"        ui.printStart();","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"        storage \u003d new Storage(myFile);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"        if (!storage.newFileCreated) {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"        else {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"        parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"     * Command that is continuously run in a loop. Waits for a user input, and parses it into commands if valid.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"     * Afterwards, the program will go back to waiting for the next user input. Input \"bye\" to exit program","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"    public void run() {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"        while (true) {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"            ui.getNextLine();","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"            if (Objects.equals(ui.userInput.split(\" \")[COMMAND_INDEX], \"bye\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"                ui.printEnd();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"                return;","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"            parser.parseInput(ui.userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"     * This function is called upon program execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"     * @param args System arguments that are added to the program","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"poppolette"},"content":"        new Duke(myFile).run();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"poppolette":61,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":" * Receives a String user input and parses it, performing any valid commands","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"public class Parser {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"    public static final int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public static final int TASK_NUMBER \u003d 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"    public static final int TIMING \u003d 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    public static final int TODO_HEADER \u003d 5;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    public static final int FIND_HEADER \u003d 5;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    public static final int EVENT_HEADER \u003d 6;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    public static final int DEADLINE_HEADER \u003d 9;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"    public static final String LINEBAR \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"    public static final String EVENT_IDENTIFIER \u003d \"/at \";","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"    public static final String DEADLINE_IDENTIFIER \u003d \"/by \";","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    String userIn;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    String identifier;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    TaskList tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"    Ui ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    Storage storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"     * Assigns TaskList, Ui and Storage to be used","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"     * @param taskList TaskList containing list of Tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"     * @param userInterface Ui to print out relevant messages","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"     * @param storageSpace Storage to write/read data","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"    public Parser(TaskList taskList, Ui userInterface, Storage storageSpace) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"        this.ui \u003d userInterface;","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"        this.storage \u003d storageSpace;","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"     * Parses user input into commands. The list of supported commands are:","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"     * \"done ~index~\" : Marks the Task at index as done","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"     * \"bot?\" : Ask DAHNAM whether he\u0027s a bot","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"     * \"list\" : Displays all current tasks in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"     * \"todo ~desc~\" : Creates a ToDo with desc","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"     * \"event ~desc~ /at ~time~\" : Creates an Event with desc and time. The /at is used to separate desc and time","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"     * \"deadline ~desc~ /by ~time~\" : Creates a Deadline with desc and time. The /by is used to separate desc and time","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"     * \"delete ~index~\" : Deletes the Task stored at the given index in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"     * \"find ~desc~\" : Enumerates through all current Tasks in TaskList and print all tasks with ~desc~","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"     * @param userInput String user input","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"    public void parseInput(String userInput) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"        this.userIn \u003d userInput;","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"        this.identifier \u003d userIn.split(\" \")[0];","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"poppolette"},"content":"        switch (identifier) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"poppolette"},"content":"        case \"done\":","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"poppolette"},"content":"            completeTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"poppolette"},"content":"        case \"bot?\":","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"poppolette"},"content":"            denyBotNature();","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"poppolette"},"content":"        case \"list\":","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"poppolette"},"content":"            listAllTasks();","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"poppolette"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"poppolette"},"content":"            addToDo();","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"poppolette"},"content":"        case \"event\":","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"poppolette"},"content":"            addEvent();","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"poppolette"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"poppolette"},"content":"            addDeadline();","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"poppolette"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"poppolette"},"content":"            deleteTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"poppolette"},"content":"        case \"find\":","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"poppolette"},"content":"            findTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"poppolette"},"content":"        default:","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"poppolette"},"content":"            ui.showListOfCommands();","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"poppolette"},"content":"     * Modifies a task and sets its boolean isDone to true. Prints out an acknowledgement after.","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"poppolette"},"content":"     * @throws NumberFormatException     Thrown when the input is not a valid positive integer e.g. an alphabet","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"poppolette"},"content":"     * @throws NullPointerException      Thrown when the value inserted exceeds the number of tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"poppolette"},"content":"     * @throws IndexOutOfBoundsException Thrown when input is a negative value, or does not include a value","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"poppolette"},"content":"    public void completeTask()","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"poppolette"},"content":"            throws NumberFormatException, NullPointerException, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"poppolette"},"content":"            int taskNumber \u003d Integer.parseInt(userIn.split(\" \")[TASK_NUMBER]);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"poppolette"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"poppolette"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"poppolette"},"content":"            storage.updateFile(tasks.TaskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"poppolette"},"content":"            System.out.println(","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"poppolette"},"content":"                    \"Bueno! The following task is marked as done: \\n[\" + tasks.get(taskIndex).getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"poppolette"},"content":"                            + tasks.get(taskIndex).taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"poppolette"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"poppolette"},"content":"            ui.printNumberFormatException();","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"poppolette"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"poppolette"},"content":"            ui.printNullPtrException();","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"poppolette"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"poppolette"},"content":"            ui.printIndexOOBException();","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"poppolette"},"content":"     * Prints a message denying any and all allegations of DAHNAM being a bot when prompted with \u0027bot?\u0027","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"poppolette"},"content":"    public void denyBotNature() {","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"poppolette"},"content":"        String denyBotNature \u003d \"No, I am definitely not a bot. Why do you ask?\\n\";","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"poppolette"},"content":"        System.out.println(denyBotNature);","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"poppolette"},"content":"     * Enumerates through an array of tasks and prints out all tasks input by user","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"poppolette"},"content":"    public void listAllTasks() {","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"poppolette"},"content":"        if (tasks.taskIndex \u003d\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"poppolette"},"content":"            ui.printNoItemInList();","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"poppolette"},"content":"            System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"poppolette"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"poppolette"},"content":"        for (Task t : tasks.TaskList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"poppolette"},"content":"            System.out.println(taskNumber + \". \" + t);","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"poppolette"},"content":"            taskNumber++;","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"poppolette"},"content":"     * Adds a toDo to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when user does not include description in input","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"poppolette"},"content":"    public void addToDo() throws StringIndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userIn.substring(TODO_HEADER);","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"poppolette"},"content":"            ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"poppolette"},"content":"            tasks.add(todo);","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"poppolette"},"content":"            storage.writeToFile(todo);","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"poppolette"},"content":"            ui.echoUserInput(todo, tasks.taskIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"poppolette"},"content":"            ui.printStringIndexOOB();","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"poppolette"},"content":"     * Adds an event to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when userInput does not have a description after \u0027event\u0027","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"poppolette"},"content":"     * @throws ArrayIndexOutOfBoundsException  Thrown when userInput does not follow [Description] /at [Time]","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"poppolette"},"content":"    public void addEvent()","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"poppolette"},"content":"            throws StringIndexOutOfBoundsException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userIn.split(EVENT_IDENTIFIER)[DESCRIPTION].substring(EVENT_HEADER);","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"poppolette"},"content":"            String timing \u003d userIn.split(EVENT_IDENTIFIER)[TIMING];","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"poppolette"},"content":"            Event event \u003d new Event(taskDescription, timing);","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"poppolette"},"content":"            tasks.add(event);","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"poppolette"},"content":"            storage.writeToFile(event);","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"poppolette"},"content":"            ui.echoUserInput(event, tasks.taskIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"poppolette"},"content":"            ui.printStringIndexOOB();","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"poppolette"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"poppolette"},"content":"            ui.printArrayIndexOOB();","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"poppolette"},"content":"     * Adds a deadline to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when user does not include any description after \u0027deadline\u0027","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"poppolette"},"content":"     * @throws ArrayIndexOutOfBoundsException  Thrown when user input does not follow [description] /by [time]","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"poppolette"},"content":"    public void addDeadline()","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"poppolette"},"content":"            throws StringIndexOutOfBoundsException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userIn.split(DEADLINE_IDENTIFIER)[DESCRIPTION].substring(DEADLINE_HEADER);","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"poppolette"},"content":"            String timing \u003d userIn.split(DEADLINE_IDENTIFIER)[TIMING];","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"poppolette"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, timing);","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"poppolette"},"content":"            tasks.add(deadline);","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"poppolette"},"content":"            storage.writeToFile(deadline);","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"poppolette"},"content":"            ui.echoUserInput(deadline, tasks.taskIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"poppolette"},"content":"            ui.printStringIndexOOB();","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"poppolette"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"poppolette"},"content":"            ui.printArrayIndexOOB();","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":225,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"poppolette"},"content":"     * Deletes the task stored at index provided in user input","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"poppolette"},"content":"     * @throws NumberFormatException     Thrown when the input is not a valid positive integer e.g. an alphabet","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"poppolette"},"content":"     * @throws NullPointerException      Thrown when the value inserted exceeds the number of tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":232,"author":{"gitId":"poppolette"},"content":"     * @throws IndexOutOfBoundsException Thrown when input is a negative value, or does not include a value","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"poppolette"},"content":"    public void deleteTask() throws NumberFormatException, NullPointerException, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"poppolette"},"content":"            int taskNumber \u003d Integer.parseInt(userIn.split(\" \")[TASK_NUMBER]);","lastModifiedDate":"2021-09-23"},{"lineNumber":239,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":240,"author":{"gitId":"poppolette"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":241,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":242,"author":{"gitId":"poppolette"},"content":"            Task toBeDeleted \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":243,"author":{"gitId":"poppolette"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":244,"author":{"gitId":"poppolette"},"content":"            storage.updateFile(tasks.TaskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"poppolette"},"content":"            System.out.println(","lastModifiedDate":"2021-09-23"},{"lineNumber":246,"author":{"gitId":"poppolette"},"content":"                    \"The following task has been deleted!\\n\" + toBeDeleted + \"\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":247,"author":{"gitId":"poppolette"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":248,"author":{"gitId":"poppolette"},"content":"            ui.printNumberFormatException();","lastModifiedDate":"2021-09-23"},{"lineNumber":249,"author":{"gitId":"poppolette"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":250,"author":{"gitId":"poppolette"},"content":"            ui.printNullPtrException();","lastModifiedDate":"2021-09-23"},{"lineNumber":251,"author":{"gitId":"poppolette"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":252,"author":{"gitId":"poppolette"},"content":"            ui.printIndexOOBException();","lastModifiedDate":"2021-09-23"},{"lineNumber":253,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":254,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":255,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":256,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":257,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":258,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":259,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":260,"author":{"gitId":"poppolette"},"content":"     * Enumerates through all tasks in TaskList, and prints out all tasks which contains the descriptor provided","lastModifiedDate":"2021-09-23"},{"lineNumber":261,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":262,"author":{"gitId":"poppolette"},"content":"    public void findTask() {","lastModifiedDate":"2021-09-23"},{"lineNumber":263,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":264,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Below are a list of tasks matching your description\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":265,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":266,"author":{"gitId":"poppolette"},"content":"        String targetDesc \u003d userIn.substring(FIND_HEADER);","lastModifiedDate":"2021-09-23"},{"lineNumber":267,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":268,"author":{"gitId":"poppolette"},"content":"        int matching \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":269,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":270,"author":{"gitId":"poppolette"},"content":"        for (Task t: tasks.TaskList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"poppolette"},"content":"            String currDesc \u003d t.taskDescription;","lastModifiedDate":"2021-09-23"},{"lineNumber":272,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"poppolette"},"content":"            if (currDesc.contains(targetDesc)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"poppolette"},"content":"                matching++;","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"poppolette"},"content":"                System.out.println(matching + \". \" + t);","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"poppolette"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":279,"author":{"gitId":"poppolette"},"content":"        if (matching \u003d\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":280,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"No matches found\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":283,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":284,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"poppolette":284}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import java.io.File;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":" * Storage class is used to read/write data from the given filepath","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"public class Storage {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    public final static int TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    public final static int COMPLETION_INDEX \u003d 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    public final static int DESC_INDEX \u003d 2;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"    public final static int TIME_INDEX \u003d 3;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"    public File filepath;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    public boolean fileExists;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    public boolean newFileCreated \u003d false;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"     * Upon calling, check whether provided filepath is an existing file. If it is not, create the file","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"     * @param myFile filepath to check whether file already exists","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"    public Storage(File myFile) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"        this.filepath \u003d myFile;","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"        fileExists \u003d checkFileExists();","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"        if (!fileExists) {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"            newFileCreated \u003d createFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"            ui.printFileCreationNotice();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"     * Checks if file exists","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"     * @return True if file exists, False otherwise","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"    public boolean checkFileExists() {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"        if (filepath.exists()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"        return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"     * Creates a new file","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"     * @return True if file is successfully created, False otherwise","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"    public boolean createFile() {","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"            return filepath.createNewFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"poppolette"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"poppolette"},"content":"            ui.printFileError();","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"poppolette"},"content":"            return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"poppolette"},"content":"     * Writes Task to file. Will append to end of file","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"poppolette"},"content":"     * @param myTask Task to write to file","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"poppolette"},"content":"    public void writeToFile(Task myTask) {","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"poppolette"},"content":"            String writeData \u003d myTask.toFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"poppolette"},"content":"            FileWriter myWriter \u003d new FileWriter(filepath, true);","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"poppolette"},"content":"            myWriter.write(writeData);","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"poppolette"},"content":"            myWriter.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"poppolette"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"poppolette"},"content":"            ui.printWriteError();","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"poppolette"},"content":"     * Overwrites all existing data in file with Tasks from TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"poppolette"},"content":"     * @param taskList TaskList which contains the tasks to store in file","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"poppolette"},"content":"    public void updateFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"poppolette"},"content":"            FileWriter myWriter \u003d new FileWriter(filepath);","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"poppolette"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"poppolette"},"content":"                myWriter.write(taskList.get(i).toFile());","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"poppolette"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"poppolette"},"content":"            myWriter.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"poppolette"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"poppolette"},"content":"            ui.printWriteError();","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"poppolette"},"content":"     * Parses the data from file and converts them into Tasks to store into TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"poppolette"},"content":"     * @return ArrayList of Task that contains all Tasks read from file","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"poppolette"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"poppolette"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"poppolette"},"content":"            Scanner readFileInput \u003d new Scanner(filepath);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"poppolette"},"content":"            while (readFileInput.hasNextLine()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"poppolette"},"content":"                String currTask \u003d readFileInput.nextLine();","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"poppolette"},"content":"                String[] currTaskDetails \u003d currTask.split(\",\");","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"poppolette"},"content":"                String taskDesc \u003d currTaskDetails[DESC_INDEX];","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"poppolette"},"content":"                if (currTaskDetails[TYPE_INDEX].equals(\"T\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"poppolette"},"content":"                    ToDo toDo \u003d new ToDo(taskDesc);","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"poppolette"},"content":"                    if (currTaskDetails[COMPLETION_INDEX].equals(\"X\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"poppolette"},"content":"                        toDo.markAsDone();","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"poppolette"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"poppolette"},"content":"                    taskList.add(toDo);","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"poppolette"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"poppolette"},"content":"                else if (currTaskDetails[TYPE_INDEX].equals(\"D\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"poppolette"},"content":"                    String timing \u003d currTaskDetails[TIME_INDEX];","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"poppolette"},"content":"                    Deadline deadline \u003d new Deadline(taskDesc, timing);","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"poppolette"},"content":"                    if (currTaskDetails[COMPLETION_INDEX].equals(\"X\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"poppolette"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"poppolette"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"poppolette"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"poppolette"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"poppolette"},"content":"                else if (currTaskDetails[TYPE_INDEX].equals(\"E\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"poppolette"},"content":"                    String timing \u003d currTaskDetails[TIME_INDEX];","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"poppolette"},"content":"                    Event event \u003d new Event(taskDesc, timing);","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"poppolette"},"content":"                    if (currTaskDetails[COMPLETION_INDEX].equals(\"X\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"poppolette"},"content":"                        event.markAsDone();","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"poppolette"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"poppolette"},"content":"                    taskList.add(event);","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"poppolette"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"poppolette"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"poppolette"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"poppolette"},"content":"            ui.printFileNotFoundError();","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"poppolette"},"content":"        return taskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"poppolette":149}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":" * A class containing messages to print when valid","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"public class Ui {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    public Scanner readUserInput;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    public String userInput;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     * Initializes the Scanner to read user input from System","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"    public Ui() {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        this.readUserInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * Waits for the user to input the next command, and assign it to userInput","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"    public void getNextLine() {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"        this.userInput \u003d this.readUserInput.nextLine();","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"     * Message to print upon program start","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"     * */","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"    public void printStart() {","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Hello! I\u0027m DAHNAM, your friendly human (not a bot!)! What can I do for you?\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"     * Message to print when user inputs \"bye\"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"    public void printEnd() {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Alas, our time together has come to an end. Au Revoir!\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"     * Shows the list of command supported when the user types in a command that is not supported","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"    public void showListOfCommands() {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Unfortunately, my definitely human brain is unable to understand what you mean.\\nThe list \"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"                + \"of sentences I understand are: \\n todo [Description] \\n event [Description] /at [Time] \\n \"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"                + \"deadline [Description] /by [Time] \\n list \\n done [Task Number] \\n bye \\n bot?\\n find \"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"                + \"[Description]\");","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"     * Echoes the details of the Task that user input into TaskList, and the total number of current tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"     * @param t Task that user input into TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"     * @param taskNum Total number of tasks currently","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"    public void echoUserInput(Task t, int taskNum) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Added: \" + t.toString() + \"\\n You currently have \" + taskNum + \" tasks\");","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"poppolette"},"content":"     * Message to print when a file is not detected; indicates the creation of a new file","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"poppolette"},"content":"    public void printFileCreationNotice() {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"No file detected. Now creating a new file!\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"poppolette"},"content":"     * Message to print when an error occurs during file creation","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"poppolette"},"content":"    public void printFileError() {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"An error occurred during file creation.\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"poppolette"},"content":"     * Message to print when an error occurs during writing to file","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"poppolette"},"content":"    public void printWriteError() {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"An error occurred when writing to file.\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"poppolette"},"content":"     * Message to print when file is not found","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"poppolette"},"content":"    public void printFileNotFoundError() {","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Error! File not found.\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"poppolette"},"content":"     * Message to print when user calls \"list\" and there are no items in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"poppolette"},"content":"    public void printNoItemInList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"You do not have any items in your list currently.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"poppolette"},"content":"     * Message to print when NumberFormatException is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"poppolette"},"content":"    public void printNumberFormatException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"You must input a positive integer. Format: done [Task Number]\");","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"poppolette"},"content":"     * Message to print when NullPointerException is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"poppolette"},"content":"    public void printNullPtrException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"The value you inserted is invalid. Please type \u0027list\u0027 to check the number of tasks\");","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"poppolette"},"content":"     * Message to print when IndexOutOfBoundsException is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"poppolette"},"content":"    public void printIndexOOBException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"The value you inserted must be a positive integer. Please try again\");","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"poppolette"},"content":"     * Message to print when StringIndexOutOfBoundsException is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"poppolette"},"content":"    public void printStringIndexOOB() {","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"String Index OOB. Did you forget the /by? Format: deadline [Description] /by [Time]\");","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"poppolette"},"content":"     * Message ot print when ArrayIndexOutOfBoundsException is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"poppolette"},"content":"    public void printArrayIndexOOB() {","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Array Index OOB. Did you forget the /by? Format: deadline [Description /by [Time]\");","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"poppolette":129}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":" * Represents a Deadline input by user. Identified by \u0027deadline\u0027 header and \u0027\\by\u0027.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"    public String deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"     * Creates a Deadline and assigns taskDescription and deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription String before the \u0027\\by\u0027 in the user input. Represents task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * @param deadline String after the \u0027\\by\u0027 in the user input. Represents time that deadline should be done by.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public Deadline(String taskDescription, String deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * Displays the current deadline as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[D][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"     * Formats the data to include deadline timing and \u0027D\u0027 header","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"D,{X, },description,timing\"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"        return \"D,\" + super.toFile() + \",\" + deadline + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":" * Represents an Event input by the user. Identified by \u0027event\u0027 header and \u0027\\at\u0027.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"    public String time;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"     * Creates a Deadline and assigns taskDescription and deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription String before the \u0027\\by\u0027 in the user input. Represents task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * @param timing String after the \u0027\\by\u0027 in the user input. Represents the time that the event will occur.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public Event(String taskDescription, String timing) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        this.time \u003d timing;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * Displays the current event as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[E][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"     * Formats the details of Event into the supported format for files","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"E,{X, },description,time\"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"        return \"E,\" + super.toFile() + \",\" + time + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":" * Represents a task input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":" * Is superclass of Deadline, Event and ToDo.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"    public String taskDescription;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     * Creates a task and assigns the input to taskDescription","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription A String that the user input","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * Retrieves the completion status of a specified task","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * @return \"X\" if task is completed, \" \" otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"        return (isDone ? \"X\" : \" \"); //Mark completed tasks with an X","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"     * Sets boolean isDone to true","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"     * Displays the current task as well as its status","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[ ] (taskDescription)\" The box will be [X] if the task is completed","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"     * Formats the task into the supported format for file operations","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"{X, },description\"","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"        return getStatusIcon() + \",\" + taskDescription;","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"poppolette":50}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" * TaskList contains an ArrayList of Tasks, as well as an int counter to track number of tasks in TaskList.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":" * Tasks that are created will be stored in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"public class TaskList {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    public ArrayList\u003cTask\u003e TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    public int taskIndex;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     * Creates an empty TaskList if no input is given","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        this.TaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"        this.taskIndex \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * Copies all tasks from arrayList into TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     * @param arrayList An ArrayList of Task, generated by reading the file data","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"    public TaskList(ArrayList\u003cTask\u003e arrayList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"        this.TaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"        for (Task t: arrayList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"            add(t);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Num of existing tasks \u003d \" + this.taskIndex + \"\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"     * Adds a task to TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"     * @param t Task to be added","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"        this.TaskList.add(t);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"        this.taskIndex++;","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"     * Retrieves the task at given index","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"     * @param i Index for the Task to be retrieved in TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"     * @return Task stored at index of TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"        return this.TaskList.get(i);","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"     * Removes task at given index","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"     * @param i Index for the Task to be removed from TaskList","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"        this.TaskList.remove(i);","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"        this.taskIndex--;","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"poppolette":60}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":" * Represents an item that the user has to do at a later point in time.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"     * Creates a ToDo ond assigns the user input to description.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"     * @param description A String that the user input. Represents the task that user needs to do.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"     * Displays the current ToDo item as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[T][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"     * Formats the data of ToDo into the format supported for file operations","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"     * @return String in the format \"T,{X, },description\"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"        return \"T,\" + super.toFile() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":35}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"T,X,complete duke project","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"D,X,complete duke ,1 oct 2021","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"E,X,finalize duke ,tonight","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"poppolette":3}}]
