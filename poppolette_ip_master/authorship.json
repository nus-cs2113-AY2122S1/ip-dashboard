[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    public static final int FIRST_WORD \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"    public static final int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"    public static final int TASK_NUMBER \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"    public static final int TIMING \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public static final int TODO_HEADER \u003d 5;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"    public static final int EVENT_HEADER \u003d 6;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    public static final int DEADLINE_HEADER \u003d 9;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    public static final int MAX_LIST_SIZE \u003d 100;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    public static final String LINEBAR \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    public static final String EVENT_IDENTIFIER \u003d \"/at \";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"    public static final String DEADLINE_IDENTIFIER \u003d \"/by \";","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"    public static int taskIndex \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"     * Prints a message when the user runs the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"        String HELLOMESSAGE \u003d \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⣾⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣅⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⣠⣶⡿⠿⠿⢿⣶⣴⣾⠿⠛⠋⠁⠀⠉⠛⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣶⣄⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⣼⣿⠁⠀⠀⣠⣾⠿⢋⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠈⠉⠙⠛⠛⠛⠿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⠛⠀⠈⢿⣧⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⣿⣿⠀⢀⣾⣿⣿⡿⠛⠉⠉⠉⠉⢉⣭⣭⣉⠙⠳⣶⡆⠀⠐⣶⠶⠋⣉⣭⣭⣉⠉⠉⠉⠉⠙⢻⣿⣿⣷⡀⠀⣸⣿⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠘⣿⣦⣿⠏⠈⢿⡇⠀⠀⠀⠀⢸⣿⣿⣿⣿⣧⠀⣸⡗⠀⠐⣿⠀⢸⣿⣿⣿⣿⣧⠀⠀⠀⠀⢀⣿⠉⢻⣷⣴⣿⠏⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⣽⣿⠀⠀⠘⢷⡀⠀⠀⠀⠸⣿⣿⣿⣿⠏⣴⠟⠀⠀⠀⠘⣷⡸⣿⣿⣿⣿⠏⠀⠀⠀⠀⣼⠃⠀⠀⣿⡏⠁⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⢻⣿⠀⠀⠀⠈⠻⠦⣄⣀⣀⣀⣉⣩⡴⠟⠁⠀⠀⠀⠀⠀⠈⠛⠶⢭⣉⣀⣀⣀⣀⠤⠞⠁⠀⠀⠀⣿⡇⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠈⣽⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢧⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⠁⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⢹⣯⠀⠀⠀⠀⠀⠀⠀⣰⠃⢠⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡄⠘⡇⠀⠀⠀⠀⠀⠀⢰⡿⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠄⠀⠀⠀⠂⠀⠀⡟⠀⠈⠛⠿⢷⣶⣶⣶⣶⣶⣶⣶⡾⠿⠋⠁⠀⠱⠀⠀⠀⠀⠀⢰⣿⠃⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣆⠀⢈⠀⠀⠀⠀⠀⠀⢷⠀⠀⠀⠀⡌⠉⠉⠉⠁⠀⠄⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠇⢀⠘⠁⠁⠀⡀⠀⡀⠘⢷⣤⣀⣀⠃⠀⠀⠀⣀⣈⣤⠾⠃⠀⠀⢀⢠⠀⡁⠀⢸⣿⠁⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡔⣀⡀⡐⣦⠀⠀⠀⠂⠀⠀⠈⠉⠉⠉⠛⠛⠋⠏⠉⠀⠀⣰⡤⠐⠈⢠⣠⠃⠀⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⣿⡀⡁⠹⣆⠀⠀⠀⠀⠀⠀⠀⠐⠀⠁⠈⠀⠀⢄⣸⡾⠫⠐⠀⠀⣼⠋⠀⢱⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠘⢧⡁⠀⠙⠳⢶⣤⣄⣀⣀⣠⣀⣢⣦⣤⠶⠞⠛⠁⠀⠀⠀⢠⡼⠃⠢⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠈⠻⣦⡀⠀⠀⠀⠉⠉⢹⠉⠉⠙⡁⡀⠀⠀⠀⠀⣀⣠⡶⠋⠀⠀⢠⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣷⣄⡄⠀⡊⠙⠳⠶⠶⠶⢾⣤⣤⣤⣤⣧⣷⢶⠶⠞⢻⠉⠁⢠⠠⢈⣴⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢷⣧⣤⣀⣀⣀⣄⣄⣀⣀⣀⣀⣀⣂⣠⣀⣡⣠⣀⣠⣦⣴⡾⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"poppolette"},"content":"                + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠙⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"poppolette"},"content":"                + \"Greetings, I\u0027m DAHNAM. I\u0027m definitely a human, not a machine!\\nHow may I help you?\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"poppolette"},"content":"        System.out.println(HELLOMESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"poppolette"},"content":"     * Prints out a message when the user inputs \u0027bye\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"poppolette"},"content":"    public static void bidGoodbye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"poppolette"},"content":"        String GOODBYEMESSAGE \u003d \"Alas, our lovely time together comes to an end. Au revoir!\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"poppolette"},"content":"        System.out.println(GOODBYEMESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"poppolette"},"content":"     * Prints a message denying any and all allegations of DAHNAM being a bot when prompted with \u0027bot?\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"poppolette"},"content":"    public static void denyBotNature() {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"poppolette"},"content":"        String denyBotNature \u003d \"No, I am definitely not a bot. Why do you ask?\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"poppolette"},"content":"        System.out.println(denyBotNature);","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"poppolette"},"content":"     * Enumerates through an array of tasks and prints out all tasks input by user","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"poppolette"},"content":"     * @param taskList An array of tasks. Max size of 100","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"poppolette"},"content":"    public static void listAllTasks(Task[] taskList, int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"poppolette"},"content":"        if (index \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"You do not have any items in your list currently.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"poppolette"},"content":"            return;","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"poppolette"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"poppolette"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"poppolette"},"content":"            System.out.println((taskNumber) + \".\" + taskList[i].toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"poppolette"},"content":"            taskNumber++;","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"poppolette"},"content":"     * Notifies user of what item is added to the task list upon receiving a valid task input.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"poppolette"},"content":"     * @param t user input task","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"poppolette"},"content":"    public static void echoUserInput(Task t, int taskNum) {","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Added: \" + t.toString() + \"\\n You currently have \" + taskNum + \" tasks\");","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"poppolette"},"content":"     * Adds the task \u0027t\u0027 specified by user into the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"poppolette"},"content":"     * @param taskList An array of tasks. Max size of 100","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"poppolette"},"content":"     * @param t        user input task","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"poppolette"},"content":"    public static void addToTaskList(Task[] taskList, Task t, int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"poppolette"},"content":"        taskList[index] \u003d t;","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"poppolette"},"content":"     * Modifies a task and sets its boolean isDone to true. Prints out an acknowledgement after.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"poppolette"},"content":"     * @param userInput String that the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"poppolette"},"content":"     * @param taskList  An array of tasks. Max size of 100","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"poppolette"},"content":"     * @throws NumberFormatException Thrown when the input is not a valid positive integer e.g. an alphabet","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"poppolette"},"content":"     * @throws NullPointerException Thrown when the value inserted exceeds the number of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"poppolette"},"content":"     * @throws ArrayIndexOutOfBoundsException Thrown when input is a negative value, or does not include a value","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"poppolette"},"content":"    public static void completeTask(String userInput, Task[] taskList)","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"poppolette"},"content":"            throws NumberFormatException, NullPointerException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"poppolette"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[TASK_NUMBER]);","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"poppolette"},"content":"            //Navigate to the given index and change the sign","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"poppolette"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"poppolette"},"content":"            taskList[taskIndex].markAsDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"poppolette"},"content":"            System.out.println(","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"poppolette"},"content":"                    \"Bueno! The following task is marked as done: \\n[\" + taskList[taskIndex].getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"poppolette"},"content":"                            + taskList[taskIndex].taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"poppolette"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"You must input a positive integer. Format: done [Task Number]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"poppolette"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"The value you inserted is invalid. Please type \u0027list\u0027 to check the number of tasks\");","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"poppolette"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"The value you inserted must be a positive integer. Please try again\");","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"poppolette"},"content":"     * Adds an event to the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"poppolette"},"content":"     * @param userInput String that the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"poppolette"},"content":"     * @param taskList  An array of tasks. Max size of 100","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when userInput does not have a description after \u0027event\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"poppolette"},"content":"     * @throws ArrayIndexOutOfBoundsException Thrown when userInput does not follow [Description] /at [Time]","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"poppolette"},"content":"    public static void addEvent(String userInput, Task[] taskList)","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"poppolette"},"content":"            throws StringIndexOutOfBoundsException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userInput.split(EVENT_IDENTIFIER)[DESCRIPTION].substring(EVENT_HEADER);","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"poppolette"},"content":"            String timing \u003d userInput.split(EVENT_IDENTIFIER)[TIMING];","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"poppolette"},"content":"            Event event \u003d new Event(taskDescription, timing);","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"poppolette"},"content":"            addToTaskList(taskList, event, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"poppolette"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"poppolette"},"content":"            echoUserInput(event, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"String Index OOB. Did you forgot the /at? Format: event [Description] /at [Time]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"poppolette"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"Array Index OOB. Did you forget the /at? Format: event [Description] /at [Time]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"poppolette"},"content":"     * Adds a todo to the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"poppolette"},"content":"     * @param userInput String that the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"poppolette"},"content":"     * @param taskList An array of tasks. Max size of 100","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when user does not include description","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"poppolette"},"content":"    public static void addToDo(String userInput, Task[] taskList) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userInput.substring(TODO_HEADER);","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"poppolette"},"content":"            ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"poppolette"},"content":"            addToTaskList(taskList, todo, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"poppolette"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"poppolette"},"content":"            echoUserInput(todo, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"String Index OOB. Looks like you forgot the description! Format: todo [description]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"poppolette"},"content":"     * Adds a deadline to the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"poppolette"},"content":"     * @param userInput String that user input","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"poppolette"},"content":"     * @param taskList An array of tasks. Max size of 100","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"poppolette"},"content":"     * @throws StringIndexOutOfBoundsException Thrown when user does not include any description after \u0027deadline\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"poppolette"},"content":"     * @throws ArrayIndexOutOfBoundsException Thrown when user input does not follow [description] /by [time]","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"poppolette"},"content":"    public static void addDeadline(String userInput, Task[] taskList)","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"poppolette"},"content":"            throws StringIndexOutOfBoundsException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"poppolette"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"poppolette"},"content":"            String taskDescription \u003d userInput.split(DEADLINE_IDENTIFIER)[DESCRIPTION].substring(DEADLINE_HEADER);","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"poppolette"},"content":"            String timing \u003d userInput.split(DEADLINE_IDENTIFIER)[TIMING];","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"poppolette"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, timing);","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"poppolette"},"content":"            addToTaskList(taskList, deadline, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"poppolette"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"poppolette"},"content":"            echoUserInput(deadline, taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"poppolette"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"String Index OOB. Did you forget the /by? Format: deadline [Description] /by [Time]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":223,"author":{"gitId":"poppolette"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"poppolette"},"content":"            System.out.println(\"Array Index OOB. Did you forget the /by? Format: deadline [Description /by [Time]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":226,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"poppolette"},"content":"    public static void showListOfCommands() {","lastModifiedDate":"2021-09-05"},{"lineNumber":231,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"poppolette"},"content":"        System.out.println(\"Unfortunately, my definitely human brain is unable to understand what you mean.\\nThe list \"","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"poppolette"},"content":"                + \"of sentences I understand are: \\n todo [Description] \\n event [Description] /at [Time] \\n \"","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"poppolette"},"content":"                + \"deadline [Description] /by [Time] \\n list \\n done [Task Number] \\n bye \\n bot?\");","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"poppolette"},"content":"        System.out.println(LINEBAR);","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"poppolette"},"content":"     * This function is called upon program execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"poppolette"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":241,"author":{"gitId":"poppolette"},"content":"     * @param args System arguments that are added to the program","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"poppolette"},"content":"        greetUser();","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"poppolette"},"content":"        Scanner readUserInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"poppolette"},"content":"        Task[] taskList \u003d new Task[MAX_LIST_SIZE];","lastModifiedDate":"2021-09-01"},{"lineNumber":247,"author":{"gitId":"poppolette"},"content":"        String userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"poppolette"},"content":"        String identifier;","lastModifiedDate":"2021-08-31"},{"lineNumber":249,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"poppolette"},"content":"        while (true) {","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"poppolette"},"content":"            userInput \u003d readUserInput.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"poppolette"},"content":"            identifier \u003d userInput.split(\" \")[FIRST_WORD];","lastModifiedDate":"2021-09-01"},{"lineNumber":253,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"poppolette"},"content":"            switch (identifier) {","lastModifiedDate":"2021-08-31"},{"lineNumber":255,"author":{"gitId":"poppolette"},"content":"            case \"done\":","lastModifiedDate":"2021-08-31"},{"lineNumber":256,"author":{"gitId":"poppolette"},"content":"                completeTask(userInput, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":257,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-31"},{"lineNumber":258,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":259,"author":{"gitId":"poppolette"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":260,"author":{"gitId":"poppolette"},"content":"                bidGoodbye();","lastModifiedDate":"2021-08-24"},{"lineNumber":261,"author":{"gitId":"poppolette"},"content":"                return;","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"poppolette"},"content":"            case \"bot?\":","lastModifiedDate":"2021-08-31"},{"lineNumber":264,"author":{"gitId":"poppolette"},"content":"                denyBotNature();","lastModifiedDate":"2021-08-24"},{"lineNumber":265,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":266,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"poppolette"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"poppolette"},"content":"                listAllTasks(taskList, taskIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":271,"author":{"gitId":"poppolette"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"poppolette"},"content":"                addToDo(userInput, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":273,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-31"},{"lineNumber":274,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":275,"author":{"gitId":"poppolette"},"content":"            case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":276,"author":{"gitId":"poppolette"},"content":"                addEvent(userInput, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":277,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-31"},{"lineNumber":278,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"poppolette"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":280,"author":{"gitId":"poppolette"},"content":"                addDeadline(userInput, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":281,"author":{"gitId":"poppolette"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":282,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"poppolette"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"poppolette"},"content":"                showListOfCommands();","lastModifiedDate":"2021-09-05"},{"lineNumber":285,"author":{"gitId":"poppolette"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":286,"author":{"gitId":"poppolette"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"poppolette":284,"-":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" * Represents a Deadline input by user. Identified by \u0027deadline\u0027 header and \u0027\\by\u0027.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    String deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * Creates a Deadline and assigns taskDescription and deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription String before the \u0027\\by\u0027 in the user input. Represents task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"     * @param deadline String after the \u0027\\by\u0027 in the user input. Represents time that deadline should be done by.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    public Deadline(String taskDescription, String deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     * Displays the current deadline as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[D][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" * Represents an Event input by the user. Identified by \u0027event\u0027 header and \u0027\\at\u0027.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"    String time;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * Creates a Deadline and assigns taskDescription and deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription String before the \u0027\\by\u0027 in the user input. Represents task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"     * @param timing String after the \u0027\\by\u0027 in the user input. Represents the time that the event will occur.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    public Event(String taskDescription, String timing) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"        this.time \u003d timing;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     * Displays the current event as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[E][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":" * Represents a task input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":" * Is superclass of Deadline, Event and ToDo.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":"    public String taskDescription;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     * Creates a task and assigns the input to taskDescription","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * @param taskDescription A String that the user input","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * Retrieves the completion status of a specified task","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     * @return \"X\" if task is completed, \" \" otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"        return (isDone ? \"X\" : \" \"); //Mark completed tasks with an X","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"poppolette"},"content":"     * Sets boolean isDone to true","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"poppolette"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"poppolette"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"poppolette"},"content":"     * Displays the current task as well as its status","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[ ] (taskDescription)\" The box will be [X] if the task is completed","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"poppolette"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"poppolette":42}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"poppolette"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"poppolette"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"poppolette"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"poppolette"},"content":" * Represents an item that the user has to do at a later point in time.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"poppolette"},"content":" * Inherits Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"poppolette"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"poppolette"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"poppolette"},"content":"     * Creates a ToDo ond assigns the user input to description.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"poppolette"},"content":"     * @param description A String that the user input. Represents the task that user needs to do.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"poppolette"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"poppolette"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"poppolette"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"poppolette"},"content":"     * Displays the current ToDo item as well as completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"poppolette"},"content":"     * @return A string in the format \"[T][ ] (taskDescription)\" The box will be [X] if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"poppolette"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"poppolette"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"poppolette"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"poppolette"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"poppolette"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"poppolette"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"poppolette"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"poppolette":28}}]
