[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DmitriYam":2,"-":22}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"T|X|fwefds","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"T| |fewfdsf","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"E|X| read book |1999-03-22|1933","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"DmitriYam":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":" * Duke is a your friendly note taking bot.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":" * Duke keeps track of all your tasks in a reader-friendly format,","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":" * even after you close the application","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":" *","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":" * @author  Dmitri Yam","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":" * @version 1.0","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":" * Cool @since   2021-09-26","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"public class Duke {","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"     * Initialises a new object Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"     * @param path Location of data file to store tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"     * @throws IOException Throws IOException when there is an error","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    public Duke(String path) throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        ui.hello();","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        this.storage \u003d new Storage(\"data.txt\");","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"            taskList \u003d storage.read();","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"        }catch(IOException e){","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"    protected void run() throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"        String userInput;","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"        boolean exit \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"        while (exit) {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"                try {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"                    userInput \u003d ui.readCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"                    Command c \u003d Parser.parse(userInput, taskList, ui,storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"                    c.run();","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"                    exit \u003d c.exit();","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"                }","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"    public static void main (String[]args) throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"        Duke d \u003d new Duke(\"data.txt\");","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"        d.run();","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.*;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":" * Reads and formats all inputs from the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"import javax.swing.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"public class Parser {","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"     * Returns a Command depending on the input from the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"     * DukeException is thrown if it is unable to understand the command.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     * @param input Innput from user from the commandline","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     * @param taskList List of Existing task the user has","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Duke object to handle responses to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"     * @param storage object used to save all current tasks in Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"     * @return Executable command.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"     * @throws DukeException throws an exception when there is an error with the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    public static Command parse(String input, TaskList taskList, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        if (input.contentEquals(\"bye\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"            return new ByeCommand(ui);","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"            String taskDescription \u003d input.replaceFirst(\"todo\", \"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"            taskDescription \u003d taskDescription.stripLeading();","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"            if (taskDescription.isEmpty()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"            Task t \u003d new Task(taskDescription);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"            return new AddTaskCommand(taskList, t, ui, storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"            input \u003d input.replaceFirst(\"event\", \"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"            String[] parsedInput \u003d input.split(\"/at\");","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"            if(parsedInput.length \u003c 2){","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME]\");","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"            if (parsedInput[1].stripLeading().isEmpty()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Date and time cannot be empty!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"            String[] dateAndTime \u003d parsedInput[1].stripLeading().split(\" \");","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"            String[] dateCheck \u003d dateAndTime[0].split(\"-\");","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"            if(dateAndTime.length !\u003d 2){","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format for date and time! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME] \");","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"            if(dateCheck.length !\u003d 3){","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format for date and time! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME] \");","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"            Task t \u003d new Event(parsedInput[0], dateAndTime[0], dateAndTime[1]);","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"            return new AddTaskCommand(taskList, t, ui,storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"            input \u003d input.replaceFirst(\"deadline\", \"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"            String[] parsedInput \u003d input.split(\"/by\");","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"            if(parsedInput.length \u003c 2){","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME]\");","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"            if (parsedInput[1].stripLeading().isEmpty()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Date and time cannot be empty!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"            String[] dateAndTime \u003d parsedInput[1].stripLeading().split(\" \");","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"            String[] dateCheck \u003d dateAndTime[0].split(\"-\");","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"            if(dateAndTime.length !\u003d 2){","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format for date and time! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME] \");","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"            if(dateCheck.length !\u003d 3){","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please use the correct format for date and time! [EVENT NAME] /by [YEAR-MONTH-DAY] [TIME] \");","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"            Task t \u003d new Deadline(parsedInput[0], dateAndTime[0], dateAndTime[1]);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"            return new AddTaskCommand(taskList, t, ui,storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"            String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"            if (parsedInput.length \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Sorry done ____ cannot  be empty\");","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"            if (Integer.parseInt(parsedInput[1]) \u003e\u003d taskList.size() + 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"That is not in the list\");","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"            int task_index \u003d Integer.parseInt(parsedInput[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"            return new DoneCommand(taskList, task_index - 1, ui,storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"            String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"            if (parsedInput.length \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Sorry done ____ cannot  be empty\");","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"            if (Integer.parseInt(parsedInput[1]) \u003e\u003d taskList.size() + 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"That is not in the list\");","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"            int task_index \u003d Integer.parseInt(parsedInput[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"            return new DeleteCommand(taskList, task_index - 1, ui, storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"        }else if (input.startsWith(\"list\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"            return new ListCommand(taskList, ui);","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"            String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"            if(parsedInput.length !\u003d 2){","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"                throw new DukeException(\"Please follow the format: find [DESCRIPTION]\");","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"            return new FindCommand(taskList, ui, parsedInput[1]);","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"        }else{","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"            throw new DukeException(\"Sorry I dont understand\");","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"DmitriYam":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.io.File;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":" * Stores all data into a formatted text file.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"public class Storage {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"    protected String path;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    public Storage(String path){","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"     * Returns a list of saved tasks from \"data.txt\"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"     * Creates a file according to the file path if file is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"     * Throws IOException if an error occurs.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    public TaskList read() throws IOException{","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"        File t \u003d new File(this.path);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        TaskList taskArrayList \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        if(!t.exists()){","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"            t.createNewFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"            try{","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"                Scanner scanner \u003d new Scanner(t);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"                int index \u003d 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"                while(scanner.hasNext()){","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"                    String[] parts \u003d scanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"                    String type \u003d parts[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"                    String status \u003d parts[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"                    switch (type) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"                        case \"T\":","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"                            taskArrayList.add(new Task(description));","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"                            break;","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"                        case \"E\": {","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"                            String date \u003d parts[3];","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"                            taskArrayList.add(new Event(description, date, parts[4]));","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"                            break;","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"                        }","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"                        case \"D\": {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"                            taskArrayList.add(new Deadline(description, parts[3], parts[4]));","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"                            break;","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"                        }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"                    }","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"                    if(status.equals(\"X\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"                        taskArrayList.get(index).taskDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"                    }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"                    index++;","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"            }catch (IOException e){","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"        return taskArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"     * Writes the contents of the list of Tasks in Duke to a .txt file \"data.txt\"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"     * The data is stored as a formatted text file.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"     * @param taskList list of Tasks in Duke to be stored.","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"        StringBuilder txtData \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"        for (int i \u003d 0; i \u003c taskList.size() ;i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"            if (t instanceof Event) {","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"                txtData.append(\"E|\").append(t.getStatus()).append(\"|\").append(t.getName()).append(\"|\")","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"                        .append(((Event) t).getDates()).append(\"|\").append(((Event) t).getTime());","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"                txtData.append(\"D|\").append(t.getStatus()).append(\"|\").append(t.getName()).append(\"|\")","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"                        .append(((Deadline) t).getDates()).append(\"|\").append(((Deadline) t).getTime());","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"                txtData.append(\"T|\").append(t.getStatus()).append(\"|\").append(t.getName());","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"            txtData.append(\"\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"        try{","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"            fw.write(txtData.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"            fw.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"        }catch (IOException e){","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"DmitriYam":103}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":" * Prints all the outputs to the terminal.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"public class Ui {","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"    protected String readCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    protected void hello(){","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    public void printList(TaskList taskList){","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"List so far: \");","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        taskList.print();","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    public void bye(){","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"        scanner.close();","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"    public void delete(Task t, TaskList taskList){","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Got it. I\u0027ve deleted this task: \");","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Now you have \" + (taskList.size() - 1)+ \" tasks in the list\");","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"    public void done(Task t, TaskList taskList){","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Got it. I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Now you have \" + (taskList.size())+ \" tasks in the list\");","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"    public void add(Task t, TaskList taskList){","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"    public  void find(TaskList possibleTasks, String description){","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Tasks with keyword: \" + description);","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"        possibleTasks.print();","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":66}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"public class AddTaskCommand extends Command{","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    private  Task t;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    private TaskList tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for command when user wants to add a new task. Task can be either a normal task, an Event or a Deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     * @param tlist list for task to be added to","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"     * @param t Task to be added. Either be a normal task, an Event or a Deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Handles interaction with the user","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"     * @param storage updates \"data.txt\" file","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    public AddTaskCommand(TaskList tlist, Task t, Ui ui, Storage storage){","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        this.tlist \u003d tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        this.t \u003d t;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"    public  void run() throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        tlist.add(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        ui.add(t,tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        storage.save(tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":37}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"     * Constructor when user wants to close the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Handles interaction with the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    public ByeCommand(Ui ui){","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    public boolean exit(){","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        ui.bye();","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":21}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":" * Represents a command made by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    public  void run() throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    public boolean exit(){","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"        return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"DmitriYam":15}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"    private TaskList tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    private Task t;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for command when user wants to delete a task fron the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     * @param tlist list of tasks where task to be deleted is found","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Handles interaction with user.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"     * @param storage updates \"data.txt\" file","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    public DeleteCommand(TaskList tlist, int index, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"        this.tlist \u003d tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        this.t \u003d tlist.get(index);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        ui.delete(t,tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        tlist.remove(t);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        storage.save(tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":35}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"    private TaskList tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    private Task t;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for command when the user marks a task as done.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     * @param tlist List where task is found","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     * @param index Index of task to be marked done","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Handles interaction with user.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"     * @param storage updates \"data.txt\" file","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    public DoneCommand(TaskList tlist, int index, Ui ui,Storage storage){","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"        this.tlist \u003d tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        tlist.get(index).taskDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        this.t \u003d tlist.get(index);","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        ui.done(t, tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        t.taskDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        storage.save(tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":36}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    private TaskList tlist;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    private String description;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    public FindCommand(TaskList tlist, Ui ui,String description){","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"        this.tlist \u003d tlist;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"    public void run(){","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        TaskList possibleTasks \u003d tlist.find(this.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"        ui.find(possibleTasks, description);","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"DmitriYam":22}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"    private TaskList tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for command when the user wishes to look at the list of tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     * @param tlist list of Tasks to be viewed","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"     * @param ui Handles interaction with the user","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    public ListCommand(TaskList tlist, Ui ui){","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        this.tlist \u003d tlist;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    public void run(){","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"        ui.printList(tlist);","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"DmitriYam":25}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    protected String time;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"     * Represents a Deadline made by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     * @param name Description of Deadline.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"     * @param by Description of when the Deadline is.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    public Deadline(String name, String dates, String time){","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        super(name);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        this.localDate \u003d LocalDate.parse(dates);","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    public String getTime(){","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"        return this.time;","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"    public LocalDate getDates(){","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        return this.localDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    public String toString(){","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        return \"[D][\" + super.getStatus() + \"]\" + super.name + \"by \"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"                + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +\" \" + time;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DmitriYam":34}},{"path":"src/main/java/duke/tasks/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":" * Represents an exception thrown in Duke.","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"        super(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"DmitriYam":9}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"    protected String time;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     /**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     * Represents an Event made by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"     * @param name Description of Event.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"      * @param dates Description of date of event.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     * @param time Description of when the event is.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"    public Event(String name, String dates, String time){","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"        super(name);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"        this.localDate \u003d LocalDate.parse(dates);","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    public String getTime(){","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        return this.time;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    public LocalDate getDates(){","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        return this.localDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"    public String toString(){","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        return \"[E][\" + super.getStatus() + \"]\" + super.name + \"at: \"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"                + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +\" \" + time;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DmitriYam":36}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":" * Represents a task made by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"    protected String name;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for Task","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     * @param input Description of task.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    public Task(String input){","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"        this.name \u003d input;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    public void taskDone(){","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    public String getStatus(){","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    public String getName(){","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"        return this.name;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"    public String toString(){","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        return \"[T][\" + getStatus() + \"]\" + name;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"DmitriYam":36}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":" * Represents the list of Tasks made by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"public class TaskList {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"    //Contructor for TaskList","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    public TaskList(){","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    public void add(Task t){","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        this.taskList.add(t);","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    public int size(){","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    public Task get(int index){","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    public void print(){","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"            System.out.print(i +  1);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(taskList.get(i));","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    public TaskList find(String description){","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"        TaskList possibleTasks \u003d new TaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"            if (task.getName().contains(description)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"                possibleTasks.add(task);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"        return possibleTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"    public void  remove(Task t){","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        taskList.remove(t);","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"DmitriYam":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"todo Dmitri: Answer CS2113 tutorial questions","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"deadline weekly CS2113 quiz /by 23/12/32 9pm","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"event CS2113 lecture /at 23/122/23 900","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"done 2","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"done 3","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"list","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DmitriYam":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DmitriYam":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DmitriYam":1,"-":37}}]
