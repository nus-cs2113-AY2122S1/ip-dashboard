[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"Duke is a Personal Assistant Chatbot on the Command Line Interface that helps a person to keep track of various things, named after the Java Mascot.","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"## Setup","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"Prerequisites: Java 11","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"1. Download the latest release","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"1. Navigate to the path containing the jar file on your terminal","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"1. Launch the application using the `java -jar` command on the terminal eg. `java -jar ip.jar`","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"If the application has launched correctly, a welcome message will be displayed in the terminal.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"# `list ` List all tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"Format: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"# `done` Mark task as done","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"Marks the task at the given index as completed.","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"The index refers to the index number of the task shown in the list of tasks. The index must be a positive integer and it cannot exceed the current maximum number of tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"`done 1` - marks the first task as completed","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"# `delete` Delete task","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"Removes the task at the specified index from the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"The index refers to the index number of the task shown in the list of tasks. The index must be a positive integer and it cannot exceed the current maximum number of tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"Format `done INDEX`","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"ng-andre"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"ng-andre"},"content":"`delete 2` - removes the second entry in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"ng-andre"},"content":"# `find` Search for tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"ng-andre"},"content":"Find and list all tasks with descriptions containing the given search query.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"ng-andre"},"content":"A valid search query must be entered. The search query is case-insensitive. Only full words will be matched, and only the task description will be searched. If there are no tasks containing the search query, the following message will be displayed:","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"ng-andre"},"content":"`No results found`","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"ng-andre"},"content":"Format: `find QUERY`","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"ng-andre"},"content":"Example: `find assignment` - find and lists all tasks containing \"assignment\"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ng-andre"},"content":"# `todo` Add new ToDo","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"ng-andre"},"content":"Add a new ToDo type to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"ng-andre"},"content":"The task description cannot be empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"ng-andre"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"ng-andre"},"content":"Example: `todo assignment 2` - adds a new ToDo with the description \"assignment 2\" to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"ng-andre"},"content":"# `deadline` Add new Deadline","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"ng-andre"},"content":"Add a new Deadline to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"ng-andre"},"content":"The deadline description and due date cannot be empty. The description and due date should be separated with a `/` character. The due date should be in the format `DDMMYYY`, `DD/MM/YYYY` or `DD-MM-YYYY`, otherwise an error message will be displayed and the deadline will not be added to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"ng-andre"},"content":"Format: `deadline DEADLINE_DESCRIPTION / DEADLINE_DUE_DATE`","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"ng-andre"},"content":"Example: `deadline tutorial 3 / 02042022` - adds a new Deadline with the description \"tutorial 3\" to the task list, with a due date of 2 April 2022.","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"ng-andre"},"content":"# `event` Add new Event","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"ng-andre"},"content":"Add a new Event to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"ng-andre"},"content":"The event description and date cannot be empty. The description and date should be separated with a `/` character. The date should be in the format `DDMMYYY`, `DD/MM/YYYY` or `DD-MM-YYYY`, otherwise an error message will be displayed and the event will not be added to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"ng-andre"},"content":"Format: `deadline EVENT_DESCRIPTION / EVENT_DUE_DATE`","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"ng-andre"},"content":"Example: `event christmas / 25122021` - adds a new Event with the description \"christmas\" to the task list on 25 December 2021.","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"ng-andre"},"content":"# `bye` Quit application","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"ng-andre"},"content":"Exits the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"ng-andre"},"content":"Format: `bye`","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"ng-andre":65,"-":21}},{"path":"src/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"import ui.UI;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"    public static final String FILE_NAME \u003d \"duke/data/duke.txt\";","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"     * Creates an instance of the Duke Personal Assistant Chatbot by instantiating","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"     * a new Storage, TaskList and Parser. The TaskList will be loaded from the","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"     * duke.txt file if possible.","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"    public Duke() {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"        this.storage \u003d new Storage(FILE_NAME);","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"        this.tasks \u003d storage.loadData();","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"        this.parser \u003d new Parser(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"     * Starts the Duke instance by printing a welcome message and takes in user","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"     * input. Commands are executed according to the user input and will terminate","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"     * when the user inputs the exit command \"bye\".","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"    public void run() {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"        UI.printWelcome();","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"        String userInput;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"        while (!userInput.equalsIgnoreCase(COMMAND_EXIT)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"            parser.parseCommand(userInput);","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"            storage.saveFile(tasks.getTasks());","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"ng-andre"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ng-andre"},"content":"        UI.printExitMessage();","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"ng-andre"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ng-andre"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"ng-andre"},"content":"        duke.run();","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ng-andre":47,"-":2}},{"path":"src/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"import duke.exception.MissingInputException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"import ui.ErrorUI;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"public class Parser {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"    public static final String SEPARATOR_SPACE \u003d \" \";","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"    public static final String SEPARATOR_SLASH \u003d \"/\";","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"     * Creates an instance of a Parser from a given taskList for tasks to be stored in.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"     * @param taskList TaskList for the Tasks to be stored in.","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"ng-andre"},"content":"     * Parses the raw input data from the user by checking the first word of the line entered,","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"ng-andre"},"content":"     * then executing the corresponding command accordingly.","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"ng-andre"},"content":"     * @param userInput String containing the raw user input to be parsed","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"ng-andre"},"content":"    public void parseCommand(String userInput) {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"ng-andre"},"content":"        String[] inputs \u003d userInput.split(SEPARATOR_SPACE, 2);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"ng-andre"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"ng-andre"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_EXIT:","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"ng-andre"},"content":"                return;","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"ng-andre"},"content":"                taskList.listTasks();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_DONE:","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"ng-andre"},"content":"                taskList.completeTask(inputs[1]);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"ng-andre"},"content":"                taskList.addTask(parseDeadline(inputs[1]));","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"ng-andre"},"content":"                taskList.addTask(parseEvent(inputs[1]));","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"ng-andre"},"content":"                taskList.addTask(parseToDo(inputs[1]));","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"ng-andre"},"content":"                taskList.deleteTask(inputs[1]);","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"ng-andre"},"content":"            case COMMAND_FIND:","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"ng-andre"},"content":"                taskList.findTask(inputs[1]);","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"ng-andre"},"content":"                break;","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"ng-andre"},"content":"            default:","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"ng-andre"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"ng-andre"},"content":"        } catch (MissingInputException | ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidDescription();","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"ng-andre"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"ng-andre"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidIndex();","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"ng-andre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidDate();","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ng-andre"},"content":"     * Parses the user input into an Event object and returns it to be added into the TaskList.","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the user input of the task details without the command","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"ng-andre"},"content":"     * @return Task object containing an Event with a LocalDate attribute.","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"ng-andre"},"content":"     * @throws MissingInputException  when there is no date and time specified in the input.","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"ng-andre"},"content":"     * @throws DateTimeParseException when the given date cannot be parsed into a LocalDate object properly.","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"ng-andre"},"content":"    private Task parseEvent(String input) throws MissingInputException, DateTimeParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"ng-andre"},"content":"        String[] inputs \u003d input.split(SEPARATOR_SLASH, 2);","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"ng-andre"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) { //no / detected","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"ng-andre"},"content":"            throw new MissingInputException();","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"ng-andre"},"content":"        return new Event(inputs[0], parseDate(inputs[1]));","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"ng-andre"},"content":"     * Parses the user input into a Deadline object and returns it to be added into the TaskList.","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the user input of the task details without the command","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"ng-andre"},"content":"     * @return Task object containing a Deadline with a LocalDate attribute.","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"ng-andre"},"content":"     * @throws MissingInputException  when there is no date and time specified in the input.","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"ng-andre"},"content":"     * @throws DateTimeParseException when the given date cannot be parsed into a LocalDate object properly.","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"ng-andre"},"content":"    private Task parseDeadline(String input) throws MissingInputException, DateTimeParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"ng-andre"},"content":"        String[] inputs \u003d input.split(SEPARATOR_SLASH, 2);","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"ng-andre"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) { //no / detected","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"ng-andre"},"content":"            throw new MissingInputException();","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"ng-andre"},"content":"        return new Deadline(inputs[0], parseDate(inputs[1]));","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"ng-andre"},"content":"     * Parses the user input into a ToDo object and returns it to be added into the TaskList.","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the user input of the task details without the command","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"ng-andre"},"content":"     * @return Task object containing a Deadline with a LocalDate attribute.","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"ng-andre"},"content":"    private Task parseToDo(String input) {","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"ng-andre"},"content":"        return new ToDo(input);","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"ng-andre"},"content":"     * Parses the given String containing the date into a LocalDate object.","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"ng-andre"},"content":"     * @param date String containing the date in the format ddMMyyyy or dd/MM/yyyy or dd-MM-yyyy","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"ng-andre"},"content":"     * @return Returns a LocalDate object containing the date.","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"ng-andre"},"content":"     * @throws DateTimeParseException when the given date cannot be parsed into a LocalDate object properly.","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"ng-andre"},"content":"    private LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"ng-andre"},"content":"        return LocalDate.parse(date.trim(), DateTimeFormatter.ofPattern(\"[ddMMyyyy][dd/MM/yyyy][dd-MM-yyyy]\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"ng-andre":141}},{"path":"src/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import duke.exception.MissingInputException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"import ui.ErrorUI;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"import ui.UI;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"import java.io.File;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"public class Storage {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"    private final File saveDataFile;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    private final File saveDataDirectory;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"     * Creates an instance of the Storage class from a given file path of the save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"     * @param saveLocation A string containing the relative path of the save file to be loaded","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"    public Storage(String saveLocation) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"        this.saveDataFile \u003d new File(saveLocation);","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"        this.saveDataDirectory \u003d saveDataFile.getParentFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"     * Loads the list of tasks from the save file specified in saveDataFile by parsing the input","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"     * into a TaskList and returning it.","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"ng-andre"},"content":"     * @return Returns a TaskList object containing the list of tasks loaded from the save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ng-andre"},"content":"    public TaskList loadData() {","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"ng-andre"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"ng-andre"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ng-andre"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ng-andre"},"content":"            //if save file does not exist, create new file","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ng-andre"},"content":"            //otherwise, read and load duke.data","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ng-andre"},"content":"            if (!saveDataDirectory.exists()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"ng-andre"},"content":"                saveDataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ng-andre"},"content":"            if (!saveDataFile.exists()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ng-andre"},"content":"                saveDataFile.createNewFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"ng-andre"},"content":"                UI.printNewSave();","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"ng-andre"},"content":"                return new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ng-andre"},"content":"            else {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ng-andre"},"content":"                Scanner in \u003d new Scanner(saveDataFile);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ng-andre"},"content":"                while (in.hasNext()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ng-andre"},"content":"                    String nextLine \u003d in.nextLine();","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ng-andre"},"content":"                    String[] inputs \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ng-andre"},"content":"                    switch (inputs[0]) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ng-andre"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ng-andre"},"content":"                        tasks.add(new ToDo(inputs[2]));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ng-andre"},"content":"                        break;","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ng-andre"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ng-andre"},"content":"                        tasks.add(new Event(inputs[2], parseDate(inputs[1])));","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ng-andre"},"content":"                        break;","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ng-andre"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ng-andre"},"content":"                        tasks.add(new Deadline(inputs[2], parseDate(inputs[1])));","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ng-andre"},"content":"                        break;","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ng-andre"},"content":"                    default:","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ng-andre"},"content":"                        throw new MissingInputException();","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ng-andre"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ng-andre"},"content":"                    if (inputs[1].equals(\"[X]\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"ng-andre"},"content":"                        tasks.get(tasks.size() - 1).finishTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ng-andre"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"ng-andre"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ng-andre"},"content":"            taskList.setTasks(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"ng-andre"},"content":"        } catch (IOException | MissingInputException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidSaveFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"ng-andre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidDateLoaded();","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ng-andre"},"content":"        return taskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"ng-andre"},"content":"     * Saves the TaskList containing all tasks by parsing it into a string and writing it","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ng-andre"},"content":"     * into a text file in the path specified by saveDataFile.","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"ng-andre"},"content":"     * @param tasks The TaskList to be converted into a save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"ng-andre"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ng-andre"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ng-andre"},"content":"            FileWriter fileWriter \u003d new FileWriter(saveDataFile, false);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ng-andre"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ng-andre"},"content":"                String data \u003d task.exportTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ng-andre"},"content":"                fileWriter.write(data);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"ng-andre"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"ng-andre"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"ng-andre"},"content":"            ErrorUI.printInvalidWrite();","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"ng-andre"},"content":"     * Parses the given String containing the date into a LocalDate object.","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"ng-andre"},"content":"     * @param date String containing the date in the format ddMMyyyy or dd/MM/yyyy or dd-MM-yyyy","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"ng-andre"},"content":"     * @return Returns a LocalDate object containing the date.","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"ng-andre"},"content":"     * @throws DateTimeParseException when the given date cannot be parsed into a LocalDate object properly.","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"ng-andre"},"content":"    private LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"ng-andre"},"content":"        return LocalDate.parse(date.trim(), DateTimeFormatter.ofPattern(\"[ddMMyyyy][dd/MM/yyyy][dd-MM-yyyy]\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ng-andre":117}},{"path":"src/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ng-andre":4}},{"path":"src/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public class InvalidIndexException extends Throwable {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ng-andre":4}},{"path":"src/duke/exception/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public class MissingInputException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ng-andre":4}},{"path":"src/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"    public static final String DEADLINE_ICON \u003d \"[D]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"    public Deadline(String taskName, LocalDate dueDate) {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"     * Exports the task as a string in the standard format to be stored in the save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"     * @return The formatted string with the task data.","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"    public String exportTask() {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"        return \"D|\" + super.getStatus() + \"|\" + super.toString() + \"|\" + dueDate + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"        return DEADLINE_ICON + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ng-andre":28}},{"path":"src/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"    public static final String EVENT_ICON \u003d \"[E]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"    private LocalDate duration;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"    public Event(String taskName, LocalDate duration) {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"     * Exports the task as a string in the standard format to be stored in the save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"     * @return The formatted string with the task data.","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"    public String exportTask() {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"        return \"E|\" + super.getStatus() + \"|\" + super.toString() + \"|\" + duration + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"        return EVENT_ICON + super.toString() + \" (at: \" + duration + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ng-andre":28}},{"path":"src/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"    private String taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"        return taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"     * Displays an icon showing whether a task has been marked as completed.","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"     * @return String depicting the completion status of the task.","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"    public void finishTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"    public abstract String exportTask();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"        return getTaskName();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ng-andre":39}},{"path":"src/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"import ui.UI;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"public class TaskList {","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"     * Creates an instance of a TaskList to store all Tasks.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"     * Adds a given Task into the TaskList and prints a confirmation message to the console.","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"     * @param newTask Task to be added into the TaskList.","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"        UI.printAddTask(newTask);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"     * Marks the task at the specified index as completed and prints a confirmation message","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"     * to the console.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the index of the task to complete.","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"     * @throws InvalidIndexException when the index specified exceeds the number of tasks in","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"     *                               the TaskList","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"    public void completeTask(String input) throws InvalidIndexException {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ng-andre"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ng-andre"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ng-andre"},"content":"        tasks.get(index).finishTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Completed task: \" + tasks.get(index).getTaskName());","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"ng-andre"},"content":"     * Deletes the task at the specified index and prints a confirmation message to the console.","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the index of the task to complete.","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"ng-andre"},"content":"     * @throws InvalidIndexException when the index specified exceeds the number of tasks in","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"ng-andre"},"content":"     *                               the TaskList","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ng-andre"},"content":"    public void deleteTask(String input) throws InvalidIndexException {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"ng-andre"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ng-andre"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"ng-andre"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Removed task: \" + tasks.get(index).getTaskName());","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ng-andre"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ng-andre"},"content":"     * Finds all tasks containing the given query and prints the list of tasks found to","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"ng-andre"},"content":"     * the console.","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"ng-andre"},"content":"     * @param input String containing the search query.","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"ng-andre"},"content":"    public void findTask(String input) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ng-andre"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ng-andre"},"content":"            System.out.println(\"Please enter a valid input\");","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ng-andre"},"content":"            return;","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ng-andre"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ng-andre"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ng-andre"},"content":"            if (t.getTaskName().contains(input.trim())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"ng-andre"},"content":"                searchResults.add(t);","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ng-andre"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ng-andre"},"content":"            System.out.println(\"No results found\");","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ng-andre"},"content":"        else {","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ng-andre"},"content":"            System.out.println(\"Tasks containing \" + input.trim() + \":\");","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ng-andre"},"content":"            for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ng-andre"},"content":"                System.out.println((i + 1) + \". \" + searchResults.get(i).toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ng-andre"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"ng-andre"},"content":"     * Lists all the tasks in the TaskList with their respective index and completion status.","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"ng-andre"},"content":"    public void listTasks() {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ng-andre"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ng-andre"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i).getStatus() + tasks.get(i).toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ng-andre"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"ng-andre"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"ng-andre"},"content":"        return tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"ng-andre"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ng-andre"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ng-andre":106}},{"path":"src/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"    public static final String TODO_ICON \u003d \"[T]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"     * Exports the task as a string in the standard format to be stored in the save file.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"     * @return The formatted string with the task data.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"    public String exportTask() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"        return \"T|\" + super.getStatus() + \"|\" + super.toString() + \"|\" + System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"        return TODO_ICON + super.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ng-andre":25}},{"path":"src/ui/ErrorUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"public class ErrorUI {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidDate() {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Please enter a valid date\");","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Date should be in the form DDMMYYYY or DD/MM/YYYY or DD-MM-YYYY\");","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Please enter a valid command\");","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidDescription() {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Please enter a valid description\");","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidIndex() {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Please enter a valid task number\");","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidSaveFile() {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Error loading save file\");","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidDateLoaded() {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Invalid date in save file duke.data\");","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"    public static void printInvalidWrite() {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Error writing to save file\");","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"ng-andre":33}},{"path":"src/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ng-andre"},"content":"package ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"ng-andre"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ng-andre"},"content":"public class UI {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"ng-andre"},"content":"    public static final String WELCOME_MESSAGE \u003d","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"ng-andre"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ng-andre"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ng-andre"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ng-andre"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ng-andre"},"content":"                    + \"Hello I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"ng-andre"},"content":"     * Prints the welcome message with the Duke logo to the console.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"ng-andre"},"content":"    public static void printWelcome() {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ng-andre"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ng-andre"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ng-andre"},"content":"    public static void printNewSave() {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"No existing save duke.data\");","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"New save file created\");","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ng-andre"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ng-andre"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"ng-andre"},"content":"     * Prints a message to the console confirming that a new task has been added.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"ng-andre"},"content":"     * @param newTask Task to be added","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"ng-andre"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"ng-andre"},"content":"    public static void printAddTask(Task newTask) {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ng-andre"},"content":"        System.out.println(\"Added: \" + newTask.getTaskName());","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ng-andre"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"ng-andre"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"ng-andre":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ng-andre"},"content":"javac  -cp C:\\Users\\Andre\\OneDrive\\Desktop\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\Andre\\OneDrive\\Desktop\\ip\\src\\main\\java*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ng-andre":1,"-":20}}]
