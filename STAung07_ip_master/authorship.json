[{"path":"data/friday.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"deadline | X | buy Valentines Day gift for Pepper | 2022-02-14","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"STAung07":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"FRIDAY is a command-line application run on Java-11 for easy task management. ","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"It is modelled after Tony Stark aka Iron Man\u0027s own AI helper.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"* [Set-Up](#set-up)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"* [Program Start](#program-start)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    * [Adding Tasks](#adding-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"        * [Add Todo Tasks](#add-todo-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"        * [Add Deadline Tasks](#add-deadline-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"        * [Add Event Tasks](#add-event-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    * [List](#list)","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    * [Finding Tasks](#finding-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    * [Marking Tasks as Done](#marking-tasks-as-done)","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    * [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"* [Program Exit](#program-exit)","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"* [FAQs](#faqs)","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"* [References](#references)","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"## Set Up","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"1. Ensure you have Java 11 installed in your computer.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"2. If Java 11 is not installed, click [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) ","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"to download it.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"3. After downloading, add path to bin folder to PATH variable in Environment Variables","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"4. Check if Java is downloaded by running `java --version` in your Terminal.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"5. Download the latest jar file from [here](https://github.com/STAung07/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"6. Save jar file in folder of choice.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"## Program Start","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"Open terminal in folder containing `Friday.jar` file.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"Type in command `java -jar Friday.jar`.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"The screen below should appear after a short while (On first load with no data stored, ","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"`Data successfully loaded into memory sir` line won\u0027t appear. However, it will appear on successive runs of program).\\","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"This indicates that previous data from storage has been loaded successfully into your current task list,","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"and you can proceed with using the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"                           .*%@@@@@@@@@@@@@@@@@@@@@@\u0026(.                         ","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"                      /@@\u0026*  #@@@@@@@@@@@@@@@@@@@@@@@  .%@@%.                   ","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"                  \u0026@@*        @@@@@@@@@@@@@@@@@@@@@@,       .@@@.               ","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"              *@@#            ,@@@@@@@@@@@@@@@@@@@@#            *@@(            ","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"             \u0026%                \u0026@@@@@@@@@@@@@@@@@@@                /@.          ","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"           .%                   @@@@@@@@@@@@@@@@@@,                  ,%         ","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"           %@                   ,@@@@@@@@@@@@@@@@%                   *@         ","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"           @@                    #@@@@@@@@@@@@@@@                    /@/        ","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"          *@@                                                        (@\u0026        ","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"          \u0026@@.                                                       %@@.       ","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"          @@@.                                                       \u0026@@*       ","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"         .@@@,                                                       \u0026@@/       ","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"         ,@@@*                                                       @@@%       ","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"         *@@@*                                                       @@@@       ","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"         (@@@.                                                       \u0026@@@       ","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"         @@@\u0026  /@\u0026%/,.                                      .,*#%\u0026@  ,@@@/      ","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"         @@@. .@@@@@@@@@@@@@@@@@@%###############@@@@@@@@@@@@@@@@@@(  @@@(      ","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"         @@%     ,\u0026@@@@@@@@\u0026%/,.                   .*#\u0026\u0026@@@@@@@@(.    .@@#      ","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"         @@.                                                           %@(      ","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"         @@                                                            *@/      ","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"         \u0026@.                                                           #@,      ","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"         \u0026@@,                                                         @@@.      ","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"         %@@@..                                                      #@@@       ","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"         *@@@@ \u0026/                                                .@,/@@@\u0026       ","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"          \u0026@@@@.#@/                                             @@.#@@@@.       ","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"          ,@@@@@*/@@.                                         %@\u0026 @@@@@\u0026        ","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"          .@@@@@@#.@@*                                       @@#,@@@@@@#        ","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"           @@@@@@@@ \u0026@,                                     \u0026@.(@@@@@@@,        ","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"           /@@@@@@@@,/#                                    .\u0026 @@@@@@@@@         ","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"            @@@@@@@@@#..     \u0026@@\u0026%#######((((####%@@@.     ,,@@@@@@@@@,         ","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"            *@@@@@@@@@. *@%/@*                      .@%*@%  %@@@@@@@@\u0026          ","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"             \u0026@@@@@@@\u0026                                      ,@@@@@@@@,          ","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"             *@@@@@@@                 ,\u0026\u0026\u0026\u0026(                 #@@@@@@\u0026           ","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"              /@@@@@@#        .\u0026@@@@@@@@@@@@@@@@@@@*        *@@@@@@\u0026            ","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"                 (@@@@@@@, .@@@@@@@@@@@@@@@@@@@@@@@@@@/  #@@@@@@\u0026.              ","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"                    .\u0026@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@%(@@@@@*                  ","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"                        .#@@,@#                    *@##@\u0026,                      ","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"  __      _     _             ","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":" / _|    (_)   | |            ","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"| |_ _ __ _  __| | __ _ _   _ ","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"|  _| \u0027__| |/ _` |/ _` | | | |","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"| | | |  | | (_| | (_| | |_| |","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"|_| |_|  |_|\\__,_|\\__,_|\\__, |","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"                         __/ |","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"                        |___/ ","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"Initiating FRIDAY","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"Allow me to fetch the data from the archives ...","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"Data successfully loaded into memory sir.","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"Hello Mr Stark, how may I be of assistance to you today?","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"### Adding Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"Users are able to add 3 different types of tasks, todo, deadline or event tasks. ","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"#### Add Todo Tasks ","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"Todo tasks without a deadline or specific date. ","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"Usage: `todo \u003cTASK_NAME\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"* **todo** keyword is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"* TASK_NAME should not be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"todo design Mach-47","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"Very well, adding task \"design Mach-47\"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"#### Add Deadline Tasks ","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"Deadline tasks where user has to finish task by a certain date e.g. finish assignment by 30th September.","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"Usage: `deadline \u003cTASK_NAME\u003e /by \u003cDATE\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"* **deadline** keyword is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"* TASK_NAME should not be empty","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"* **/by** keyword needs to be present before DATE","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"* DATE needs to be provided in format _YYYY-MM-DD_","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"deadline buy Valentines Day gift for Pepper /by 2022-02-14","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"Very well, adding task \"buy Valentines Day gift for Pepper\".","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"#### Add Event Tasks ","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"Event tasks where an event occurs on a certain date e.g. 2027 midterms at 2nd October.","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"Usage: `event \u003cTASK_NAME\u003e /at \u003cDATE\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"* **event** keyword is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"* \u003cTASK_NAME\u003e should not be empty","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"* **/at** keyword needs to be present before DATE","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"* DATE needs to be provided in format _YYYY-MM-DD_","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"event fight Thanos /at 2021-11-01","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"Very well, adding task \"fight Thanos\".","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"### List","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"Lists all current tasks in task list of user.","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"Usage: `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"* Command is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"You have a total of 3 tasks sir, listing them out now.","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"\u003e[T][ ]design Mach-47","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"\u003e[D][ ]buy Valentines Day gift for Pepper(by: 14 Feb 2022)","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"\u003e[E][ ]fight Thanos(at: 01 Nov 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"### Finding Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"Users can find all tasks containing their query e.g. books, read books etc.","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"Usage: `find \u003cQUERY\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"* Command is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"* Search for QUERY within tasks is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"find thanos","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"Here are all your current tasks matching your query sir.","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"\u003e[E][ ]fight Thanos(at: 01 Nov 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"### Marking Tasks as Done","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"Users can mark any task they previously added into the list as \"Done\" using the position of task in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"Usage: `done \u003cPOSITION_OF_TASK\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"* **done** keyword is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"* POSITION_OF_TASK should be an integer starting from 1","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"* There should be a task at the position of integer specified.","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"done 1","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"STAung07"},"content":"Your task \"design Mach-47\" is marked as complete. Splendid sir.","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"STAung07"},"content":"[X]design Mach-47","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"STAung07"},"content":"Running `list` command after this will indicate an \u0027X\u0027 beside task marked as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"You have a total of 3 tasks sir, listing them out now.","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"\u003e[T][X]design Mach-47","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"\u003e[D][ ]buy Valentines Day gift for Pepper(by: 14 Feb 2022)","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"\u003e[E][ ]fight Thanos(at: 01 Nov 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"### Deleting Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"Users can delete any task from the list of tasks using the position of task in the list as well.","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"Usage: `delete \u003cPOSITION_OF_TASK`","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"* **delete** keyword is case - insensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"* POSITION_OF_TASK should be an integer starting from 1","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"* There should be a task at the position of integer specified.","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"Example","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"delete 1","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"Alright sir, removing task \"design Mach-47\".","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"You now have 2 tasks remaining.","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"Running `list` command after this will show the new list without the deleted task.","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"You have a total of 2 tasks sir, listing them out now.","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"\u003e[D][ ]buy Valentines Day gift for Pepper(by: 14 Feb 2022)","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"\u003e[E][ ]fight Thanos(at: 01 Nov 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"STAung07"},"content":"## Program Exit","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"Users can type `bye` command and any point to exit the program. Command is case - insensitive as well.","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"Output","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"Powering off now. Good Bye Mr Stark.","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"## Command Summary","lastModifiedDate":"2021-09-30"},{"lineNumber":244,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"STAung07"},"content":"Action | Command Format | Example","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"STAung07"},"content":"------------ | ------------ | ------------","lastModifiedDate":"2021-09-30"},{"lineNumber":247,"author":{"gitId":"STAung07"},"content":"Add Todo task | `todo \u003cTASK_NAME\u003e` | `todo design Mach-47`","lastModifiedDate":"2021-09-30"},{"lineNumber":248,"author":{"gitId":"STAung07"},"content":"Add Deadline task | `deadline \u003cTASK_NAME\u003e /by \u003cDATE\u003e` | `deadline buy Valentines Day gift for Pepper /by 2022-02-14`","lastModifiedDate":"2021-09-30"},{"lineNumber":249,"author":{"gitId":"STAung07"},"content":"Add Event task | `event \u003cTASK_NAME\u003e /at \u003cDATE\u003e` | `event fight Thanos /at 2021-11-01`","lastModifiedDate":"2021-09-30"},{"lineNumber":250,"author":{"gitId":"STAung07"},"content":"List tasks | `list` | `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":251,"author":{"gitId":"STAung07"},"content":"Find tasks | `find \u003cQUERY\u003e` | `find thanos` ","lastModifiedDate":"2021-09-30"},{"lineNumber":252,"author":{"gitId":"STAung07"},"content":"Mark task as done | `done \u003cPOSITION_OF_TASK\u003e` | `done 2`","lastModifiedDate":"2021-09-30"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"Delete task | `delete \u003cPOSITION_OF_TASK\u003e` | `delete 2`","lastModifiedDate":"2021-09-30"},{"lineNumber":254,"author":{"gitId":"STAung07"},"content":"Exit Program | `bye` | `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"## FAQs","lastModifiedDate":"2021-09-30"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"_**Q:**_ What happens to my tasks stored if my computer was to crash halfway?","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"_**A:**_ Data is stored and updated live in the _friday.txt_ file inside _/data_ directory. ","lastModifiedDate":"2021-09-30"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"This means that once your command has been executed it will auto update the stored data. Thus,","lastModifiedDate":"2021-09-30"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"you don\u0027t have to worry about losing data :) (unless you delete the whole txt file...)","lastModifiedDate":"2021-09-30"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"_**Q:**_ Can I upload my own _.txt_ file to populate the tasks array beforehand?","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"_**A:**_ Yes you can! In fact that is a much faster and easier way to transfer data. However, do take note that ","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"the information in your _.txt_ file has to be in the same format as that in _friday.txt_. Otherwise, there will ","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"be an error in loading the data.","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"## References","lastModifiedDate":"2021-09-30"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"* Converting Text for Friday\\","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"  https://ascii.co.uk/","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"* Converting image for Iron Man Mask\\","lastModifiedDate":"2021-09-30"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"  https://manytools.org/hacker-tools/convert-images-to-ascii-art/","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"STAung07":249,"-":24}},{"path":"src/main/java/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"import parser.InputParser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"import ui.MessagePrinter;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import storage.LoadData;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":" * Main class containing and running main method of entire program","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":" * Greets user upon initialisation and loads data from storage if data exists.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":" * If no prior data is stored, it will create a file under specified path to store user\u0027s data","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"public class Friday {","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.initiateProgram();","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            LoadData.loadData();","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"                Path path \u003d Paths.get(\"data/friday.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.greetUser();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"        InputParser.parseUserInput();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.exitMessage();","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":33}},{"path":"src/main/java/FridayExceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class EmptyListException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/FridayExceptions/EmptyTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class EmptyTaskNameException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/FridayExceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class IncompleteCommandException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/FridayExceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class InvalidIndexException extends Exception{","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/FridayExceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class InvalidTaskIndexException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/FridayExceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class MissingDateException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"    private String type;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"    public MissingDateException(String type) {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    public String getType() {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"        return type;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":13}},{"path":"src/main/java/FridayExceptions/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class MissingIndexException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"    private String command;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"    public MissingIndexException(String command) {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"        return command;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"STAung07":11}},{"path":"src/main/java/FridayExceptions/MissingKeyWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class MissingKeyWordException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"    private String keyword;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"    public MissingKeyWordException(String word) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"        this.keyword \u003d word;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"        return keyword;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":11}},{"path":"src/main/java/FridayExceptions/MissingQueryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package FridayExceptions;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public class MissingQueryException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"STAung07":4}},{"path":"src/main/java/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package enums;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public enum Commands {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"    TODO, EVENT, DEADLINE, LIST, BYE, DONE, DELETE, INVALID, FIND","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":5}},{"path":"src/main/java/enums/Errors.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package enums;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"public enum Errors {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"    NONE, OUT_OF_BOUNDS_INDEX, INVALID_INDEX, MISSING_INDEX, INCOMPLETE_COMMAND, MISSING_TASK,","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"    MISSING_BY, MISSING_DEADLINE, MISSING_AT, MISSING_EVENT, MISSING_QUERY","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":6}},{"path":"src/main/java/parser/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.EmptyListException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingKeyWordException;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingDateException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.EmptyTaskNameException;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.InvalidIndexException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.InvalidTaskIndexException;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.IncompleteCommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingQueryException;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingIndexException;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import enums.Commands;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"import enums.Errors;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"import storage.UpdateData;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"import ui.MessagePrinter;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"public abstract class InputParser {","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    // CONSTANTS for readability","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    private static final String BY\u003d \"/by\";","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    private static final String AT \u003d \"/at\";","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    private static final int TASK_INDEX \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    private static final int TASKS_LOWER_BOUND \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    // Functions to ease readability","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"    private static int taskNameStartIndex(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"        return input.indexOf(\" \") + 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"    private static int taskNameEndIndex(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"        return input.indexOf(\"/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"    private static int dateStartIndex(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"        return input.indexOf(\"/\") + 3;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"     * Main function managing all user inputs until program is terminated","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"     * via the \"bye\" command. Uses Command enums to break into switch cases.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"     * Calls relevant functions updating data storage and tasks ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"    public static void parseUserInput() {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"        while (true) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"            Commands command \u003d getCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"            // if bye, exit straight","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"            if (command \u003d\u003d Commands.BYE) {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"                return;","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"                switch (command) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"                case INVALID:","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"                    MessagePrinter.invalidCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"                case LIST:","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"                    TaskList.getList();","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"                case TODO:","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"                    UpdateData.updateList(TaskList.addToDo(userInput, false, false));","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"                case DEADLINE:","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"                    UpdateData.updateList(TaskList.addDeadline(userInput, false, false));","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"                case EVENT:","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"                    UpdateData.updateList(TaskList.addEvent(userInput, false, false));","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"                case DELETE:","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"                    TaskList.deleteTask(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"                case FIND:","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"                    TaskList.findTasks(userInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"                case DONE:","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"                    TaskList.markAsDone(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.outOfBoundsTaskIndex();","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"            } catch (InvalidIndexException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.invalidIndex();","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"            } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.invalidTaskIndex();","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"            } catch (EmptyTaskNameException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.emptyTaskName();","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"            } catch (EmptyListException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.emptyListMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"            } catch (IncompleteCommandException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.incompleteCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"            } catch (MissingKeyWordException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingKeyWord(e.getKeyword());","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"            } catch (MissingDateException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingDate(e.getType());","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"            } catch(MissingIndexException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingIndex(e.getCommand());","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"            } catch(MissingQueryException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingQuery();","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"     * Function returning Enum of respective commands back to function on top which","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"     * will invoke corresponding functions based on enum","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"     * @return Command enum","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"    public static Commands getCommand(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"        // checks if it contains list or bye","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"        if (input.equalsIgnoreCase(LIST)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"            return Commands.LIST;","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"        if (input.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"            return Commands.BYE;","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(TODO)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"            return Commands.TODO;","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(DEADLINE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"            return Commands.DEADLINE;","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(EVENT)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"            return Commands.EVENT;","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(DELETE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"            return Commands.DELETE;","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(DONE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"            return Commands.DONE;","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"        if (input.toLowerCase().startsWith(FIND)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"            return Commands.FIND;","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"        return Commands.INVALID;","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"     * Function isolating taskName for deadline and event commands from user.","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"     * Parses from end of command (deadline, event) to start of /by or /at flag","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"     * @param input Full user input to parse","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"     * @return String of full task name","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"    public static String getTaskName(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"        return input.substring(taskNameStartIndex(input), taskNameEndIndex(input)).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"     * Function isolating dates for deadline and event commands from user.","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"     * Parses from end of /by or /at flags to end of userInput","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"     * @param input Full user input to parse","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"     * @return String of date input by user","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"    public static String getDate(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"        return input.substring(dateStartIndex(input)).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"     * Gets integer indicated by user after done / delete command","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"     * Integer input by user starts from 1; minus 1 to convert to 0 index number","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"     * @return integer indicating index of task to mark as done or delete","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"    public static int getTaskIndex(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"        return Integer.parseInt(input.substring(input.indexOf(\" \") + 1)) - 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"     * Gets query indicated by user after find command","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"     * @return String containing query by user to search in tasks ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"    public static String getQuery(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"        return input.substring(input.indexOf(\" \") + 1).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"STAung07"},"content":"     * Check validity of Deadline command","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse and check","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"STAung07"},"content":"     * @return Enum of corresponding Error that will result in an exception being thrown in TaskList","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"STAung07"},"content":"    public static Errors checkDeadlineCommand(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"        // Remove all extra spaces in the middle; only one space between each word","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"        String trimmedInput \u003d input.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"        String[] splitString \u003d trimmedInput.split(\"\\\\s\");","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"        // if no specifications at all i.e. length of split string \u003d\u003d 1 WORKS","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"        if (splitString.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"            return Errors.INCOMPLETE_COMMAND;","lastModifiedDate":"2021-09-09"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"        // check if it contains BY WORKS","lastModifiedDate":"2021-09-09"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"        if (!trimmedInput.contains(BY)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_BY;","lastModifiedDate":"2021-09-09"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"        // check if it contains a task name","lastModifiedDate":"2021-09-09"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"        // If string right after command name is /by, user did not provide a task name","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"        if (splitString[1].equalsIgnoreCase(BY)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_TASK;","lastModifiedDate":"2021-09-09"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"        // check if there is a date after /by i.e. if last element is by WORKS","lastModifiedDate":"2021-09-09"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"        if (input.trim().endsWith(BY)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_DEADLINE;","lastModifiedDate":"2021-09-09"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"        return Errors.NONE;","lastModifiedDate":"2021-09-09"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"     * Check validity of Event command","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse and check","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"     * @return Enum of corresponding Error that will result in an exception being thrown in TaskList","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"    public static Errors checkEventCommand(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"        // Remove all extra spaces in the middle; only one space between each word","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"        String trimmedInput \u003d input.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"        String[] splitString \u003d trimmedInput.split(\"\\\\s\");","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"STAung07"},"content":"        // if no specifications at all i.e length of split string \u003d\u003d 1","lastModifiedDate":"2021-09-09"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"        if (splitString.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"            return Errors.INCOMPLETE_COMMAND;","lastModifiedDate":"2021-09-09"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":239,"author":{"gitId":"STAung07"},"content":"        // check if it contains AT","lastModifiedDate":"2021-09-09"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"        if (!trimmedInput.contains(AT)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_AT;","lastModifiedDate":"2021-09-09"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"        // check if it contains a task name","lastModifiedDate":"2021-09-09"},{"lineNumber":244,"author":{"gitId":"STAung07"},"content":"        // If string right after command name is /at, user did not provide a task name","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"STAung07"},"content":"        if (splitString[1].equalsIgnoreCase(AT)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_TASK;","lastModifiedDate":"2021-09-09"},{"lineNumber":247,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":248,"author":{"gitId":"STAung07"},"content":"        // check if there is a date after /at i.e. if last element is at","lastModifiedDate":"2021-09-30"},{"lineNumber":249,"author":{"gitId":"STAung07"},"content":"        if (trimmedInput.trim().endsWith(AT)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":250,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_EVENT;","lastModifiedDate":"2021-09-09"},{"lineNumber":251,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":252,"author":{"gitId":"STAung07"},"content":"        return Errors.NONE;","lastModifiedDate":"2021-09-09"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":254,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"STAung07"},"content":"     * Check validity of delete and done commands","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse and check","lastModifiedDate":"2021-09-30"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"     * @return Enum of corresponding Error that will result in an exception being thrown in TaskList","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"    public static Errors checkDeleteAndDoneCommand(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"        String[] splitString \u003d input.split(\"\\\\s\");","lastModifiedDate":"2021-09-26"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"        if (splitString.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_INDEX;","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"        int taskIndex;","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"        // Check if user input an integer for index","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"            taskIndex \u003d Integer.parseInt(splitString[TASK_INDEX]);","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"            return Errors.INVALID_INDEX;","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"        if (taskIndex \u003c\u003d TASKS_LOWER_BOUND)  {","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"STAung07"},"content":"            return Errors.OUT_OF_BOUNDS_INDEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":274,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"STAung07"},"content":"        return Errors.NONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":277,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":279,"author":{"gitId":"STAung07"},"content":"     * Check validity of find command","lastModifiedDate":"2021-09-30"},{"lineNumber":280,"author":{"gitId":"STAung07"},"content":"     * @param input String of user input to parse and check","lastModifiedDate":"2021-09-30"},{"lineNumber":281,"author":{"gitId":"STAung07"},"content":"     * @return Enum of corresponding Error that will result in an exception being thrown in TaskList","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"STAung07"},"content":"    public static Errors checkFindCommand(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":284,"author":{"gitId":"STAung07"},"content":"        String[] splitString \u003d input.split(\"\\\\s\");","lastModifiedDate":"2021-09-27"},{"lineNumber":285,"author":{"gitId":"STAung07"},"content":"        if (splitString.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":286,"author":{"gitId":"STAung07"},"content":"            return Errors.MISSING_QUERY;","lastModifiedDate":"2021-09-27"},{"lineNumber":287,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"STAung07"},"content":"        return Errors.NONE;","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":290}},{"path":"src/main/java/storage/LoadData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.EmptyTaskNameException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.IncompleteCommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingDateException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingKeyWordException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import ui.MessagePrinter;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import java.io.File;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"public class LoadData {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final String FILEPATH \u003d \"data/friday.txt\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    private static final String doneIndicator \u003d \"X\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    private static final String delimiter \u003d \"\\\\|\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    private static final int todoLength \u003d 3;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    private static final int taskTypeIndex \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    private static final int taskDoneIndex \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final int taskNameIndex \u003d 2;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    private static final int dateIndex \u003d 3;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"     * Function to scan data from storage upon initiating program","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"     * and store into tasks ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    public static void loadData() throws FileNotFoundException {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.loadingData();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"        // read from file using Scanner","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"        File data \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"        Scanner s \u003d new Scanner(data);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"            // read and parse data into Task array.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"            // Data stored in format: type | isDone | taskname | date (if relevant)","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"            String[] splitString \u003d s.nextLine().split(delimiter);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"            if (splitString[taskDoneIndex].trim().equals(doneIndicator)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"                isDone \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"                // if splitString only has 3 items; means its a todo","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"                if (splitString.length \u003d\u003d todoLength) {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"                    TaskList.addToDo(splitString[taskTypeIndex]","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"                            + \" \"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"                            + splitString[taskNameIndex], isDone, true","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"                    );","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"                } else { // means it\u0027s a deadline or event","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"                    if (splitString[taskTypeIndex].trim().equals(\"deadline\")) { // deadline","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"                        TaskList.addDeadline(splitString[taskTypeIndex]","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"                                + \" \" + splitString[taskNameIndex]","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"                                + \" /by \" + splitString[dateIndex], isDone, true","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"                        );","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"                    } else { // event","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"                        TaskList.addEvent(splitString[taskTypeIndex]","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"                                + \" \" + splitString[taskNameIndex]","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"                                + \" /at \" + splitString[dateIndex], isDone, true","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"                        );","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"            } catch (EmptyTaskNameException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.emptyTaskName();","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"            } catch (IncompleteCommandException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.incompleteCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"            } catch (MissingKeyWordException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingKeyWord(e.getKeyword());","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"            } catch (MissingDateException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.missingDate(e.getType());","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.dataLoaded();","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"STAung07":73}},{"path":"src/main/java/storage/UpdateData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import ui.MessagePrinter;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"public class UpdateData {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    private static final String FILEPATH \u003d \"data/friday.txt\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"     * Function to append new line to file in storage","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"     * @param textToAppend String in correct format to append to storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"     * @throws IOException If file doesn\u0027t exist in FILEPATH","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    public static void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH, true);","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        fw.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"     * Function that appends task details in correct format into storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"     * @param currTask: Task object of current task being added","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    public static void updateList(Task currTask) {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"        if (currTask \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"            return;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        String taskName \u003d currTask.getTaskName();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"        String isDoneSymbol \u003d currTask.isDone() ? \"X\" : \"O\";","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"        // check prefix to format task accordingly based on task user added","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        if (currTask.getPrefix().equals(\"[T]\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"                appendToFile(\"todo | \" + isDoneSymbol + \" | \" + taskName + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.ioexception(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"        } else if (currTask.getPrefix().equals(\"[D]\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"                Deadline deadlineTask \u003d (Deadline) currTask;","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"                String deadline \u003d deadlineTask.getTaskDate().toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"                appendToFile(\"deadline | \" + isDoneSymbol + \" | \" + taskName + \" | \" + deadline + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.ioexception(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"                Event eventTask \u003d (Event) currTask;","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"                String eventDate \u003d eventTask.getTaskDate().toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"                appendToFile(\"event | \" + isDoneSymbol + \" | \" + taskName + \" | \" + eventDate + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"                MessagePrinter.ioexception(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"     * Deletes content previously in storage and updates based on current Task array","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"    public static void rewriteList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"        // Clear list","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"            fw.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"            MessagePrinter.ioexception(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"        // go through current task list and update","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"            updateList(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"STAung07":81}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":" * Child Deadline class extending parent Task class","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":" * Has additional attribute of deadline indicating date Task should be completed by","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":" * Marked with unique prefix [D]","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    public Deadline(boolean done, String name, String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        super(done, name);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        this.deadline \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public Deadline() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        super(false, \"Nothing\");","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        this.deadline \u003d LocalDate.parse(\"2021-12-31\");","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    public LocalDate getTaskDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"        return deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    public String getStringDeadline() {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"        return getPrefix() + super.toString() + \"(by: \" + getStringDeadline() + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"STAung07":41}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":" * Child Event class extending Parent Task class","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":" * Has additional attribute eventDate indicating the day of stored event","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":" * Marked with unique prefix [E]","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    public Event(boolean done, String name, String date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"        super(done, name);","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        this.eventDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public Event() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        super(false, \"Nothing\");","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        this.eventDate \u003d LocalDate.parse(\"2021-12-31\");","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    public LocalDate getTaskDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        return eventDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    public String getStringEventDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"        return eventDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        return getPrefix() + super.toString() + \"(at: \" + getStringEventDate() + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"STAung07":40}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":" * Parent class representing a Task user stores.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":" * Contains taskName and isDone flag indicating whether a task is done or not","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    // constructors","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    public Task(boolean isDone, String taskName) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public Task() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        this(false, \"Nothing\");","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    // getters","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"        return isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        return taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    // setters","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    // get Prefix for child classes","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    public abstract String getPrefix();","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"    // date for each instance;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"    public abstract LocalDate getTaskDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"    // override toString method","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"        System.out.print(\"\u003e\");","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"        String checkbox \u003d \"[ ]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"        if (isDone()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"        return checkbox + getTaskName();","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"STAung07":57}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.EmptyListException;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingKeyWordException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingDateException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.EmptyTaskNameException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.InvalidIndexException;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.InvalidTaskIndexException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.IncompleteCommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingQueryException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import FridayExceptions.MissingIndexException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import enums.Errors;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import parser.InputParser;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"import ui.MessagePrinter;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"import storage.UpdateData;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":" * Main class handling functions called when user enters a command","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":" * ArrayList containing all tasks of user initiated here","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"public class TaskList {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    // Operations to add/delete tasks in list eg. addToDo, addDeadline","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"     * Function called when user enters list command","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"     * If no tasks, throws EmptyListException which will print out a message stating that there are no tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"     * in the users list","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"     * @throws EmptyListException","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    // function to update Task array on adding and deleting task","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    public static void getList() throws EmptyListException{","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"        // Message Printer","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.printList(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"     * Adds a new Task to tasks ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"     * Prints out message indicating task successfully added","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"     * @param newTask Task object of new Task to add to list","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"     * @param taskName name of task to print out","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"     * @param isLoad flag indicating whether function was called on loading of data or otherwise","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"    private static void addTask(Task newTask, String taskName, boolean isLoad) {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"        // add to array list","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"        // Message Printer","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"        if (isLoad) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"            return;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.addedTask(taskName);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"     * Removes a specified task from tasks ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"     * Prints our message showing user current list upon removal","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"     * @param taskToRemove","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"     * @param taskName","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"    private static void removeTask(Task taskToRemove, String taskName) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"        tasks.remove(taskToRemove);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.removedTask(taskName, tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"     * Function handling adding of tasks indicated as todo","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"     * @param userInput String containing users input; parsed to get task name","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"     * @param isDone indicator for whether task is done or not. If called when user adds via command line, default","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"     *               value is false. If called when loading data from storage, will be set to value indicated in storage","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"     * @param isLoad indicator for whether function was called from data storage or from user input","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"     * @return Task object referring to current todo added","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"     * @throws EmptyTaskNameException If user did not provide a name for task","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"    public static Task addToDo(String userInput, boolean isDone, boolean isLoad) throws EmptyTaskNameException {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"        String[] splitString \u003d userInput.split(\"\\\\s\");","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"        if (splitString.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"            throw new EmptyTaskNameException();","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"        // get taskName","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"        String taskName \u003d userInput.substring(userInput.indexOf(\" \")).trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"        Todo newTodo \u003d new Todo(isDone, taskName);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"        addTask(newTodo, taskName, isLoad);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"        return newTodo;","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"     * Function handling adding of tasks indicated as deadline","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"     * @param userInput String containing users input; parsed to get task name and deadline date","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"     * @param isDone indicator for whether task is done or not. If called when user adds via command line, default","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"     *               value is false. If called when loading data from storage, will be set to value indicated in storage","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"     * @param isLoad indicator for whether function was called from data storage or from user input","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"     * @return Task object referring to current deadline added","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"     * @throws IncompleteCommandException If only deadline command without any specifications provided","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"     * @throws EmptyTaskNameException if task name is missing","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"     * @throws MissingKeyWordException if /by is missing","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"     * @throws MissingDateException if date of deadline not provided","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"     * @throws DateTimeParseException if date and time not in correct format","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"    public static Task addDeadline(String userInput, boolean isDone, boolean isLoad) throws","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"            IncompleteCommandException,","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"            EmptyTaskNameException,","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"            MissingKeyWordException,","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"            MissingDateException,","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"        // check validity of deadline string","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"        Errors checkDeadline \u003d InputParser.checkDeadlineCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"        switch (checkDeadline) {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"        case INCOMPLETE_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"        case MISSING_BY:","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"            throw new MissingKeyWordException(\"by\");","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"        case MISSING_TASK:","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"            throw new EmptyTaskNameException();","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"        case MISSING_DEADLINE:","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"            throw new MissingDateException(\"deadline\");","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"        // get taskName and date","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"        String taskName \u003d InputParser.getTaskName(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"        String deadline \u003d InputParser.getDate(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"            LocalDate.parse(deadline);","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"            MessagePrinter.invalidDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"            return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"        Deadline newDeadline \u003d new Deadline(isDone, taskName, deadline);","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"STAung07"},"content":"        addTask(newDeadline, taskName, isLoad);","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"        return newDeadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"     * Function handling adding of tasks indicated as event","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"     * @param userInput String containing users input; parsed to get task name and event date","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"     * @param isDone indicator for whether task is done or not. If called when user adds via command line, default","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"     *               value is false. If called when loading data from storage, will be set to value indicated in storage","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"     * @param isLoad indicator for whether function was called from data storage or from user input","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"     * @return Task object referring to current event added","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"     * @throws IncompleteCommandException If only deadline command without any specifications provided","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"     * @throws EmptyTaskNameException if task name is missing","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"     * @throws MissingKeyWordException if /by is missing","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"     * @throws MissingDateException if date and time not in correct format","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"    public static Task addEvent(String userInput, boolean isDone, boolean isLoad) throws","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"            IncompleteCommandException,","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"            EmptyTaskNameException,","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"            MissingKeyWordException,","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"            MissingDateException {","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"        // check validity of event string","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"        Errors checkEvent \u003d InputParser.checkEventCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"        switch (checkEvent) {","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"        case INCOMPLETE_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"        case MISSING_AT:","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"            throw new MissingKeyWordException(\"at\");","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"        case MISSING_TASK:","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"            throw new EmptyTaskNameException();","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"        case MISSING_EVENT:","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"            throw new MissingDateException(\"event\");","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"        // get taskName and date","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"        String taskName \u003d InputParser.getTaskName(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"        String eventDate \u003d InputParser.getDate(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"            LocalDate.parse(eventDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"            MessagePrinter.invalidDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"            return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"        Event newEvent \u003d new Event(isDone, taskName, eventDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"        addTask(newEvent, taskName, isLoad);","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"        return newEvent;","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"     * Function to delete task based on index indicated by user","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"     * @param userInput String from user to be parsed in InputParser to get index of task to delete","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"     * @throws MissingIndexException If index of task to delete not specified by user","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"     * @throws InvalidTaskIndexException If user does not provide a valid index eg. double, string","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"     * @throws InvalidIndexException If no tasks at index specified by user","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"     * @throws IndexOutOfBoundsException If index is less than 0 or more than 99","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"    public static void deleteTask(String userInput) throws","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"            MissingIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"            InvalidTaskIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"            InvalidIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"            IndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"        Errors checkTaskIndex \u003d InputParser.checkDeleteAndDoneCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"        switch (checkTaskIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"        case MISSING_INDEX:","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"STAung07"},"content":"            throw new MissingIndexException(\"delete\");","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"STAung07"},"content":"        case INVALID_INDEX:","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"STAung07"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"        case OUT_OF_BOUNDS_INDEX:","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"STAung07"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"STAung07"},"content":"        case NONE:","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"STAung07"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"        int taskIndex \u003d InputParser.getTaskIndex(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"        // change task to done","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"        Task currTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"        if (currTask \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"        String taskName \u003d currTask.getTaskName();","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"        removeTask(currTask, taskName);","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"        UpdateData.rewriteList(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"     * Function to mark task as done based on index indicated by user","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"     * @param userInput String from user to be parsed in InputParser to get index of task to mark as done","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"     * @throws MissingIndexException If index of task to mark as done not specified by user","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"     * @throws InvalidTaskIndexException If user does not provide a valid index eg. double, string","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"     * @throws InvalidIndexException If no tasks at index specified by user","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"     * @throws IndexOutOfBoundsException If index is less than 0 or more than 99","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"    public static void markAsDone(String userInput) throws","lastModifiedDate":"2021-09-27"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"            MissingIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"            InvalidTaskIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"            InvalidIndexException,","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"            IndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"        Errors checkTaskIndex \u003d InputParser.checkDeleteAndDoneCommand(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"        switch (checkTaskIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"        case MISSING_INDEX:","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"            throw new MissingIndexException(\"mark as done\");","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"        case INVALID_INDEX:","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-27"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"        case OUT_OF_BOUNDS_INDEX:","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"STAung07"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"        case NONE:","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"STAung07"},"content":"        // get index of task to change","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"        int taskIndex \u003d InputParser.getTaskIndex(userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"        // change task to done","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"        Task currTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"        if (currTask \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"STAung07"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"STAung07"},"content":"        currTask.setDone(true);","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.taskMarkedAsDone(currTask);","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"STAung07"},"content":"        UpdateData.rewriteList(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":252,"author":{"gitId":"STAung07"},"content":"     * Function to search tasks ArrayList containing query from user in task name","lastModifiedDate":"2021-09-30"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"     * @param userInput String from user input to be parsed in InputParser to get query from user","lastModifiedDate":"2021-09-30"},{"lineNumber":254,"author":{"gitId":"STAung07"},"content":"     * @throws MissingQueryException If no query is specified by user","lastModifiedDate":"2021-09-30"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"STAung07"},"content":"    public static void findTasks(String userInput) throws MissingQueryException {","lastModifiedDate":"2021-09-27"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"        if (InputParser.checkFindCommand(userInput) \u003d\u003d Errors.MISSING_QUERY) {","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"            throw new MissingQueryException();","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"        String query \u003d InputParser.getQuery(userInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"            if (task.getTaskName().toLowerCase().contains(query.toLowerCase())) {","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"                filteredList.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"        MessagePrinter.filteredTasks(filteredList);","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"STAung07":274}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":" * Child Todo class extending parent class Task","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":" * Marked with unique prefix [T]","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    public Todo(boolean done, String name) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"        super(done, name);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    public Todo() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        super(false, \"Nothing\");","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public LocalDate getTaskDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        return getPrefix() + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"STAung07":31}},{"path":"src/main/java/ui/MessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"public abstract class MessagePrinter {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"    // constants storing printing messages","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    private static final String IRON_MAN_MASK \u003d \"                           .*%@@@@@@@@@@@@@@@@@@@@@@\u0026(.                         \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"            + \"                      /@@\u0026*  #@@@@@@@@@@@@@@@@@@@@@@@  .%@@%.                   \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"            + \"                  \u0026@@*        @@@@@@@@@@@@@@@@@@@@@@,       .@@@.               \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"            + \"              *@@#            ,@@@@@@@@@@@@@@@@@@@@#            *@@(            \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"            + \"             \u0026%                \u0026@@@@@@@@@@@@@@@@@@@                /@.          \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"            + \"           .%                   @@@@@@@@@@@@@@@@@@,                  ,%         \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"            + \"           %@                   ,@@@@@@@@@@@@@@@@%                   *@         \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"            + \"           @@                    #@@@@@@@@@@@@@@@                    /@/        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"            + \"          *@@                                                        (@\u0026        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"            + \"          \u0026@@.                                                       %@@.       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"            + \"          @@@.                                                       \u0026@@*       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"            + \"         .@@@,                                                       \u0026@@/       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            + \"         ,@@@*                                                       @@@%       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"            + \"         *@@@*                                                       @@@@       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            + \"         (@@@.                                                       \u0026@@@       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"            + \"         @@@\u0026  /@\u0026%/,.                                      .,*#%\u0026@  ,@@@/      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"            + \"         @@@. .@@@@@@@@@@@@@@@@@@%###############@@@@@@@@@@@@@@@@@@(  @@@(      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"            + \"         @@%     ,\u0026@@@@@@@@\u0026%/,.                   .*#\u0026\u0026@@@@@@@@(.    .@@#      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"            + \"         @@.                                                           %@(      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"            + \"         @@                                                            *@/      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"            + \"         \u0026@.                                                           #@,      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"            + \"         \u0026@@,                                                         @@@.      \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"            + \"         %@@@..                                                      #@@@       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"            + \"         *@@@@ \u0026/                                                .@,/@@@\u0026       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"            + \"          \u0026@@@@.#@/                                             @@.#@@@@.       \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"            + \"          ,@@@@@*/@@.                                         %@\u0026 @@@@@\u0026        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"            + \"          .@@@@@@#.@@*                                       @@#,@@@@@@#        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"            + \"           @@@@@@@@ \u0026@,                                     \u0026@.(@@@@@@@,        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"            + \"           /@@@@@@@@,/#                                    .\u0026 @@@@@@@@@         \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"            + \"            @@@@@@@@@#..     \u0026@@\u0026%#######((((####%@@@.     ,,@@@@@@@@@,         \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"            + \"            *@@@@@@@@@. *@%/@*                      .@%*@%  %@@@@@@@@\u0026          \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"            + \"             \u0026@@@@@@@\u0026                                      ,@@@@@@@@,          \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"            + \"             *@@@@@@@                 ,\u0026\u0026\u0026\u0026(                 #@@@@@@\u0026           \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"            + \"              /@@@@@@#        .\u0026@@@@@@@@@@@@@@@@@@@*        *@@@@@@\u0026            \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"            + \"                 (@@@@@@@, .@@@@@@@@@@@@@@@@@@@@@@@@@@/  #@@@@@@\u0026.              \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"            + \"                    .\u0026@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@%(@@@@@*                  \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"            + \"                        .#@@,@#                    *@##@\u0026,                      \\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"    private static final String FRIDAY \u003d \"  __      _     _             \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"            + \" / _|    (_)   | |            \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"            + \"| |_ _ __ _  __| | __ _ _   _ \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"            + \"|  _| \u0027__| |/ _` |/ _` | | | |\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"            + \"| | | |  | | (_| | (_| | |_| |\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"            + \"|_| |_|  |_|\\\\__,_|\\\\__,_|\\\\__, |\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"            + \"                         __/ |\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"            + \"                        |___/ \\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"    private static final String DASHES \u003d \"________________________________________________________________________________________________________________________\";","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"    // methods to print constants","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"    private static void friday() {","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"        System.out.print(FRIDAY);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    private static void dashes() {","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"        System.out.println(DASHES);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"    private static void ironManMask() {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"        System.out.println(IRON_MAN_MASK);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"    // methods to print messages","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"    // greet User upon entry","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"    public static void initiateProgram() {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"        ironManMask();","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"        friday();","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Initiating FRIDAY\");","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Hello Mr Stark, how may I be of assistance to you today?\");","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"    public static void loadingData() {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Allow me to fetch the data from the archives ...\");","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"    public static void dataLoaded() {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Data successfully loaded into memory sir.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"    // if list of tasks  is empty","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"    public static void emptyListMessage() {","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"You appear to have no tasks for today, how wonderful sir.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"    // otherwise","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"You have a total of \" + tasks.size() +\" tasks sir, listing them out now.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"            System.out.println(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"    // after marking task as done","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"    public static void taskMarkedAsDone(Task currTask) {","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Your task \\\"\" + currTask.getTaskName() + \"\\\" is marked as complete. Splendid sir.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"[X]\" + currTask.getTaskName());","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"    // Message for adding tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"    public static void addedTask(String taskName) {","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Very well, adding task \\\"\" + taskName + \"\\\".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"    public static void filteredTasks(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"            dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"            System.out.println(\"There are no tasks matching your query sir.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"            dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"            dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"            System.out.println(\"Here are all your current tasks matching your query sir.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"            for (Task task : filteredList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"                System.out.println(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"            dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"    public static void removedTask(String taskName, int tasksLength) {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Alright sir, removing task \\\"\" + taskName + \"\\\".\");","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"You now have \" + tasksLength + \" tasks remaining.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"    // message when no task name is specified","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"    public static void emptyTaskName() {","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"I am going to need a name for this task sir.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"    // Messages for null command (invalid command) enum","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"    public static void invalidCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Apologies sir, I do not understand your command.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"    // if taskIndex is out of bounds","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"    public static void outOfBoundsTaskIndex() {","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Apologies sir, the number you entered is not within the range of tasks in my memory.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"    // if no task is at taskIndex specified by user","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"    public static void invalidTaskIndex() {","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Hmm.. How strange, there appears to be no task at this location... Perhaps you could try another number sir?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"    public static void invalidIndex() {","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"I was programmed to only work with numbers for this command by you sir.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"    // message when no description after keyword is given","lastModifiedDate":"2021-09-09"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"    public static void incompleteCommand() {","lastModifiedDate":"2021-09-09"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"I\u0027m afraid you are going to have to be more specific sir.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"    public static void missingIndex(String command) {","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"May I know the index of the of the task you want me to \" + command + \" sir?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"    // message when keyword is missing","lastModifiedDate":"2021-09-09"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"    public static void missingKeyWord(String word) {","lastModifiedDate":"2021-09-09"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Apologies sir, you need to include /\" + word + \" in your command\");","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":197,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":198,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"    public static void missingDate(String type) {","lastModifiedDate":"2021-09-09"},{"lineNumber":200,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":201,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"May I know the date for this \" + type + \" sir?\");","lastModifiedDate":"2021-09-09"},{"lineNumber":202,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"    public static void missingQuery() {","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"I require a specific keyword to query sir.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"    public static void invalidDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Sir you modelled me to read dates in the format yyyy-mm-dd. \"","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"                + \"If you would kindly check the format or validity of your date.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-27"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"    public static void ioexception(String error) {","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"There was the error of type \" + error + \" when updating the storage.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"    // message printed upon exiting","lastModifiedDate":"2021-09-09"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"    public static void exitMessage() {","lastModifiedDate":"2021-09-09"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Powering off now. Good Bye Mr Stark.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"        dashes();","lastModifiedDate":"2021-09-09"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"STAung07":230}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"deadline read book /by next week monday","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"event return book /at next week tuesday","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"todo buy book","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"STAung07":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Friday.java","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"java -classpath ..\\bin Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"STAung07":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    rm EXPECTED.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e EXPECTED.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"dos2unix EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"diff EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"STAung07":5,"-":33}}]
