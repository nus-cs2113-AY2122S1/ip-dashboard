[{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"[E],[ ],Nirmaleshwar attend CS2113T lecture ,Friday 17 Sep 2021 from 4-6 pm","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"[T],[ ],book","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"[T],[ ],stuff","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"[T],[ ],return book","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Nirmaleshwar":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.typesOfTasks.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.typesOfTasks.Event;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.typesOfTasks.Deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    // Init constants storing various magic literals or Strings","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int DONE_SIZE          \u003d 5;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int DELETE_SIZE        \u003d 7;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int DASH_INDX          \u003d 4;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int TODO_SIZE          \u003d 5;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int EVENT_SIZE         \u003d 6;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final int DEADLINE_SIZE      \u003d 9;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final String LINE            \u003d \"--------------------------------------------------------------------------------\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final ArrayList\u003cTask\u003e tasks  \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"        boolean botIsActive \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"        dataStorage();","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"        printWelcome();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"        // Cond. is true when input \"bye\" is given, terminates run","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"        while (!botIsActive) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"            writeData(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"            String command \u003d in.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"                botIsActive \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"                printBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"                printList();","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"                try {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"                    markAsDone(command);","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Nirmaleshwar"},"content":"                    System.out.println(LINE + System.lineSeparator() + \"Sir, you didn\u0027t give me a valid entry index \"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"Nirmaleshwar"},"content":"                            + \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Nirmaleshwar"},"content":"                removeFromList(command);","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.equals(\"echo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Nirmaleshwar"},"content":"                echoMode();","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"Nirmaleshwar"},"content":"                try {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"Nirmaleshwar"},"content":"                    createTodo(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Nirmaleshwar"},"content":"                } catch (DukeException error) {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Nirmaleshwar"},"content":"                    System.out.println(error.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Nirmaleshwar"},"content":"                try {","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"Nirmaleshwar"},"content":"                    createDeadline(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"Nirmaleshwar"},"content":"                } catch (DukeException error) {","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"Nirmaleshwar"},"content":"                    System.out.println(error.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"Nirmaleshwar"},"content":"            } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Nirmaleshwar"},"content":"                try {","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"Nirmaleshwar"},"content":"                    createEvent(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Nirmaleshwar"},"content":"                } catch (DukeException error) {","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"Nirmaleshwar"},"content":"                    System.out.println(error.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"Nirmaleshwar"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Nirmaleshwar"},"content":"                System.out.println(LINE + System.lineSeparator() + \"Apologies sir but, I don\u0027t recognize that protocol! \"","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"Nirmaleshwar"},"content":"                        + \"\\uD83E\\uDD28\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"Nirmaleshwar"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"Nirmaleshwar"},"content":"     * Executes method for creating a new todo object","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param command","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws DukeException","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"Nirmaleshwar"},"content":"    private static void createTodo(String command) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"Nirmaleshwar"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"Nirmaleshwar"},"content":"            taskDescription \u003d command.substring(TODO_SIZE);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, that seems to be an inavlid command \"","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"Nirmaleshwar"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, you haven\u0027t given me the name of the task \"","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"Nirmaleshwar"},"content":"        Todo todo \u003d new Todo(command.substring(TODO_SIZE));","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"Nirmaleshwar"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Nirmaleshwar"},"content":"        printListSummary(tasks.get(tasks.indexOf(todo)));","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"Nirmaleshwar"},"content":"     * Executes method for creating a new deadline object","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param command","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws DukeException","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"Nirmaleshwar"},"content":"    private static void createDeadline(String command) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"Nirmaleshwar"},"content":"        // Reads two substrings as param: 1. The task description after keyword \"deadline\"","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"Nirmaleshwar"},"content":"        //                                2. The actual deadline after \"/by \" till end of string","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"Nirmaleshwar"},"content":"        String dateOrTime;","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"Nirmaleshwar"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"Nirmaleshwar"},"content":"        int dashStart \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"Nirmaleshwar"},"content":"            dateOrTime \u003d command.substring(dashStart + DASH_INDX);","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, you haven\u0027t given me a valid deadline \"","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"Nirmaleshwar"},"content":"                     + \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"Nirmaleshwar"},"content":"            taskDescription \u003d command.substring(DEADLINE_SIZE, dashStart);","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, I\u0027m afraid that command is invalid. \" + \"\\u2639\"","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"Nirmaleshwar"},"content":"                    + System.lineSeparator() + \"Please frame your request in this format: deadline CS2113T Assg /by Wed 2359 hrs\"","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"Nirmaleshwar"},"content":"                    + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"Nirmaleshwar"},"content":"        Deadline deadline \u003d new Deadline(command.substring(DEADLINE_SIZE, dashStart), dateOrTime);","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"Nirmaleshwar"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"Nirmaleshwar"},"content":"        printListSummary(tasks.get(tasks.indexOf(deadline)));","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"Nirmaleshwar"},"content":"     * Executes method for creating a new event object","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param command","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws DukeException","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"Nirmaleshwar"},"content":"    private static void createEvent(String command) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"Nirmaleshwar"},"content":"        String dateOrTime;","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"Nirmaleshwar"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"Nirmaleshwar"},"content":"        int dashStart \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"Nirmaleshwar"},"content":"            dateOrTime \u003d command.substring(dashStart + DASH_INDX);","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, you haven\u0027t given me a valid event date \"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"Nirmaleshwar"},"content":"            taskDescription \u003d command.substring(EVENT_SIZE, dashStart);","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new DukeException(LINE + System.lineSeparator() + \"Sir, I\u0027m afraid that command is invalid.\" + \"\\u2639\"","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"Nirmaleshwar"},"content":"                    + System.lineSeparator() + \"Please frame your request in this format: event My B\u0027day /at 23/07/1999\"","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"Nirmaleshwar"},"content":"                    + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"Nirmaleshwar"},"content":"        Event event \u003d new Event((command.substring(EVENT_SIZE, dashStart)), dateOrTime);","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Nirmaleshwar"},"content":"        tasks.add(event);","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"Nirmaleshwar"},"content":"        printListSummary(tasks.get(tasks.indexOf(event)));","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"Nirmaleshwar"},"content":"     * Returns stored data from previous runs","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws DukeException","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"Nirmaleshwar"},"content":"    private static void dataStorage() throws IOException, DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"Nirmaleshwar"},"content":"        File dirPath \u003d new File(\"data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"Nirmaleshwar"},"content":"        File filePath \u003d new File(\"data/Duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"Nirmaleshwar"},"content":"        if (filePath.exists()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"Nirmaleshwar"},"content":"            Scanner fileReader \u003d new Scanner(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"Nirmaleshwar"},"content":"            while (fileReader.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"Nirmaleshwar"},"content":"                String currLine \u003d fileReader.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"Nirmaleshwar"},"content":"                String[] taskTokens \u003d currLine.split(\",\");","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"Nirmaleshwar"},"content":"                if (taskTokens[0].equals(\"[T]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"Nirmaleshwar"},"content":"                    createTodo(\"todo \" + taskTokens[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"Nirmaleshwar"},"content":"                } else if (taskTokens[0].equals(\"[D]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"Nirmaleshwar"},"content":"                    createDeadline(\"deadline \" + taskTokens[2] + \"/by \" + taskTokens[3]);","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"Nirmaleshwar"},"content":"                } else if (taskTokens[0].equals(\"[E]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"Nirmaleshwar"},"content":"                    createEvent(\"event \" + taskTokens[2] + \"/at \" + taskTokens[3]);","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"Nirmaleshwar"},"content":"                if (taskTokens[1].equals(\"[X]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"Nirmaleshwar"},"content":"                    markAsDone(\"done \" + new Integer(tasks.size()).toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"Nirmaleshwar"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"Nirmaleshwar"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"Nirmaleshwar"},"content":"            dirPath.mkdir();","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":188,"author":{"gitId":"Nirmaleshwar"},"content":"     * Writes data from current run into a txt file","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":190,"author":{"gitId":"Nirmaleshwar"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-01"},{"lineNumber":191,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":192,"author":{"gitId":"Nirmaleshwar"},"content":"    private static void writeData(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"Nirmaleshwar"},"content":"        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"Nirmaleshwar"},"content":"        for (Task task : Duke.tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"Nirmaleshwar"},"content":"            fw.write(task.printForSave() + System.lineSeparator());","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"Nirmaleshwar"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":201,"author":{"gitId":"Nirmaleshwar"},"content":"     * Prints welcome message","lastModifiedDate":"2021-10-01"},{"lineNumber":202,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":203,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void printWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"Nirmaleshwar"},"content":"        String logo \u003d \"        _|       _|_|        _|_|_|      _|      _|    _|_|_|        _|_|_|\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"Nirmaleshwar"},"content":"                + \"        _|     _|    _|      _|    _|    _|      _|      _|        _|\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"Nirmaleshwar"},"content":"                + \"        _|     _|_|_|_|      _|_|_|      _|      _|      _|          _|_|\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"Nirmaleshwar"},"content":"                + \" _|     _|     _|    _|      _|    _|      _|  _|        _|              _|\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"Nirmaleshwar"},"content":"                + \"  _| _|    _|  _|    _|  _|  _|    _|  _|    _|    _|  _|_|_|  _|  _|_|_|\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.print(\"Initialising...............\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator() + logo);","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"Nirmaleshwar"},"content":"        // Prints enclosed text in italics","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"Nirmaleshwar"},"content":"        String byline \u003d \"\\033[3m----------------------------------Just a rather very intelligent system---------\\033[0m\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(byline + \"Good Evening Sir! I\u0027m J.A.R.V.I.S\");","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(\"How may I be of assistance to you today? \" + \"\\uD83D\\uDE01\");","lastModifiedDate":"2021-09-09"},{"lineNumber":215,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator());","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":219,"author":{"gitId":"Nirmaleshwar"},"content":"     * Prints exit message","lastModifiedDate":"2021-10-01"},{"lineNumber":220,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":221,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void printBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator() + \"Affirmative sir, I\u0027ll shut down all operations\"","lastModifiedDate":"2021-09-09"},{"lineNumber":223,"author":{"gitId":"Nirmaleshwar"},"content":"                + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":224,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":227,"author":{"gitId":"Nirmaleshwar"},"content":"     * Prints all items in array list","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":229,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void printList() {","lastModifiedDate":"2021-09-13"},{"lineNumber":230,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator() + \"Here are the current tasks in your list:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"Nirmaleshwar"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-13"},{"lineNumber":232,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(tasks.indexOf(task) + 1 + \".\" + task.printTask());","lastModifiedDate":"2021-09-13"},{"lineNumber":233,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":235,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":237,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"Nirmaleshwar"},"content":"     * Prints item added along with summary message","lastModifiedDate":"2021-10-01"},{"lineNumber":239,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param task","lastModifiedDate":"2021-10-01"},{"lineNumber":240,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":241,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void printListSummary(Task task) {","lastModifiedDate":"2021-09-13"},{"lineNumber":242,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator() + \"Will do sir, I\u0027ve added: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":243,"author":{"gitId":"Nirmaleshwar"},"content":"                    + System.lineSeparator() + \"  \" + task.printTask());","lastModifiedDate":"2021-09-13"},{"lineNumber":244,"author":{"gitId":"Nirmaleshwar"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":245,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.printf(\"Now you have %d task in your list.\\n\", tasks.size());","lastModifiedDate":"2021-09-13"},{"lineNumber":246,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":247,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.printf(\"Now you have %d tasks in your list.\\n\", tasks.size());","lastModifiedDate":"2021-09-13"},{"lineNumber":248,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":249,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":250,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":251,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":252,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":253,"author":{"gitId":"Nirmaleshwar"},"content":"     * Marks chosen task as done","lastModifiedDate":"2021-10-01"},{"lineNumber":254,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param command","lastModifiedDate":"2021-10-01"},{"lineNumber":255,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":256,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void markAsDone(String command) {","lastModifiedDate":"2021-09-13"},{"lineNumber":257,"author":{"gitId":"Nirmaleshwar"},"content":"        // When user enters string \"done 2\", string is split to extract the index 2 only","lastModifiedDate":"2021-09-01"},{"lineNumber":258,"author":{"gitId":"Nirmaleshwar"},"content":"        int taskDoneIndex \u003d Integer.parseInt(String.valueOf(command.substring(DONE_SIZE))) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":259,"author":{"gitId":"Nirmaleshwar"},"content":"                //Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":260,"author":{"gitId":"Nirmaleshwar"},"content":"        // Checks if given index holds a task and throws error message if no such task exists","lastModifiedDate":"2021-09-01"},{"lineNumber":261,"author":{"gitId":"Nirmaleshwar"},"content":"        if ((taskDoneIndex \u003e tasks.size()) || (taskDoneIndex \u003c 0)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(LINE + System.lineSeparator() +","lastModifiedDate":"2021-09-02"},{"lineNumber":263,"author":{"gitId":"Nirmaleshwar"},"content":"                    \"Apologies sir but, it seems that task hasn\u0027t been created yet \" +","lastModifiedDate":"2021-09-09"},{"lineNumber":264,"author":{"gitId":"Nirmaleshwar"},"content":"                    \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":265,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":266,"author":{"gitId":"Nirmaleshwar"},"content":"            // Selects task to be modified with command \"done\"","lastModifiedDate":"2021-09-01"},{"lineNumber":267,"author":{"gitId":"Nirmaleshwar"},"content":"            Task taskChosen \u003d tasks.get(taskDoneIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":268,"author":{"gitId":"Nirmaleshwar"},"content":"            // Checks if task has already been marked as done","lastModifiedDate":"2021-09-01"},{"lineNumber":269,"author":{"gitId":"Nirmaleshwar"},"content":"            if (taskChosen.isDone()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":270,"author":{"gitId":"Nirmaleshwar"},"content":"                System.out.println(LINE + System.lineSeparator() + \"Sir, I believe this task has already been completed \"","lastModifiedDate":"2021-09-09"},{"lineNumber":271,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\uD83E\\uDD14\");","lastModifiedDate":"2021-09-09"},{"lineNumber":272,"author":{"gitId":"Nirmaleshwar"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":273,"author":{"gitId":"Nirmaleshwar"},"content":"                taskChosen.changeStatusDone(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":274,"author":{"gitId":"Nirmaleshwar"},"content":"                System.out.println(LINE + System.lineSeparator() + \"As you wish sir, this task will be marked as done! \"","lastModifiedDate":"2021-09-09"},{"lineNumber":275,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\uD83D\\uDE01\");","lastModifiedDate":"2021-09-09"},{"lineNumber":276,"author":{"gitId":"Nirmaleshwar"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":277,"author":{"gitId":"Nirmaleshwar"},"content":"            // Otherwise, marks task as done with X. E.g. 1.[ ][X] read book if user inputs \"done 1\"","lastModifiedDate":"2021-09-01"},{"lineNumber":278,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(\"    \" + taskChosen.printTask() + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":279,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":280,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":281,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":282,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":283,"author":{"gitId":"Nirmaleshwar"},"content":"     * Removes chosen task from list","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param command","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":286,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void removeFromList(String command) {","lastModifiedDate":"2021-09-13"},{"lineNumber":287,"author":{"gitId":"Nirmaleshwar"},"content":"        int taskRemoveIndex \u003d Integer.parseInt(String.valueOf(command.substring(DELETE_SIZE))) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":288,"author":{"gitId":"Nirmaleshwar"},"content":"        if (taskRemoveIndex \u003e\u003d tasks.size() || taskRemoveIndex \u003c 0) {","lastModifiedDate":"2021-09-13"},{"lineNumber":289,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(LINE + System.lineSeparator() +","lastModifiedDate":"2021-09-13"},{"lineNumber":290,"author":{"gitId":"Nirmaleshwar"},"content":"                    \"Apologies sir but, there is no such task under that index \" +","lastModifiedDate":"2021-09-13"},{"lineNumber":291,"author":{"gitId":"Nirmaleshwar"},"content":"                    \"\\u2639\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-13"},{"lineNumber":292,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":293,"author":{"gitId":"Nirmaleshwar"},"content":"            Task taskChosen \u003d tasks.get(taskRemoveIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":294,"author":{"gitId":"Nirmaleshwar"},"content":"            tasks.remove(taskChosen);","lastModifiedDate":"2021-09-13"},{"lineNumber":295,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(LINE + System.lineSeparator() + \"As you wish sir, this task will be removed at once! \"","lastModifiedDate":"2021-09-13"},{"lineNumber":296,"author":{"gitId":"Nirmaleshwar"},"content":"                    + \"\\uD83D\\uDE01\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-13"},{"lineNumber":297,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":298,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":299,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":300,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":301,"author":{"gitId":"Nirmaleshwar"},"content":"     * Echoes user input until command \"stop\" is given","lastModifiedDate":"2021-10-01"},{"lineNumber":302,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":303,"author":{"gitId":"Nirmaleshwar"},"content":"    public static void echoMode() {","lastModifiedDate":"2021-09-01"},{"lineNumber":304,"author":{"gitId":"Nirmaleshwar"},"content":"        // Simply echos given command until user types \"stop\"","lastModifiedDate":"2021-09-01"},{"lineNumber":305,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(LINE + System.lineSeparator() + \"What would you like me to repeat sir?\"","lastModifiedDate":"2021-09-14"},{"lineNumber":306,"author":{"gitId":"Nirmaleshwar"},"content":"                + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-14"},{"lineNumber":307,"author":{"gitId":"Nirmaleshwar"},"content":"        Scanner echo \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":308,"author":{"gitId":"Nirmaleshwar"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":309,"author":{"gitId":"Nirmaleshwar"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":310,"author":{"gitId":"Nirmaleshwar"},"content":"            String echoLine \u003d echo.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":311,"author":{"gitId":"Nirmaleshwar"},"content":"            if (echoLine.equals(\"stop\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":312,"author":{"gitId":"Nirmaleshwar"},"content":"                isExit \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":313,"author":{"gitId":"Nirmaleshwar"},"content":"                System.out.println(LINE + System.lineSeparator()","lastModifiedDate":"2021-09-02"},{"lineNumber":314,"author":{"gitId":"Nirmaleshwar"},"content":"                        + \"Okay sir, stopping echo mode\" + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":315,"author":{"gitId":"Nirmaleshwar"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":316,"author":{"gitId":"Nirmaleshwar"},"content":"                System.out.println(LINE + System.lineSeparator() + \"J.A.R.V.I.S says: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":317,"author":{"gitId":"Nirmaleshwar"},"content":"                        + echoLine + System.lineSeparator() + LINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":318,"author":{"gitId":"Nirmaleshwar"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":319,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nirmaleshwar":317,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Nirmaleshwar":7}},{"path":"src/main/java/allTasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package allTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String taskType \u003d \"[ ]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"     * Creates new task with description as name.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"     * Sets task default as not complete with boolean isDone.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param description string name of task inputted.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the name of the selected task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return description of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"        return taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"     * Checks if task is already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return boolean value: True \u003d done and False \u003d not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"     * Changes task status to \"completed\".","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param done True if not marked and False if already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"    public void changeStatusDone(boolean done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets \"X\" icon to mark completed tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return X if done and [ ] if not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Nirmaleshwar"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printForSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + \",\" + getStatusIcon() + \",\" + getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Nirmaleshwar":62}},{"path":"src/main/java/allTasks/typesOfTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package allTasks.typesOfTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String taskType \u003d \"[D]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"     * Creates new deadline task","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param description name of task","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param by due date for task","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the due date of task","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return due date","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"        return this.by;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the type of task unique to this class","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return [\"D\"] for deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"        return taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"        super.printTask();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + getStatusIcon() + \" \" + getDescription()","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Nirmaleshwar"},"content":"                + \"(by: \" + getBy() + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printForSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + \",\" + getStatusIcon() + \",\" + getDescription() + \",\" + getBy();","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nirmaleshwar":48}},{"path":"src/main/java/allTasks/typesOfTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package allTasks.typesOfTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String taskType \u003d \"[E]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"     * Creates new Event task","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param description name of event","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param by time at which event will happen","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    public Event(String description, String by){","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the event time","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return event time","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"        return this.by;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the type of task unique to this class","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return [\"E\"] for event","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"        return taskType;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"        super.printTask();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + getStatusIcon() + \" \" + getDescription()","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Nirmaleshwar"},"content":"                + \"(at: \" + getBy() + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printForSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + \",\" + getStatusIcon() + \",\" + getDescription() + \",\" + getBy();","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Nirmaleshwar":48}},{"path":"src/main/java/allTasks/typesOfTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package allTasks.typesOfTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import allTasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"    protected String taskType \u003d \"[T]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"     * Creates new todo task","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"     * @param description name of task","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"     * Gets the type of task unique to this class","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return [\"T\"] for todo","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"        return taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"     * Prints the full task","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"     * @return taskType + done status + task name","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printTask () {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"    public String printForSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"        return getTaskType() + \",\" + getStatusIcon() + \",\" + getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nirmaleshwar":39}}]
