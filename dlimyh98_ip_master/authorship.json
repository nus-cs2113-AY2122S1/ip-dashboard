[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"# Duke - CLI Task Manager","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"## Getting started with Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"1. Copy the JAR file into an empty folder","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"2. Open command window in that folder","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"3. Run `java -jar {filename}.jar`","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"## Functionalities within Duke App","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"### Non-Insertion commands","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"####  `list` - *Lists down all the tasks you have*","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"    1. [T][] Buy bread","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"    2. [T][] Buy chicken","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    3. [D][] Chemistry homework submission (by: 10pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"    4. [E][] Having dinner with friends (at: 6pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"####  `done {task number}` - *Marks the corresponding task as done*","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    done 3","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"    This task is done:","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"    [D][X] Chemistry homework submission (by: 10pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"####  `delete {task number}` - *Removes the corresponding task*","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"    delete 4","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"    I have removed this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"    [E][] Having dinner with friends (at: 6pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"####  `find {search filter}` - *Returns the Tasks that match your search filter*","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"    find buy","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"    [T][] Buy bread","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"    [T][] Buy chicken","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"#### `bye` - *Exits Duke*","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"    bye","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"    See you later alligator","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"### Insertion commands","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"#### `todo {task description}` - *Adds a todo Task*","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"    todo Do laundry","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"    I\u0027ve added:","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"    [T][] Do laundry","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"#### `deadline {task description} /by {task deadline}` - *Adds a Deadline Task*","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"    deadline Essay submission /by 10pm","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"    I\u0027ve added:","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"    [D][] Essay submission (by: 10pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"#### `event {task description} /at {task timing}` - *Adds an Event Task*","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"    event Birthday party /at 7pm","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"    I\u0027ve added:","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"    [E][] Birthday party (at: 7pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"## Functionalities outside Duke App","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"#### Viewing your Tasks on the hard drive","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"Besides booting up Duke and using `list` to view your Tasks, you can opt to view your Tasks on a saved *.txt* file.","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"1. Locate the folder where you copied the JAR file into","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"2. Click on `savedData.txt`","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"dlimyh98"},"content":"3. Latest version of your Tasks will be shown, **provided you exited Duke using `bye`.**","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dlimyh98":58,"-":1}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"import Parsing.ParseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"import Storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Todo;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"import UI.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"import Main.Duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":" * Utility class indicating how Duke responds to commands made by User","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"public class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"     * Utility function for executing the commands that Duke has received (after Parsing)","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"     * @param parseInput  User input that has been parsed appropriately","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"     * @param tasks       User\u0027s tasks in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"     * @param storage     Actions involving read/write to hard drive","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"    public static void executeCommand (ParseInput parseInput, List\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"        if (parseInput \u003d\u003d null) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"            Duke.isLoading \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"        switch (parseInput.parseResult) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"        //---------- Non-Insertion Commands ----------//","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"        case BYE :","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"            UI.dukeGoodbye();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"            Duke.isExit \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"        case DONE :","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"            taskIndex \u003d findTaskIndex(parseInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"            tasks.get(taskIndex - 1).markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"            if (!Duke.isLoading) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"                storage.saveCommand(parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"                UI.doneTask(tasks, taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"        case LIST :","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"            UI.listTask(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"        case DELETE :","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"            taskIndex \u003d findTaskIndex(parseInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"dlimyh98"},"content":"            if (!Duke.isLoading) {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"dlimyh98"},"content":"                storage.saveCommand(parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"dlimyh98"},"content":"                UI.deletedTask(tasks, taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"dlimyh98"},"content":"            else {","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"dlimyh98"},"content":"                tasks.remove(taskIndex -1);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"dlimyh98"},"content":"                Task.numberOfTasks -\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"dlimyh98"},"content":"        case FIND :","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"dlimyh98"},"content":"            UI.searchTask(tasks, parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"dlimyh98"},"content":"        //---------- Insertion Commands ----------//","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"dlimyh98"},"content":"        case TODO :","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"dlimyh98"},"content":"            Task todoTask \u003d new Todo(parseInput.userInput.replaceAll(parseInput.taskType, \"\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"dlimyh98"},"content":"            tasks.add(todoTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"dlimyh98"},"content":"            if (!Duke.isLoading) {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"dlimyh98"},"content":"                storage.saveCommand(parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"dlimyh98"},"content":"                UI.addedTask(todoTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"dlimyh98"},"content":"        case DEADLINE :","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"dlimyh98"},"content":"            Task deadlineTask \u003d new Deadline(parseInput.descriptionAndTime.split(\"/\")[0], parseInput.descriptionAndTime.split(\"/\")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"dlimyh98"},"content":"            tasks.add(deadlineTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"dlimyh98"},"content":"            if (!Duke.isLoading) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"dlimyh98"},"content":"                storage.saveCommand(parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"dlimyh98"},"content":"                UI.addedTask(deadlineTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"dlimyh98"},"content":"        case EVENT :","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"dlimyh98"},"content":"            Task eventTask \u003d new Event(parseInput.descriptionAndTime.split(\"/\")[0], parseInput.descriptionAndTime.split(\"/\")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"dlimyh98"},"content":"            tasks.add(eventTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"dlimyh98"},"content":"            if (!Duke.isLoading) {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"dlimyh98"},"content":"                storage.saveCommand(parseInput.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"dlimyh98"},"content":"                UI.addedTask(eventTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"dlimyh98"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"dlimyh98"},"content":"     * Given a ParseInput object, finds the index (in the list) of the corresponding Task","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"dlimyh98"},"content":"     * @param parseInput    User input that has been parsed appropriately","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"dlimyh98"},"content":"     * @return              Index of corresponding task","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"dlimyh98"},"content":"    private static int findTaskIndex (ParseInput parseInput){","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"dlimyh98"},"content":"        String result \u003d parseInput.userInput.replaceAll(\"[^0-9]\",\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"dlimyh98"},"content":"        return (Integer.parseInt(result));","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":114}},{"path":"src/main/java/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":" * Represents Exceptions that are unique to Duke.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"    public DukeException (String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"        super(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"dlimyh98":11}},{"path":"src/main/java/Main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Main;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"import Commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"import Parsing.ParseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"import Parsing.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"import Storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"import Exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"import UI.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"public class Duke {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"    public static boolean isLoading \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"    public static boolean isExit \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    final public static String commandfilePath \u003d \"savedCommands.txt\";","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"    final public static String datafilePath \u003d \"savedData.txt\";","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"    List \u003cTask\u003e tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"    public Duke (String commandfilePath, String datafilePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"        storage \u003d new Storage (commandfilePath, datafilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"        storage.loadData(tasks, storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"     * Runs Duke app.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"     * Note that loading the User data (from previous usages) is already done when Duke is instantiated.","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"     * @param tasks    User\u0027s tasks in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"     * @param storage  Actions involving reading/writing to hard drive","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"    private void run (List\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"        UI.dukeGreeting();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"                Scanner userScanner \u003d new Scanner (System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"                String userInput \u003d userScanner.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"                ParseInput parseInput \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"                Command.executeCommand(parseInput, tasks, storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"                UI.dukeError(dukeException.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"        Duke duke \u003d new Duke (commandfilePath, datafilePath);","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"        duke.run(duke.tasks, duke.storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"        duke.storage.saveData(duke.tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":57}},{"path":"src/main/java/Parsing/ParseInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Parsing;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":" * Denotes how parsed information from User input is represented in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":" * A ParseInput object contains the following attributes","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":" * 1. parseResult (an ENUM mapping to valid commands that Duke understands)","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":" * 2. userInput (raw User input)","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":" * 3. taskType (valid only when User adds a Task; corresponding to Task, Deadline, Event)","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":" * 4. descriptionAndTime (valid only when User adds a Task; corresponds to the Task description (and time, if valid)","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"public class ParseInput {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    public ParseResult parseResult;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"    public String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"    public String taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"    public String descriptionAndTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"    public ParseInput (ParseResult parseResult, String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"        this.parseResult \u003d parseResult;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"    public ParseInput (ParseResult parseResult, String userInput, String taskType, String descriptionAndTime) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"        this.parseResult \u003d parseResult;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"        this.descriptionAndTime \u003d descriptionAndTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":30}},{"path":"src/main/java/Parsing/ParseResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Parsing;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":" * ENUM corresponding to all valid commands that Duke understands","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"public enum ParseResult {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"    BYE,","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"    DONE, LIST, DELETE,","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"    TODO, DEADLINE, EVENT,","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"    FIND","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":11}},{"path":"src/main/java/Parsing/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Parsing;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"import Exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":" * Denotes how User input is parsed (for useful information) to use in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"    private static boolean isTask (String input) {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"        return input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\");","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    protected static void checkDescription (String input) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"        if (isTask(input) \u0026\u0026 input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"            throw new DukeException(\"Description cannot be empty\");","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"     * Transforms User input into something that Duke can use.","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"     * Both invalid and valid commands will be transformed appropriately.","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"     * @param input          raw User input","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"     * @return ParseInput    Object encapsulating different aspects of parsed User input","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"     * @throws DukeException thrown if Task description is empty, or User input is invalid (not understood)","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"    public static ParseInput parse (String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"        ParseInput parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"        //---------- Non-Insertion Checks ----------//","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"            parseInput \u003d new ParseInput(ParseResult.BYE, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"            return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"        else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"            parseInput \u003d new ParseInput(ParseResult.LIST, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"            return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"        else if (input.contains(\"done\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"            parseInput \u003d new ParseInput(ParseResult.DONE, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"            return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"        else if (input.contains(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"            parseInput \u003d new ParseInput(ParseResult.DELETE, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"            return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"        else if (input.contains(\"find\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"            parseInput \u003d new ParseInput(ParseResult.FIND, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"            return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"        //---------- Insertion Checks ----------//","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"dlimyh98"},"content":"        else {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"dlimyh98"},"content":"            String taskType \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"dlimyh98"},"content":"            String descriptionAndTime \u003d input.replaceAll(taskType, \"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"dlimyh98"},"content":"            Parser.checkDescription(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"dlimyh98"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"dlimyh98"},"content":"            case \"todo\" :","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"dlimyh98"},"content":"                parseInput \u003d new ParseInput(ParseResult.TODO, input, taskType, descriptionAndTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"dlimyh98"},"content":"                return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"dlimyh98"},"content":"            case \"deadline\" :","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"dlimyh98"},"content":"                parseInput \u003d new ParseInput(ParseResult.DEADLINE, input, taskType, descriptionAndTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"dlimyh98"},"content":"                return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"dlimyh98"},"content":"            case \"event\" :","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"dlimyh98"},"content":"                parseInput \u003d new ParseInput(ParseResult.EVENT, input, taskType, descriptionAndTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"dlimyh98"},"content":"                return parseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"dlimyh98"},"content":"            default :","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"dlimyh98"},"content":"                throw new DukeException (\"I don\u0027t understand, try again\");","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":81}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"import Commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"import Parsing.ParseInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"import Parsing.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"import UI.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"import Main.Duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"import java.io.File;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"import Exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":" * Represents actions that involve reading/writing to Hard Drive.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":" * Storage object contains two String attributes representing File paths","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":" * 1. commandfilePath - path to .txt file that contains all valid commands made by User","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":" * 2. datafilePath - path to .txt file that contains latest User\u0027s tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"    final private String commandfilePath;","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"    final private String datafilePath;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"    public Storage (String commandfilePath, String datafilePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"        this.commandfilePath \u003d commandfilePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"        this.datafilePath \u003d datafilePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"     * Executes saved commands in a .txt file, to populate Duke\u0027s Tasks when Duke is started-up.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"     * @param tasks    User\u0027s tasks in Duke (will be an empty list)","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"     * @param storage  actions involving reading/writing to hard drive","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"    public void loadData (List\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"        File commandFile \u003d new File(commandfilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"            if (commandFile.createNewFile()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"                UI.fileCreated(commandfilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"                Duke.isLoading \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"            else {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"                Scanner commandScanner \u003d new Scanner(commandFile);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"                while (commandScanner.hasNextLine()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"                    ParseInput parseInput \u003d Parser.parse(commandScanner.nextLine());","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"                    Command.executeCommand(parseInput, tasks, storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"dlimyh98"},"content":"            Duke.isLoading \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"dlimyh98"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"dlimyh98"},"content":"            UI.fileExistsError(commandfilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"dlimyh98"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"dlimyh98"},"content":"            UI.dukeError(dukeException.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"dlimyh98"},"content":"     * Saves commands made during Duke\u0027s usage to a .txt file","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"dlimyh98"},"content":"     * @param input a singular Command made to Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"dlimyh98"},"content":"    public void saveCommand (String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"dlimyh98"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"dlimyh98"},"content":"            BufferedWriter commandFileWriter \u003d new BufferedWriter(new FileWriter(commandfilePath, true));","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"dlimyh98"},"content":"            commandFileWriter.append(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"dlimyh98"},"content":"            commandFileWriter.newLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"dlimyh98"},"content":"            commandFileWriter.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"dlimyh98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"dlimyh98"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"dlimyh98"},"content":"     * Saves the current Tasks in Duke to a .txt file","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"dlimyh98"},"content":"     * @param tasks User\u0027s tasks in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"dlimyh98"},"content":"    public void saveData (List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"dlimyh98"},"content":"        File dataFile \u003d new File (datafilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"dlimyh98"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"dlimyh98"},"content":"            if (dataFile.createNewFile()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"dlimyh98"},"content":"                UI.fileCreated(datafilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"dlimyh98"},"content":"            BufferedWriter dataFileWriter \u003d new BufferedWriter(new FileWriter(dataFile));","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"dlimyh98"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"dlimyh98"},"content":"                dataFileWriter.append(tasks.get(i).describeString());","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"dlimyh98"},"content":"                dataFileWriter.newLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"dlimyh98"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"dlimyh98"},"content":"            dataFileWriter.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"dlimyh98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"dlimyh98"},"content":"            UI.fileExistsError(datafilePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":106}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"    protected String taskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"    protected String taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"    // When creating Deadline object, a Task object is created as well","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"    // Hence either add empty constructor to Task, or use super in Deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"    public Deadline (String taskDescription, String taskTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"    public void describePrint() {","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"        System.out.println( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"                + \"(by:\"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"                + (this.taskTime.replaceAll(\"by\", \"\")) + \")\");","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"    public String describeString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"        return( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"                + \"(by:\"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"                + (this.taskTime.replaceAll(\"by\", \"\")) + \")\");","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"dlimyh98":32}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"    protected String taskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"    protected String taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"    public Event (String taskDescription, String taskTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    public void describePrint() {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"        System.out.println( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"                + \"(at:\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"                + (this.taskTime.replaceAll(\"at\", \"\")) + \")\");","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"    public String describeString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"        return( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"                + \"(at:\"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"                + (this.taskTime.replaceAll(\"at\", \"\")) + \")\");","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"dlimyh98":30}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":" * Represents the common attributes/functionalities of Tasks stored in Duke.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":" * Task object serves as a parent for Todo, Event, Deadline objects to inherit appropriately","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"    protected String taskDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"    // Class Level Members","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"    public static int numberOfTasks \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    public Task (String taskDescription) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"        numberOfTasks +\u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"    public String getTaskDescription (Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"        return (task.taskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"        return (isTaskDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"    public void describePrint() {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"        System.out.println( \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"    public String describeString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription);","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"dlimyh98":41}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package Tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"    protected String taskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"    public Todo (String taskDescription) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"    public void describePrint() {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"        System.out.println( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"    public String describeString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"        return( \"[\" + this.taskType + \"]\"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"                + this.taskDescription);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"dlimyh98":24}},{"path":"src/main/java/UI/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyh98"},"content":"package UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"dlimyh98"},"content":"import Tasks.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"dlimyh98"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"dlimyh98"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"dlimyh98"},"content":" * Utility Class representing how Duke visually responds to commands made by User.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"dlimyh98"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"dlimyh98"},"content":"public class UI {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"dlimyh98"},"content":"    public static void dukeGreeting () {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"dlimyh98"},"content":"    public static void dukeGoodbye () {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"See you later alligator\");","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"dlimyh98"},"content":"    public static void listTask (List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"dlimyh98"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"dlimyh98"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"dlimyh98"},"content":"            tasks.get(i).describePrint();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"dlimyh98"},"content":"    public static void doneTask (List\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"This task is done:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"dlimyh98"},"content":"        tasks.get(taskIndex-1).describePrint();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"dlimyh98"},"content":"     * UI\u0027s response when User wants to FIND tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"dlimyh98"},"content":"     * - if FIND command is lacking a description, an error message will be shown","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"dlimyh98"},"content":"     * - if tasks can be found, UI will output them onto screen","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"dlimyh98"},"content":"     * - if no tasks can be found, UI will not output anything","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"dlimyh98"},"content":"     * @param tasks      User\u0027s tasks in Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"dlimyh98"},"content":"     * @param userInput  raw User input","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"dlimyh98"},"content":"    public static void searchTask (List\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"dlimyh98"},"content":"        String[] searchFilter \u003d userInput.split(\"find\");","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"dlimyh98"},"content":"        if (searchFilter.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"dlimyh98"},"content":"            System.out.println(\"Search filter cannot be empty\");","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"dlimyh98"},"content":"        else {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"dlimyh98"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"dlimyh98"},"content":"            tasks.stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"dlimyh98"},"content":"                    .filter(task -\u003e task.getTaskDescription(task).contains(searchFilter[1]))","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"dlimyh98"},"content":"                    .forEach(Task::describePrint);","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"dlimyh98"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"dlimyh98"},"content":"    public static void addedTask (Task addedTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"I\u0027ve added:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"dlimyh98"},"content":"        addedTask.describePrint();","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"You now have \" + Task.numberOfTasks + \" tasks in the list\");","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"dlimyh98"},"content":"    public static void deletedTask (List\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"I have removed this task:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"dlimyh98"},"content":"        tasks.get(taskIndex - 1).describePrint();","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"dlimyh98"},"content":"        tasks.remove(taskIndex -1);","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"dlimyh98"},"content":"        Task.numberOfTasks -\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(\"You now have \" + Task.numberOfTasks + \" tasks in the list\");","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"dlimyh98"},"content":"    public static void fileCreated (String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(input + \" created for you\");","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"dlimyh98"},"content":"     * UI\u0027s response when File cannot be found / cannot be created","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"dlimyh98"},"content":"     * 1. if File cannot be found, error message details which File cannot be found","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"dlimyh98"},"content":"     * 2. if File cannot be created, error message details that File has already been created","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"dlimyh98"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"dlimyh98"},"content":"     * @param input    File path","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"dlimyh98"},"content":"    public static void fileExistsError (String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(input + \" already created\");","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"dlimyh98"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"dlimyh98"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"dlimyh98"},"content":"     * UI\u0027s response when Duke has an Exception","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"dlimyh98"},"content":"     * @param input    Duke\u0027s Exception message","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"dlimyh98"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"dlimyh98"},"content":"    public static void dukeError (String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"dlimyh98"},"content":"        System.out.println(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"dlimyh98"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"dlimyh98"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"dlimyh98":90}}]
