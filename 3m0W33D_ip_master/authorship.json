[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import duke.exception.ArgumentNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public static final String USERNAME \u003d \"VeryImportantUsername\";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public static final String UNKNOWN_COMMAND_MESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public static final String NUMBER_ERROR_MESSAGE \u003d \"☹ NO!!! done/delete should only be given a number!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public static final String ARGUMENTS_ERROR_MESSAGE \u003d \"☹ Oh no!!! Arguments or delimiter could not be found.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public static final HashMap\u003cString, TaskType\u003e COMMAND_MAPPING \u003d new HashMap\u003cString, TaskType\u003e() {{","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        put(COMMAND_TODO, TaskType.TODO);","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        put(COMMAND_EVENT, TaskType.EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        put(COMMAND_DEADLINE, TaskType.DEADLINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }};","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public static TaskManager taskList \u003d new TaskManager();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public static Storage store \u003d new Storage();","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public static Ui uiInteract \u003d new Ui(USERNAME);","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        uiInteract.printBanner();","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        printMenuPrompt();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * Handles the user input and loop logic Calls handleCommand and terminates when isRunning is false","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    private static void printMenuPrompt() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            store.loadFile(taskList);","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        } catch (IOException | IllegalArgumentException fileException) {","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            uiInteract.printMessage(\"Failed to read or create data file!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            System.exit(1);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            //Printing user prompt","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            uiInteract.printPrompt();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"            // Reading user input","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            String userInput \u003d uiInteract.getUserInput();","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"            //Handling Exceptions","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"                handleCommand(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"            } catch (ArgumentNotFoundException | NullPointerException errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"                uiInteract.printMessage(ARGUMENTS_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            } catch (NumberFormatException invalidParsing) {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"                uiInteract.printMessage(NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            } catch (IllegalArgumentException invalidArguments) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"                uiInteract.printMessage(\"☹ OOPS!!! \" + invalidArguments.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"            } catch (InvalidCommandException invalidCommand) {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"                uiInteract.printMessage(UNKNOWN_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"            } catch (IOException saveException) {","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"                uiInteract.printMessage(\"Could not update file or directory!!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        uiInteract.printGoodbye();","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"     * Handles the user input and decide what actions to run","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"     * @param command takes in a command from user","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     * @throws ArgumentNotFoundException a specific delimiter was found in the arguments","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"     * @throws NumberFormatException     if the argument was parsed as an int but is not a number","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException   the command doesn\u0027t exist","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException  the creation of arguments created for a task was not valid","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * @throws NullPointerException      no arguments were provided for a command","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException               when storing data to file has failed","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    private static void handleCommand(String command)","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"            throws ArgumentNotFoundException, NumberFormatException,","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"            InvalidCommandException, IllegalArgumentException, NullPointerException,","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"            IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        // Attempting to parse the command","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        Parser parsed \u003d new Parser(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        if (parsed.getCommand() \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"            uiInteract.printCommandHelp();","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"        switch (parsed.getCommand()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"            taskList.listTasks(uiInteract);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"            terminateProgram();","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"            taskList.markTaskAsDone(uiInteract, parsed.getArgsAsIndex());","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"            TaskType type \u003d COMMAND_MAPPING.get(parsed.getCommand());","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"            taskList.addTask(uiInteract, parsed, type);","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"            taskList.deleteTask(uiInteract, parsed.getArgsAsIndex());","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"        store.saveFile(taskList);","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"    private static void terminateProgram() {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"        isRunning \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"3m0W33D":123,"-":4}},{"path":"src/main/java/duke/exception/ArgumentNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":" * Throws this exception if an argument is not found","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class ArgumentNotFoundException extends Exception{","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"3m0W33D":7}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":" * This is an exception for Commands that could not be found","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"3m0W33D":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"    public static final String DESCRIPTION_EMPTY_ERROR_MESSAGE \u003d \"The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"    public static final String BY_EMPTY_ERROR_MESSAGE \u003d \"The time of a deadline should be completed cannot be empty.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private String by;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"     * Creates a Deadline Task","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     * @param description to describe the deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     * @param by          the time at which the deadline should be completed","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException if the description or by is empty or null","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public Deadline(String description, String by) throws IllegalArgumentException {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        if (checkStringNullOrEmpty(description)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException(DESCRIPTION_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        } else if (checkStringNullOrEmpty(by)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException(BY_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public String saveToText() {","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return \"D | \" + super.saveToText() + \" | \" + by;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"    public static final String DESCRIPTION_EMPTY_ERROR_MESSAGE \u003d \"The description of a event cannot be empty.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"    public static final String AT_EMPTY_ERROR_MESSAGE \u003d \"The time at which of a event should be completed cannot be empty.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private String at;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"     * Creates an Event Task","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     * @param description to describe the event","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     * @param at          the time at which the event is at","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException if the description or at is empty or null","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public Event(String description, String at) throws IllegalArgumentException {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        if (checkStringNullOrEmpty(description)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException(DESCRIPTION_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        } else if (checkStringNullOrEmpty(at)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException(AT_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public String saveToText() {","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return \"E | \" + super.saveToText() + \" | \" + at;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"public class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"     * The actual description or name of the task","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"     * Shows if task is completed","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"     * Gets the user input and check if it is empty or null","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * @param validString the user String input","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return true if string is empty or null and false otherwise","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public boolean checkStringNullOrEmpty(String validString) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        return validString \u003d\u003d null || validString.isEmpty();","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * Obtains description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * @return get the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return description;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * Checks if the task is completed and returns corresponding icons","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @return X if task is already completed else just blank","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     * Sets the task as completed","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     * Check the completion status of a task","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"     * @return get the isDone value","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        return isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     * Format object to be saved as a string","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"     * @return formatted string to save to file","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    public String saveToText() {","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"     * Overwrites default toString method with the custom print message","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"     * @return Customised string message for task","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"3m0W33D":82}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import duke.exception.ArgumentNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_TASK_NUMBER \u003d \"Invalid task number!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    public static final String BLANK_COMMAND \u003d \"Command Should not be blank!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public static final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public static final String TASK_ALREADY_COMPLETED \u003d \"Task already marked as completed!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public static final String DEADLINE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public static final String EVENT_DELIMITER \u003d \"/at\";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public static final String TASK_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public static final String REMOVE_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public TaskManager() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * Check if the index is valid.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * @param index index in the taskList","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * @return if the index is valid","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    private boolean ensureProperIndex(int index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size();","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * Marks a task as done. Informs user that that task has been completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * @param ui    the ui instance to handle output","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     * @param index the index of task in the taskList","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    public void markTaskAsDone(Ui ui, int index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        if (ensureProperIndex(index)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            // Check if the task is already completed","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            if (currentTask.getIsDone()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"                ui.printMessage(TASK_ALREADY_COMPLETED);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"                // Mark a task as done","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"                ui.printMessage(TASK_DONE_MESSAGE, currentTask.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            ui.printMessage(ERROR_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * Gives the specific task in the taskList This function does not check for valid index use the ensureProperIndex","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * function","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     * @param index gets the specific object in the taskList","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"     * @return Task object is returned","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     * Gives how many task is in the taskList","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"     * @return the number of tasks in taskList","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"     * Creates a new task with a specific type","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * @param description the commandline input and its arguments","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"     * @param type        the type of object task we are creating","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"     * @throws ArrayIndexOutOfBoundsException in the case of invalid input by Events or Deadlines","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"    public void addTask(Ui ui, Parser description, TaskType type) throws ArgumentNotFoundException {","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        // Creates new task to add to the list","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        Task newTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        switch (type) {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        case TODO:","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"            newTask \u003d new Todo(description.getArguments());","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"            newTask \u003d new Deadline(description.getArgsBeforeString(DEADLINE_DELIMITER),","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"                    description.getArgsAfterString(DEADLINE_DELIMITER));","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        case EVENT:","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"            newTask \u003d new Event(description.getArgsBeforeString(EVENT_DELIMITER),","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"                    description.getArgsAfterString(EVENT_DELIMITER));","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"            // Error Message should not be reachable","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"            ui.printMessage(BLANK_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"        // Adding the task to the list of task","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"        ui.printMessage(ADD_TASK_MESSAGE,","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"                newTask.toString(),","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"                \"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"     * Add a Task object to the taskList","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"     * @param task the Task object to add","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"     * Deletes an existing task","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"     * @param ui    the ui instance to handle output","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"3m0W33D"},"content":"    public void deleteTask(Ui ui, int index) {","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"        if (ensureProperIndex(index)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"            Task removedTask \u003d taskList.get(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"            taskList.remove(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"            ui.printMessage(REMOVE_TASK_MESSAGE,","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"3m0W33D"},"content":"                    removedTask.toString(),","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"3m0W33D"},"content":"                    \"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"3m0W33D"},"content":"            ui.printMessage(ERROR_TASK_NUMBER);","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"3m0W33D"},"content":"     * Prints the user the list of all task If it is empty prints the empty message instead.","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"3m0W33D"},"content":"     * @param ui the Ui Instance to format the message to the user","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"3m0W33D"},"content":"    public void listTasks(Ui ui) {","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"3m0W33D"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"3m0W33D"},"content":"            ui.printEmptyTaskMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"3m0W33D"},"content":"            ui.printAllTasks(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":155}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":" * This ENUM is to check the type of task being created","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":8}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"    public static final String DESCRIPTION_EMPTY_ERROR_MESSAGE \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"     * Creates a Todo Task","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"     * @param description to describe the todo","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException if the description is empty or null","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    public Todo(String description) throws IllegalArgumentException {","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        if (checkStringNullOrEmpty(description)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException(DESCRIPTION_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public String saveToText() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        return \"T | \" + super.saveToText();","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":29}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.util;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import duke.exception.ArgumentNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private String command;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"    private String arguments;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_DELIMITER \u003d \" \";","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public static final int START_INDEX \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     * Parse input and separates the command from the arguments","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * @param command the command line input to be parsed","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        command \u003d command.strip();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"            this.command \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"            arguments \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        } else if (!command.contains(SPACE_DELIMITER)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            this.command \u003d command;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            arguments \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            int commandIndex \u003d command.indexOf(SPACE_DELIMITER);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            this.command \u003d command.substring(START_INDEX, commandIndex).strip();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            this.arguments \u003d command.substring(commandIndex).strip();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Further splits the arguments based on a delimiter gives the first half the split string","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @param delimiter the delimiter to split the arguments by","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     * @return first half the string split delimiters","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     * @throws ArgumentNotFoundException if the delimiter is not found in the string","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * @throws NullPointerException      if the arguments is null","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    public String getArgsBeforeString(String delimiter)","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"            throws ArgumentNotFoundException, NullPointerException {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        int locationOfArgument \u003d arguments.indexOf(delimiter);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        if (locationOfArgument \u003d\u003d -1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        String firstArgument \u003d arguments.substring(START_INDEX, locationOfArgument).strip();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        return firstArgument.isEmpty() ? null : firstArgument;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"     * Further splits the arguments based on a delimiter gives the second half the split string","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * @param delimiter the delimiter to split the arguments by","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * @return second half the string split delimiters","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     * @throws ArgumentNotFoundException if the delimiter is not found in the string","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     * @throws NullPointerException      if the arguments is null","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    public String getArgsAfterString(String delimiter)","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            throws ArgumentNotFoundException, NullPointerException {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        int locationOfArgument \u003d arguments.indexOf(delimiter);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        if (locationOfArgument \u003d\u003d -1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        String secondArgument \u003d arguments.substring(locationOfArgument + delimiter.length()).strip();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        return secondArgument.isEmpty() ? null : secondArgument;","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     * Attempts to parse the arguments as an index for TaskManager","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"     * @return the index to item in TaskManager","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     * @throws NumberFormatException if the input is not a number","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    public int getArgsAsIndex() throws NumberFormatException {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        return Integer.parseInt(arguments) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"     * Gets the command after parsing","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"     * @return parsed command string","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        return command;","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"     * Gets the string after the commands","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"     * @return arguments of the command","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"    public String getArguments() {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        return arguments;","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":95}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.util;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class Storage {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public static final String CURRENT_DIRECTORY \u003d \"user.dir\";","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public static final String STRING_IP \u003d \"ip\";","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public static final int BEGIN_INDEX \u003d 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static final int NOT_FOUND_INDEX \u003d -1;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    public static final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public static final String STORAGE_FILE \u003d \"duke.txt\";","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public static final String DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public static final String TODO_TYPE \u003d \"T\";","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public static final String EVENT_TYPE \u003d \"E\";","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public static final String DEADLINE_TYPE \u003d \"D\";","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public static final int MAX_INDEX \u003d 3;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    public static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public static final int MAX_EVENT_DEADLINE \u003d 4;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    private Path storagePath;","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * Use the current directory and tries to find the string ip and maps out the data directory","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public Storage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        String path \u003d System.getProperty(CURRENT_DIRECTORY);","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        int findIpIndex \u003d path.indexOf(STRING_IP);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        if (findIpIndex !\u003d NOT_FOUND_INDEX) {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"            path \u003d path.substring(BEGIN_INDEX, findIpIndex + STRING_IP.length());","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        storagePath \u003d Paths.get(path, DIRECTORY, STORAGE_FILE);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     * Check directory and try to create the data directory to store the data","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException failed to create directory","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    private void createDataDirectory() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        if (!Files.exists(storagePath.getParent())) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"            Files.createDirectories(storagePath.getParent());","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"     * Check storage file and try to create the storage file to store the data","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException failed to create file","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    private void createStorageFile() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        if (!Files.exists(storagePath)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            Files.createFile(storagePath);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     * Parse a string to a task object","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     * @param task the task as a string","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"     * @return the task object","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException file does not follow format","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    private Task parseTask(String task) throws IllegalArgumentException {","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        String[] taskInfo \u003d Arrays.stream(task.split(DELIMITER))","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"                .map(String::strip)","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        if (taskInfo.length \u003c MAX_INDEX) {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        Task SingleTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        if (taskInfo[BEGIN_INDEX].equals(TODO_TYPE) \u0026\u0026 taskInfo.length \u003d\u003d MAX_INDEX) {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"            SingleTask \u003d new Todo(taskInfo[DESCRIPTION_INDEX]);","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        } else if (taskInfo[BEGIN_INDEX].equals(EVENT_TYPE) \u0026\u0026 taskInfo.length \u003d\u003d MAX_EVENT_DEADLINE) {","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"            SingleTask \u003d new Event(taskInfo[DESCRIPTION_INDEX], taskInfo[MAX_INDEX]);","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        } else if (taskInfo[BEGIN_INDEX].equals(DEADLINE_TYPE) \u0026\u0026 taskInfo.length \u003d\u003d MAX_EVENT_DEADLINE) {","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"            SingleTask \u003d new Deadline(taskInfo[DESCRIPTION_INDEX], taskInfo[MAX_INDEX]);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        if (taskInfo[1].equals(\"1\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"            SingleTask.markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        return SingleTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"     * loads the data file from and parses it","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"     * @param taskList the TaskManager to store all the loaded task","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException              Unable to read file","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"     * @throws IllegalArgumentException parsing of file failed","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"    public void loadFile(TaskManager taskList) throws IOException, IllegalArgumentException {","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        createDataDirectory();","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"        createStorageFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"        try (Stream\u003cString\u003e stream \u003d Files.lines(storagePath)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"            stream.map(this::parseTask).forEach(taskList::addTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"        } catch (IOException fileException) {","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"            throw new IOException();","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"     * Stores data to storage file","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"     * @param taskList TaskManager containing the task we want to store","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException Unable to write to file","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"    public void saveFile(TaskManager taskList) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"        FileWriter storageFile \u003d new FileWriter(storagePath.toFile());","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d BEGIN_INDEX; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"            storageFile.write(taskList.getTask(i).saveToText() + \"\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"            storageFile.flush();","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"        storageFile.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"3m0W33D":128}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package duke.util;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class Ui {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public static final String SHELL_RPG_BANNER \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"            \" #####  #     # ####### #       #          ######  ######   #####  \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"                    + \"#     # #     # #       #       #          #     # #     # #     # \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"                    + \"#       #     # #       #       #          #     # #     # #       \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"                    + \" #####  ####### #####   #       #          ######  ######  #  #### \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"                    + \"      # #     # #       #       #          #   #   #       #     # \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"                    + \"#     # #     # #       #       #          #    #  #       #     # \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"                    + \" #####  #     # ####### ####### #######    #     # #        #####  \";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public static final String TASKLIST_EMPTY \u003d \"There are no tasks in your list\";","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public static final String TASKLIST_MESSAGE \u003d \"Here are your tasks in your list:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private String username;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private Scanner in;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public Ui(String username) {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     * Reads user input from standard in","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * @return single input from standard in","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        return in.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public void printCommandHelp() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        printMessage(\"Please run one of the following commands:\",","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"                \"1. todo \u003cdescription\u003e - Creates a todo task\",","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"                \"2. deadline \u003cdescription\u003e /by \u003csome deadline\u003e - Creates a deadline task\",","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"                \"3. event \u003cdescription\u003e /at \u003csome day and time\u003e - Creates a event task\",","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"                \"4. list - List all tasks\",","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"                \"5. done \u003ctask number\u003e - Marks a task as completed\",","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"                \"6. bye - exits program\");","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * Prints the banner for the chatbot","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    public void printBanner() {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        printMessage(\"[+] Welcome to Shell RPG\",","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"                \"[+] Searching for Character........\",","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"                \"[+] Character \" + username + \" Found!\",","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"                \"[+] Character Level: 100\",","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"                \"[+] Access Granted! Welcome to: \",","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"                SHELL_RPG_BANNER","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     * Prints user prompt","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    public void printPrompt() {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        System.out.printf(\"┌─[\"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"                + \"ShellRPG@%s\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"                \"]-[~]\\n\", username);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        System.out.print(\"└──╼ $ \");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"     * Prints the terminating message","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public void printGoodbye() {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        printMessage(GOODBYE_MESSAGE);","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"     * Prints the message with 2 lines before and after","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     * @param messages Array of messages that are input into the function","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"    public void printMessage(String... messages) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"     * List all task added by the user Show which task has been completed","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    public void printAllTasks(TaskManager taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        System.out.println(TASKLIST_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        // Printing all tasks with their completion status","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"            System.out.printf(\"%d. %s\\n\", (i + 1), taskList.getTask(i));","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"     * Shows only if the list of task is empty","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"    public void printEmptyTaskMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"        printMessage(TASKLIST_EMPTY);","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":109}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"done -1","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"todo Work out","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"deadline this should not work","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"deadline this should word /by tiger time :-)","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"event fake event","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"event project meeting /at Some day and sometime","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"done 2","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"event    /at","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"deadline    /by","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"delete 1","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"3m0W33D":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\util\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"3m0W33D":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/util/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"3m0W33D":2,"-":36}}]
