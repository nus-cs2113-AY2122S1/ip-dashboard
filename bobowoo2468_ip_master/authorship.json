[{"path":"CS2113 IP/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"T |   | ice coffee","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"T |   | CS2113 Level-2","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"E |   | Mum\u0027s birthday celebration /at Sunday 2pm","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"D |   | IP submission /by 1/10/2021 2359","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"bobowoo2468":4}},{"path":"CS2113 IP/docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"*Duke* is a **desktop app for managing tasks, events and deadlines, optimized for use via a Command Line Interface (","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"CLI)**. It functions as a Personal Assistant Chatbot, that helps a person keep track of things.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"## Quick Start","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"2. Download CS2113_IP.jar from [here](CS2113 IP.jar).","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"3. Copy the file into a *home folder* of your choice for Duke.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"4. In the command line, navigate to Duke\u0027s *home folder* using the terminal command to change directory, `cd`.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"cd Documents","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"cd Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"5. Run Duke by entering the following line of code:","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"java -jar CS2113_IP.jar","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"5. Type the command in the command line and press *Enter* to execute the command. Some examples of commands you can try:","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    - `list` List all tasks stored in the database","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    - `todo TASK_NAME` Adds a task to Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    - `event EVENT_NAME /at Sunday, 2pm` Adds an event and the event\u0027s time to Duke.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    - `delete 2` Deletes the 2nd task in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    - `done 1` Marks the 1st task in the list as completed.","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    - `bye` Exits the app.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"6. Refer to the *Features* below for details of each command.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"Adds a todo to Duke.","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"- `todo CS2113 Level-2`","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":" [T][] CS2113 Level-2","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"Now you have 2 items in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"### Adding an event: `event`","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"Adds an event to Duke, and required descriptive fields of the event (time/location).","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"Format: `event EVENT_NAME /at EVENT_DESCRIPTION`","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"- `event Mum\u0027s birthday celebration /at Sunday 2pm`","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"- `event CS2113 Mid-terms /at NUS LT51`","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":" [E][] Mum\u0027s birthday celebration (at: Sunday 2pm)","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"Now you have 3 items in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"Adds a task with deadline to Duke. Date-time of deadline is required as an input.","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"Format: `deadline EVENT_NAME /by d/M/yyyy HHmm`","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"- `deadline IP submission /by 1/10/2021 2359`","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"- `deadline GES Essay /by 20/10/2021 1200`","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":" [D][] IP submission (by: Oct 01 2021 23:59)","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"Now you have 4 items in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"Shows a list of all the tasks in Duke\u0027s task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"Format: `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"1.[T][ ] CS2113 Level-2","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"2.[E][ ] Mum\u0027s birthday celebration (at: Sunday 2pm)","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"3.[D][ ] IP submission (by: Oct 01 2021 23:59)","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"### Locating all tasks by matching description: `find`","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"Shows a list of all the tasks with description that matches the search key input by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"Format: `find SEARCH_KEY`","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"- find submission","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"1.[D][ ] IP submission (by: Oct 01 2021 23:59)","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"2.[T][X] SEP documents submission","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"Explanation of outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"- Duke checks whether the search key is a substring in the task description for each task.","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"- Tasks that contains the search key are listed.","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"### Listing upcoming deadlines: `upcoming`","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"Shows a list of all the uncompleted tasks with deadlines that are within three days.","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"Format: `upcoming`","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome (assuming current date - 26 Sep 2021):","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"Here are the upcoming deadlines in your list within the next three days:","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"\u003e\u003e\u003e Java coding assignment (by: Sep 28 2021 23:59)","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"\u003e\u003e\u003e CCA signups (by: Sep 27 2021 16:00)","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"### Marking task as completed: `done`","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"Marks specified task within Duke\u0027s task list as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"Format: `done TASK_INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"- Marks the task at the specified `TASK_INDEX`.","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"- `TASK_INDEX` refers to the index number shown in the displayed list of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"- The index **must be a positive integer** and **within** the number of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"- done 1","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"1st task in list is marked as done (represented by a `X`).","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"[T][X] CS2113 Level-2","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"Deletes specified task within Duke\u0027s task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"- Deletes the task at the specified `TASK_INDEX`.","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"- `TASK_INDEX` refers to the index number shown in the displayed list of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"- The index **must be a positive integer** and **within** the number of tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"- delete 2","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"2nd task in list is deleted.","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"[T][X] CS2113 Level-2","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"Exits the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"Format: `bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"### Saving the tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"Duke automatically saves the data in a text file in the same directory of Duke. Hence, there is no need for to **save","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"manually**.","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"________","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"bobowoo2468"},"content":"## Command Summary","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"bobowoo2468"},"content":"Feature | Format | Example","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"bobowoo2468"},"content":"------  | ------ | -------","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"**Add todo** |`todo TASK_NAME`| `todo CS2113 Level-2`","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"bobowoo2468"},"content":"**Add event** |`event EVENT_NAME /at EVENT_DESCRIPTION`| `event Mum\u0027s birthday celebration /at Sunday 2pm`","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"bobowoo2468"},"content":"**Add deadline** |`deadline EVENT_NAME /by d/M/yyyy HHmm`| `deadline IP submission /by 1/10/2021 2359`","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"bobowoo2468"},"content":"**List tasks** |`list` | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"bobowoo2468"},"content":"**Mark task** | `done TASK_INDEX` | `done 1`","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"bobowoo2468"},"content":"**Delete task** | `delete TASK_INDEX` | `delete 1`","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"**Find task** | `find SEARCH_KEY` | `find submission`","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"**List upcoming deadlines** | `upcoming` | `upcoming`","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"**Exit Duke** | `bye` | `bye`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"-":18,"bobowoo2468":212}},{"path":"CS2113 IP/src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"public class Duke {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    final static private String filePath \u003d Storage.getFilePath();","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"        storage.createDirectory();","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"        storage.createFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"            tasks \u003d new TaskList(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"        tasks.listOperations();","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"bobowoo2468":37}},{"path":"CS2113 IP/src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.FormatException;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"public class TaskList {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    final private static String GOODBYE_COMMENT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_MARK_TASK_DESCRIPTION \u003d \"Please do not leave your task number empty :-(\";","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_UNKNOWN_INPUT \u003d \":-( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_EMPTY_TODO_DESCRIPTION \u003d \"Please do not leave your todo description empty :-(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_EMPTY_DEADLINE_DESCRIPTION \u003d \"Please do not leave your deadline description empty :-(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_EMPTY_EVENT_DESCRIPTION \u003d \"Please do not leave your event description empty :-(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_EMPTY_DELETE_DESCRIPTION \u003d \"Please do not leave your delete task number empty :-(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_MISSING_FIND_DESCRIPTION \u003d \"What are you finding?? :o\";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_WRONG_HANDLE_TODO_DESCRIPTION \u003d \"Check for missing fields in your description!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_WRONG_HANDLE_EVENT_DESCRIPTION \u003d \"Include /at handler and insert date of event!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_WRONG_HANDLE_DEADLINE_DESCRIPTION \u003d \"Include /by handler and insert deadline!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_MARK_TASK_UNKNOWN_INPUT \u003d \"Please enter as follows: done (INT in number)\";","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_DELETE_TASK_UNKNOWN_INPUT \u003d \"Please enter as follows: delete (INT in number)\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_OUT_OF_BOUNDS \u003d \"That task does not exist! Stop fooling around!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ERROR_WRONG_DEADLINE \u003d \"Please input your deadline in the format: d/M/yyyy HHmm :-)\";","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    public TaskList(String filePath) throws IOException, DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"        setUpDuke(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    public Task get(int indexNumber) {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        return tasks.get(indexNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        return taskCount;","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     * Sets up the array at the start of runtime of the programme, using the database.","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * Scans through the entire document to get data line by line.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     * Adds the task and its descriptive fields into the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     * Depending on the task type indicator, adds the specific task and its description into the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"     * @param filePath File path of database.","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"     * @throws IOException   If file to scan does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException If data fields of one line within database is insufficient (i.e. \u003c3)","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"    private static void setUpDuke(String filePath) throws IOException, DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        parser.setScanner(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"        while (parser.hasNext()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"            String[] lineData \u003d parser.getLineData();","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"            final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"            final int DONE_INDEX \u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"            final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"            String taskTypeString \u003d lineData[TASK_TYPE_INDEX];","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"            String isDoneString \u003d lineData[DONE_INDEX];","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"            String description \u003d lineData[DESCRIPTION_INDEX];","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"            Task newTask;","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"            String userInput;","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"            switch (taskTypeString) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"            case (\"T\"):","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"                userInput \u003d String.format(\"todo %s\", description.trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"                newTask \u003d new Todo(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"                tasks.add(taskCount, newTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"            case (\"E\"):","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"                userInput \u003d String.format(\"event %s\", description.trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"                newTask \u003d new Event(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"                tasks.add(taskCount, newTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"            case (\"D\"):","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"                userInput \u003d String.format(\"deadline %s\", description.trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"                newTask \u003d new Deadline(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"                tasks.add(taskCount, newTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"            if (parser.isDone(isDoneString)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"                tasks.get(taskCount).markAsDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"            taskCount++;","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"    private static void deleteTask(String userInput) throws DukeException, OutOfBoundsException, NumberFormatException {","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        int userInputInt \u003d parser.getUserInputInt(userInput, tasks.size());","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"        taskCount--;","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"        int zeroIndexInputInt \u003d userInputInt - 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"        Task specifiedTask \u003d tasks.get(zeroIndexInputInt);","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleDelete(specifiedTask, tasks, zeroIndexInputInt, taskCount);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"    private static void doneTask(String userInput) throws DukeException, NumberFormatException, OutOfBoundsException {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"        int userInputInt \u003d parser.getUserInputInt(userInput, tasks.size());","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        int zeroIndexInputInt \u003d userInputInt - 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"        Task specifiedTask \u003d tasks.get(zeroIndexInputInt);","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"        specifiedTask.markAsDone();","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleDone(specifiedTask);","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"    private static void listTask() {","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleListComment();","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"            ui.handleListFormat(taskIndex, task);","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"     * Iterates through the list of tasks to check if tasks contains the search key.","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"     * If so, the ui handles the tasks that contains description that matches the search key and lists them out.","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput User\u0027s input to Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException If user\u0027s input lacks the search key.","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"    private static void findTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"        String userSearchKey \u003d parser.getUserSearchKey(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleListComment();","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"        int tasksFoundIndex \u003d 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasSearchKey \u003d parser.hasSearchKey(userSearchKey, task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"            if (hasSearchKey) {","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"                ui.handleFind(tasksFoundIndex, task);","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"                tasksFoundIndex++;","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"     * Iterates through the list of tasks, and only checks the tasks in the list labelled as deadlines.","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"     * Tasks that are upcoming (due within less than three days) are listed by the Ui.","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"    private static void listUpcoming() {","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleUpcomingComment();","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"                ui.handleUpcoming(t, parser.isThreeDaysAway(t.deadline), t.isDone);","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"    private static void addTask(String userInput, TaskType specificTask) throws DukeException, FormatException {","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"        parser.addTaskExceptionHandler(userInput, specificTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"        Task newTask;","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"        switch (specificTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"        case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"            newTask \u003d new Event(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"        case TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"            newTask \u003d new Todo(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"            newTask \u003d new Deadline(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"            newTask \u003d new Task(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"        taskCount++;","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"        ui.handleAdd(newTask, taskCount);","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"     * Parses user input command to check for the specific command keyword before executing the command.","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"     * If unknown, prints an unknown input error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"     * Within each command, try and catch blocks are used to perform exception/error handling.","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"bobowoo2468"},"content":"     * Exits the loop when \u0027bye\u0027 command is input.","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"     * \u0027done\u0027, \u0027delete\u0027: Catch error if task number is missing, of incorrect format, or out of bounds.","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"     * \u0027todo\u0027, \u0027event\u0027: Catch error if description field missing, placeholders missing.","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"     * \u0027deadline\u0027: Additionally, catch error if deadline is formatted incorrectly (unable to be parsed)","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"     * \u0027find\u0027: Catch error if search key is missing.","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"bobowoo2468"},"content":"    public void listOperations() {","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"        boolean isBye;","lastModifiedDate":"2021-09-20"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"        boolean isList;","lastModifiedDate":"2021-09-20"},{"lineNumber":202,"author":{"gitId":"bobowoo2468"},"content":"        boolean isUpcoming;","lastModifiedDate":"2021-09-24"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"        boolean isDone;","lastModifiedDate":"2021-09-20"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"        boolean isTodo;","lastModifiedDate":"2021-09-20"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"        boolean isDeadline;","lastModifiedDate":"2021-09-20"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"        boolean isEvent;","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"        boolean isDelete;","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"        boolean isFind;","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"        do {","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"            String userInput \u003d parser.getUserInput();","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"            isBye \u003d userInput.equals(\"bye\");","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"bobowoo2468"},"content":"            isList \u003d userInput.equals(\"list\");","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"            isUpcoming \u003d userInput.equals(\"upcoming\");","lastModifiedDate":"2021-09-24"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"            isDone \u003d userInput.startsWith(\"done\");","lastModifiedDate":"2021-09-20"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"            isTodo \u003d userInput.startsWith(\"todo\");","lastModifiedDate":"2021-09-20"},{"lineNumber":217,"author":{"gitId":"bobowoo2468"},"content":"            isDeadline \u003d userInput.startsWith(\"deadline\");","lastModifiedDate":"2021-09-20"},{"lineNumber":218,"author":{"gitId":"bobowoo2468"},"content":"            isEvent \u003d userInput.startsWith(\"event\");","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"bobowoo2468"},"content":"            isDelete \u003d userInput.startsWith(\"delete\");","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"bobowoo2468"},"content":"            isFind \u003d userInput.startsWith(\"find\");","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":223,"author":{"gitId":"bobowoo2468"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":224,"author":{"gitId":"bobowoo2468"},"content":"            if (isBye) {","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"bobowoo2468"},"content":"                System.out.println(GOODBYE_COMMENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"bobowoo2468"},"content":"                listTask();","lastModifiedDate":"2021-09-20"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isUpcoming) {","lastModifiedDate":"2021-09-24"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"                listUpcoming();","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isDone) {","lastModifiedDate":"2021-09-20"},{"lineNumber":231,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"bobowoo2468"},"content":"                    doneTask(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":233,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":234,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_MARK_TASK_DESCRIPTION);","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"bobowoo2468"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_MARK_TASK_UNKNOWN_INPUT);","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"bobowoo2468"},"content":"                } catch (OutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_OUT_OF_BOUNDS);","lastModifiedDate":"2021-09-20"},{"lineNumber":239,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":240,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isDelete) {","lastModifiedDate":"2021-09-20"},{"lineNumber":241,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-20"},{"lineNumber":242,"author":{"gitId":"bobowoo2468"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":244,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_EMPTY_DELETE_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"bobowoo2468"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":246,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_DELETE_TASK_UNKNOWN_INPUT);","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"bobowoo2468"},"content":"                } catch (OutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_OUT_OF_BOUNDS);","lastModifiedDate":"2021-09-20"},{"lineNumber":249,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":250,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isTodo) {","lastModifiedDate":"2021-09-20"},{"lineNumber":251,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-20"},{"lineNumber":252,"author":{"gitId":"bobowoo2468"},"content":"                    addTask(userInput, TaskType.TODO);","lastModifiedDate":"2021-09-20"},{"lineNumber":253,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":254,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_EMPTY_TODO_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"                } catch (FormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":256,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_WRONG_HANDLE_TODO_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":258,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2021-09-20"},{"lineNumber":259,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-20"},{"lineNumber":260,"author":{"gitId":"bobowoo2468"},"content":"                    addTask(userInput, TaskType.DEADLINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":261,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":262,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_EMPTY_DEADLINE_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":263,"author":{"gitId":"bobowoo2468"},"content":"                } catch (FormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":264,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_WRONG_HANDLE_DEADLINE_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":265,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":266,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_WRONG_DEADLINE);","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isEvent) {","lastModifiedDate":"2021-09-20"},{"lineNumber":269,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-20"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"                    addTask(userInput, TaskType.EVENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":271,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":272,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_EMPTY_EVENT_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"                } catch (FormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":274,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_WRONG_HANDLE_EVENT_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":275,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isFind) {","lastModifiedDate":"2021-09-25"},{"lineNumber":277,"author":{"gitId":"bobowoo2468"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":278,"author":{"gitId":"bobowoo2468"},"content":"                    findTask(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":279,"author":{"gitId":"bobowoo2468"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"bobowoo2468"},"content":"                    System.out.println(ERROR_MISSING_FIND_DESCRIPTION);","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":282,"author":{"gitId":"bobowoo2468"},"content":"            } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":283,"author":{"gitId":"bobowoo2468"},"content":"                System.out.println(ERROR_UNKNOWN_INPUT);","lastModifiedDate":"2021-09-20"},{"lineNumber":284,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":285,"author":{"gitId":"bobowoo2468"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":286,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":287,"author":{"gitId":"bobowoo2468"},"content":"        } while (!isBye);","lastModifiedDate":"2021-09-20"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":289,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":290,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bobowoo2468":290}},{"path":"CS2113 IP/src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"    TODO,","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"    DEADLINE,","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"    EVENT","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bobowoo2468":7}},{"path":"CS2113 IP/src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.exception;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"bobowoo2468":5}},{"path":"CS2113 IP/src/main/java/duke/exception/FormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.exception;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class FormatException extends Exception {","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"bobowoo2468":5}},{"path":"CS2113 IP/src/main/java/duke/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.exception;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class OutOfBoundsException extends Exception {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"bobowoo2468":5}},{"path":"CS2113 IP/src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import duke.TaskType;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.FormatException;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.io.File;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"public class Parser {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    private static Scanner setUpScanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    private static final Scanner commandScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public Parser() {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    public void setScanner(String filePath) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"        File storedData \u003d new File(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"        setUpScanner \u003d new Scanner(storedData);","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     * Returns fields within a line of data in the form of a String array.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     * Each line of data is obtained as a String, as the Scanner scans the stored data in duke.txt.","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     * If there are insufficient fields obtained, exception is thrown to break out of the function.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * @return Fields within a line of data, separated by separator.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException If there are insufficient fields within each line of data (i.e. \u003c 3)","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    public String[] getLineData() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        String lineDataString \u003d setUpScanner.nextLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        String[] lineData \u003d lineDataString.trim().split(\" \\\\| \");","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        if (isIncomplete(lineData)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        return lineData;","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the integer specified by the user after splitting the user input String.","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"     * If the integer is out-of-bounds, not formatted properly or left empty, an exception is thrown,","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"     * and the programme breaks out of the function.","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput    User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"     * @param taskListSize Size of array containing Task objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"     * @return Integer within user\u0027s input for \u0027done\u0027 and \u0027delete\u0027 commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     * @throws OutOfBoundsException  If the input number \u003e size of array i.e. task does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     * @throws NumberFormatException If the number in the form of string cannot be parsed into an Integer.","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException         If description after the command is left empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    public int getUserInputInt(String userInput, int taskListSize) throws OutOfBoundsException, NumberFormatException, DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        if (isEmptyDescription(userInput)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitStringBySpace \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        String userInputIntString \u003d splitStringBySpace[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        int userInputInt \u003d Integer.parseInt(userInputIntString);","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        if (userInputInt \u003e taskListSize) {","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        return userInputInt;","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        String userInput \u003d commandScanner.nextLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"        return userInput;","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the search key in String entered by the user after splitting the user Input String.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"     * If the search key is missing, exception is thrown and the programme breaks out of this function.","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"     * @return Search key entered by user.","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException If search key after \u0027find\u0027 command is left empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"    public String getUserSearchKey(String userInput) throws DukeException {","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"        if (isEmptyDescription(userInput)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitStringBySpace \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"        String userInputSearchKey \u003d splitStringBySpace[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"        return userInputSearchKey;","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a boolean value of whether the task in the task list (esp. the description) contains the search key.","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"     * @param userSearchKey   User specified key to search within the tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"     * @param taskDescription Description of task, a variable within the Task object.","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"     * @return Boolean of whether task description contains String of user\u0027s search key.","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"    public boolean hasSearchKey(String userSearchKey, String taskDescription) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"        boolean hasSearchKey \u003d taskDescription.contains(userSearchKey);","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"        return hasSearchKey;","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"     * Refactored the throw of exceptions in addTask method following OOP principles.","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput    User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"     * @param specificTask Enum of specific task type.","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"     * @throws DukeException   If descriptive fields are missing.","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"     * @throws FormatException If placeholder is missing.","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"    public void addTaskExceptionHandler(String userInput, TaskType specificTask) throws DukeException, FormatException {","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        if (isEmptyDescription(userInput)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"        } else if (isIncorrectFormat(userInput, specificTask)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"            throw new FormatException();","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a boolean value of whether a task\u0027s deadline is less than three days away from today\u0027s date.","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"     * A task is due in less than three days if the date has not been passed yet,","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"     * and the difference in days is less than three.","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"     * @param deadline Deadline of a task in the form (d/M/yyyy HHmm)","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"     * @return Boolean of whether a task\u0027s deadline is three days away from the today\u0027s day (current date time)","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isThreeDaysAway(String deadline) {","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"        long diff \u003d ChronoUnit.DAYS.between(currentDateTime, deadlineDateTime);","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"        final int THREE_DAYS \u003d 3;","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"        boolean isWithinThreeDays \u003d (int) diff \u003c\u003d THREE_DAYS;","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"        boolean hasNotPassed \u003d (int) diff \u003e 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"        return isWithinThreeDays \u0026\u0026 hasNotPassed;","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"    public boolean hasNext() {","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"        return setUpScanner.hasNext();","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    public static boolean isIncomplete(String[] lineData) {","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        return lineData.length \u003c 3;","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isDone(String isDoneString) {","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"        return isDoneString.equals(\"X\");","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"     * Returns boolean true if user\u0027s input lacks descriptive field, separated by space after the command keyword.","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"     * @return Boolean for empty description in user\u0027s input.","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isEmptyDescription(String userInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"        String[] trimDescription \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"        return trimDescription.length \u003c 2;","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"     * Returns true if user\u0027s input lacks \u0027/at\u0027 placeholder for an \u0027event\u0027 command,","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"     * and if user\u0027s input lacks \u0027/by\u0027 placeholder for a \u0027deadline\u0027 command.","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"     * @param userInput    User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"     * @param specificTask Enum of taskType as a specifier","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"     * @return Boolean of whether user input string is formatted incorrectly, specifically \u0027event\u0027 and \u0027deadline\u0027","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isIncorrectFormat(String userInput, TaskType specificTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"        switch (specificTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"        case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasEventPlaceholder \u003d userInput.contains(\"/at\");","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasNoEventPlaceholder \u003d !hasEventPlaceholder;","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"            return hasNoEventPlaceholder;","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasDeadlinePlaceholder \u003d userInput.contains(\"/by\");","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasNoDeadlinePlaceholder \u003d !hasDeadlinePlaceholder;","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"            return hasNoDeadlinePlaceholder;","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bobowoo2468":189}},{"path":"CS2113 IP/src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.io.File;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"public class Storage {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    final private static String DIRECTORY_CREATED \u003d \"Data directory created successfully \u003e\u003e::))\";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    final private static String DIRECTORY_EXISTS \u003d \"Duke-data directory exists \u003e\u003e::))\";","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    final private static String DATABASE_CREATED \u003d \"Duke database created \u003e\u003e::))\";","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    final private static String DATABASE_EXISTS \u003d \"Duke database up-to-date! \u003e\u003e::))\";","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    final private static String filePath \u003d getFilePath();","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public Storage() {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * Loads the newly created file, and creates a directory at the specified file path.","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * Prints a message to signal the directory creation if it does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public void createDirectory() {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"        File newFile \u003d load();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        boolean isCreated \u003d newFile.mkdir();","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        if (isCreated) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(DIRECTORY_CREATED);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(DIRECTORY_EXISTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a file specified by filePath, for creation of text database.","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     * If file is successfully created, notify the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"     * @throws IOException If file cannot be created at the specified file path (i.e. path does not exist)","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"        if (newFile.createNewFile()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(DATABASE_CREATED);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(DATABASE_EXISTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        Ui.showHorizontalLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a File object that prepares the creation of a directory (data) if it does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * @return File object with specified file path for storage creation.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    public File load() {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        Path currentRelativePath \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"        Path currentPath \u003d currentRelativePath.toAbsolutePath();","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        File newFile \u003d new File(currentPath + \"/data\");","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        return newFile;","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the concatenation of the current path and the path to the database.","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"     * @return File path where database resides.","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"    public static String getFilePath() {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"        Path currentRelativePath \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"        Path currentPath \u003d currentRelativePath.toAbsolutePath();","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"        String filePath \u003d currentPath + \"/data/duke.txt\";","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        return filePath;","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"     * Writes the list of tasks and its descriptive fields into the database at the end of runtime of programme.","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"     * Deadline and Event typed tasks will have their descriptions formatted different compared to Todo type tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"     * @throws IOException If file does not exist, or file path does not exist, or no access rights to the file.","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    public void writeFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTaskCount(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"            boolean isEvent \u003d tasks.get(i).taskType.equals(\"E\");","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"            boolean isDeadline \u003d tasks.get(i).taskType.equals(\"D\");","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"            String formatDescription;","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"            if (isEvent) {","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"                formatDescription \u003d String.format(\"%s /at %s\",","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"                        tasks.get(i).specificDescription, tasks.get(i).date);","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"                formatDescription \u003d String.format(\"%s /by %s\",","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"                        tasks.get(i).specificDescription, tasks.get(i).deadline);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"            } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"                formatDescription \u003d tasks.get(i).description;","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"            String formatToWrite \u003d String.format(\"%s | %s | %s\\n\",","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"                    tasks.get(i).taskType, tasks.get(i).getStatusIcon(), formatDescription);","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"            fw.write(formatToWrite);","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"        fw.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bobowoo2468":105}},{"path":"CS2113 IP/src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     * Constructor that initialises Deadline type tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     * Splits the description into its descriptive fields before storing into variables within the Task object.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     * Formats the deadline before storing it into the description.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * @param description User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"        super(description);","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"        String trimString \u003d trimUserInput(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"        String unformattedDeadline \u003d extractDeadline(trimString);","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"        String formattedDeadline \u003d formatDeadline(unformattedDeadline);","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"        this.deadline \u003d unformattedDeadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"        this.specificDescription \u003d extractDescription(trimString);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"        this.description \u003d String.format(\"%s (by: %s)\", extractDescription(trimString), formattedDeadline);","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"        taskType \u003d \"D\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     * Returns deadline from user\u0027s input description, splitting the description with placeholder \u0027/by\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     * Deadline is after the task description (second element in array).","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     * @param description Description of task after removing command key word.","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     * @return Deadline extracted from description.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    private String extractDeadline(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitByRegex \u003d description.trim().split(\"/by\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        String deadline \u003d splitByRegex[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        return deadline.trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"     * Returns deadline from user\u0027s input description, splitting the description with placeholder \u0027/by\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"     * Task description is before the deadline (first element in array).","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     * @param description Description of task after removing command key word.","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     * @return Task description extracted from description.","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    private String extractDescription(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitByRegex \u003d description.trim().split(\"/by\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        String newDescription \u003d splitByRegex[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        return newDescription.trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a formatted string for the deadline to be included in the description to be printed for the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     * Parses the unformatted deadline with the format d/M/yyyy HHmm (e.g. 25/9/2021 1510)","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * Reformats the deadline to give the formatted string with the format, MMM dd yyyy HH:mm.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     * (e.g. Sep 25 15:10)","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     * @param unformattedDeadline Deadline that is pre-formatted.","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     * @return Formatted deadline string.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    private String formatDeadline(String unformattedDeadline) {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(unformattedDeadline, formatter);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        String formattedDeadline \u003d deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"        return formattedDeadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bobowoo2468":67}},{"path":"CS2113 IP/src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"     * Constructor that initialises Event type tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"     * Splits the description into its descriptive fields before storing into variables within the Task object.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     * @param description User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    public Event(String description) {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"        super(description);","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"        String trimString \u003d trimUserInput(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"        this.date \u003d extractDate(trimString);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"        this.specificDescription \u003d extractDescription(trimString);","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"        this.description \u003d String.format(\"%s (at: %s)\", extractDescription(trimString), extractDate(trimString));","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"        taskType \u003d \"E\";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Returns event date from user\u0027s input description, splitting the description with placeholder \u0027/at\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * Deadline is after the task description (second element in array).","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * @param description Description of task after removing command key word.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * @return Task description extracted from description.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    private String extractDate(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitByRegex \u003d description.trim().split(\"/at\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        String date \u003d splitByRegex[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"        return date.trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     * Returns event date from user\u0027s input description, splitting the description with placeholder \u0027/at\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     * Description is before the event date (first element in array).","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     * @param description Description of task after removing command key word.","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     * @return Event date extracted from description.","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    private String extractDescription(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitByRegex \u003d description.trim().split(\"/at\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        String newDescription \u003d splitByRegex[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        return newDescription.trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bobowoo2468":45}},{"path":"CS2113 IP/src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"    public String deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"    public String date;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"    public String description;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    public String specificDescription;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    public String taskType \u003d \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * Returns description of task within user\u0027s input after splitting user\u0027s input string by spaces.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     * @param description User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     * @return Description of task within user\u0027s input.","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    protected String trimUserInput(String description) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitStringBySpace \u003d description.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        String trimString \u003d splitStringBySpace[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        return trimString;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"bobowoo2468":36}},{"path":"CS2113 IP/src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"     * Constructor that initialises Todo type tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"     * Splits the description into its descriptive fields before storing into variables within the Task object.","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"     * @param description User\u0027s input in the Command Line.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"        super(description);","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"        this.description \u003d trimUserInput(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"        taskType \u003d \"T\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bobowoo2468":15}},{"path":"CS2113 IP/src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package duke.ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    final private static String HORIZONTAL_LINE \u003d \"_________________________________________________________________\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    final private static String DELETE_TASK_COMMENT \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    final private static String MARK_TASK_COMMENT \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    final private static String LIST_TASK_COMMENT \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    final private static String LIST_UPCOMING_TASKS \u003d \"Here are the upcoming deadlines in your list within the next three days:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    final private static String ADDED_TASK_COMMENT \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public Ui() {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        String LOADING_ERROR \u003d \"LOAD ERROR ... LOAD ERROR ... LOAD ERROR ...\";","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(LOADING_ERROR);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     * Handles \u0027delete\u0027 command\u0027s UI aspect, formatting the task deleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     * Reiterates the number of items left in the list after deletion.","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     * @param task              Specific task outlined for deletion.","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"     * @param tasks             List of tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"     * @param zeroIndexInputInt User\u0027s input integer converted to 0-based-index for array manipulation.","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"     * @param taskCount         Number of tasks in the list after deletion.","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    public void handleDelete(Task task, ArrayList\u003cTask\u003e tasks, int zeroIndexInputInt, int taskCount) {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(DELETE_TASK_COMMENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"        String printTask \u003d String.format(\" [%s][%s] %s\", task.taskType, task.getStatusIcon(), task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        tasks.remove(zeroIndexInputInt);","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(printTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"        String printTaskNumber \u003d String.format(\"Now you have %d items in the list.\", taskCount);","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(printTaskNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     * Handles \u0027done\u0027 command\u0027s UI aspect, formatting the task to be mark as done.","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * e.g. [T][X] homework","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     * @param task Specific task outlined for deletion.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    public void handleDone(Task task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(MARK_TASK_COMMENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        String formatOutput \u003d String.format(\"[%s][%s] %s\", task.taskType, task.getStatusIcon(), task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(formatOutput);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"    public void handleListComment() {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(LIST_TASK_COMMENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"    public void handleUpcomingComment() {","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(LIST_UPCOMING_TASKS);","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"     * Formats list of tasks for the \u0027list\u0027 command.","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"     * e.g. 1.[T][X] homework","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"     * @param taskIndex 1-based-index to index each task when listing.","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"     * @param task      Specific task within the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    public void handleListFormat(int taskIndex, Task task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        String formatOutput \u003d String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"                taskIndex, task.taskType,","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"                task.getStatusIcon(), task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(formatOutput);","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"    public void handleFind(int indexOne, Task task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"        String formatOutput \u003d String.format(\"%d.[%s][%s] %s\", indexOne, task.taskType,","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"                task.getStatusIcon(), task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(formatOutput);","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"     * Handles \u0027add\u0027 command\u0027s UI aspect, formatting the task that was just added.","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"     * Reiterates the number of items left in the list after addition.","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"     * @param newTask   Specific task that was newly added.","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"     * @param taskCount Number of tasks in the list after addition.","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"    public void handleAdd(Task newTask, int taskCount) {","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(ADDED_TASK_COMMENT);","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        String printTask \u003d String.format(\" [%s][] %s\", newTask.taskType, newTask.description);","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(printTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"        String printTaskNumber \u003d String.format(\"Now you have %d items in the list.\", taskCount);","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(printTaskNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"     * Handles \u0027upcoming\u0027 command\u0027s UI aspect, formatting the task to be listed if it is upcoming and uncompleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"     * If task is three days away and is yet to be completed, print task in the following format:","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"     * \u003e\u003e\u003e [TASK_DESCRIPTION]","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"     * @param task            Specified task to be checked whether it is upcoming or completed.","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"     * @param isThreeDaysAway Boolean value of whether task is due within three days of current date time.","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"     * @param isDone          Boolean value of whether task is completed.","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"    public void handleUpcoming(Task task, boolean isThreeDaysAway, boolean isDone) {","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        boolean isNotDone \u003d !isDone;","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        if (isThreeDaysAway \u0026\u0026 isNotDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"            String printTask \u003d String.format(\"\u003e\u003e\u003e %s\", task.description);","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(printTask);","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"    public static void showHorizontalLine() {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bobowoo2468":133}},{"path":"CS2113 IP/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bobowoo2468":7}}]
