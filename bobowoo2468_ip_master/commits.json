{"authorDailyContributionsMap":{"bobowoo2468":[{"date":"2021-08-19","commitResults":[{"hash":"727da5b175a3475fd1240ff2be6afc316b3300e4","messageTitle":"Add Greet","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2021-08-20","commitResults":[{"hash":"cbf031fa7119fd52fa5e7326337a42028c37adf5","messageTitle":"Add Greet and Echo","messageBody":"Used java.util.Scanner to read inputs from terminal, and obtained user String input with .nextLine().\n\nChecked whether the input equals \u0027bye\u0027. If false, stay in the loop and prompt user input again. If true, exit the loop and print exit message.\n\nCreated two different functions outside of main.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":38,"deletions":15},"bat":{"insertions":0,"deletions":0},"sh":{"insertions":0,"deletions":0},"md":{"insertions":0,"deletions":0}}},{"hash":"86f63d4e4edec29167a9f50f99dd8fe97f38d98d","messageTitle":"Add AddAndList","messageBody":"Modified previous method Echo from a while loop to a do-while loop, since first iteration does not check for userInput.\n\nAddAndList has a array of size 100 that for each user input (excluding keywords bye and list), saves the user input into the array.\n\nAdded keyword \u0027list\u0027 which functions to list out all the user input saved within the array, during the runtime of the program.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}}]},{"date":"2021-08-21","commitResults":[{"hash":"7712438b8a47ca19a4b72a56834d3ffb45694731","messageTitle":"Add Task Class and Mark Task as Done","messageBody":"Created a new class called Task that contains three parameters, task description, task index, and boolean isDone\n\nWithin class Task, theres is a constructor, get status icon (determines whether task is done), and class method mark as done.\n\nFunction checks whether user input has keywords (bye, list, done). Logic for loop exit is unchanged, and for listing of array unchanged.\n\nAdded \u0027done\u0027 function which allows user to select which list element to be marked, calling the markAsDone function to update the isDone boolean state of the specific Task object.\n","tags":["Level-3","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":8}}}]},{"date":"2021-08-31","commitResults":[{"hash":"3e19a8c80e3ab5a65c4bd540c949de7e971550d5","messageTitle":"Add class-level Member taskCount and methods listTask, addTask and markTask","messageBody":"Changed the taskCount into a class-level member such that objects in class can access this variable.\n\nRefactored by extracting method to form the three new methods. Renamed all methods such that it follows the camelCase standards.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":16}}}]},{"date":"2021-09-01","commitResults":[{"hash":"dcb89afbe9b5684eb4ba166b22030203d1d4d4f5","messageTitle":"Add ToDo, Event and Deadline","messageBody":"Added support for tracking three different types of tasks (Todo, Events, Deadlines). Each of these three task types are subclasses under class Task.\n\nFor Todo, changed previous method to add tasks, used split by regex space to separate the description from the command (todo).\n\nSimilarly, for Deadline and Event, used split to separate the specific description such as deadline and used String.format to format the output.\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":7}}},{"hash":"70a5b8c0e4445413ca286572ae94c60bd822f69a","messageTitle":"Add Automated Text-UI-Testing","messageBody":"","tags":["A-TextUiTesting","A-CodeQuality"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}}]},{"date":"2021-09-09","commitResults":[{"hash":"512cef7637a90bada9087c48e1ed1ab10828950a","messageTitle":"Add DukeException class for error-handling","messageBody":"Add logic to catch array out of bound errors by seeing if number of array items after split by spaces \u003c 2. If so, throw DukeException error.\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":17}}},{"hash":"7f71dcd5a35b75d90a21653dadcc91fb259f73ea","messageTitle":"Add package to divide classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}}]},{"date":"2021-09-12","commitResults":[{"hash":"417f86b7657ea2e6bf5174c6a3ee08efcc145ca1","messageTitle":"Add mark task error handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":12}}}]},{"date":"2021-09-14","commitResults":[{"hash":"eb86427782820234c1e76c70ec2f8ed43a336108","messageTitle":"Add deleteTask and Java collections class ArrayList of type Task","messageBody":"To support deletion of tasks, made use of ArrayList methods .remove().\n\nEdited addTask function to support use of ArrayList collection .add() and changed tasks (task list) to type ArrayList\u003cTask\u003e.\n","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":10}}},{"hash":"b493f63c8002aaea75d3961a51bf4f757d0c39dd","messageTitle":"Add FormatException for exception handling","messageBody":"Add extra error handler for incorrect placeholder (/at and /by) for event and deadlines respectively\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":4}}},{"hash":"5445960faa81e5ce5f77580b7f5b57a22fcf200c","messageTitle":"Add imports to prepare for File IO","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"8a2f447a1ae869567bae4517a5603e729fdcdc6a","messageTitle":"Add create file and write file for fileIO and saving of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}}]},{"date":"2021-09-15","commitResults":[{"hash":"418cbe383cdc0e5735e23c0f5911703ddd914fdd","messageTitle":"Add file IO and save functionalities","messageBody":"Add java.util.Scanner to read file input, and used File and FileWriter objects to create a file and write to the file.\n\njava.util.Paths and java.util.Path was also used to allow different OS to run the program as it will identify the current working directory before creating and writing and reading to the text file\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":83,"deletions":17}}},{"hash":"2043524933d997afb34230983c60e785458054ab","messageTitle":"Add changes to catch error function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-09-16","commitResults":[{"hash":"bf2af784cab9aacd6c8ce76f058b6919929627b5","messageTitle":"Add global variables to improve SLAP of main method, and createDirectory method.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":8},"java":{"insertions":51,"deletions":38}}}]},{"date":"2021-09-19","commitResults":[{"hash":"4eb9a8eff864ec80f7c1756deead19983a4efe41","messageTitle":"Add more exception handling, such as OutOfBoundsException, NumberFormatException","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":103,"deletions":55}}}]},{"date":"2021-09-20","commitResults":[{"hash":"20aad407449cb0cf2f3fe816623d1e8f53f885f9","messageTitle":"Add classes for increased OOP","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":183,"deletions":104}}},{"hash":"0d91652f785a962536cd9e4c6b2e6b3522754669","messageTitle":"Add Parser, Storage, Ui, TaskList and refactored code to make code more OOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":345,"deletions":300}}}]},{"date":"2021-09-21","commitResults":[{"hash":"8126a75a7762fdb3aed0eaed81e0b5597f239fd3","messageTitle":"Refactored classes into packages and made code more OOP","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":72,"deletions":46}}}]},{"date":"2021-09-24","commitResults":[{"hash":"c98c323efad18cce39093c1cd4138b3c254ef60c","messageTitle":"Add date/time recognition functionalities and an operation to check for upcoming tasks within three days of deadline","messageBody":"Used java.time.LocalDateTime and java.time.temporal.ChronoUnit to parse and format the date and time of the deadline accordingly.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":64,"deletions":3}}}]},{"date":"2021-09-25","commitResults":[{"hash":"672792c05cf22c5923fb347c546564eedbecd6ff","messageTitle":"Add find functionality to return tasks that has matching descriptions as user search key","messageBody":"Refactored \u0027for\u0027 loops for cleaner OOP and made \u0027done\u0027 and \u0027delete\u0027 user input integer affect the task list as an index one integer.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3},"java":{"insertions":63,"deletions":17}}},{"hash":"73227bef7dab3547257906a1fa9a25457f23e5c5","messageTitle":"Add some bug fixes after erroneous merging","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":2,"deletions":4}}},{"hash":"60f7d1b38aa5a524c6293728b799c8c2625f44aa","messageTitle":"Add JavaDoc to majority of public methods and non-trivial private/protected methods. Fix bugs for file IO.","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":4},"java":{"insertions":262,"deletions":53}}}]},{"date":"2021-09-26","commitResults":[{"hash":"8210a5489dd7b22485bae0282a6cb13f5e5d3433","messageTitle":"Add a brief user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"md":{"insertions":213,"deletions":12}}}]}]},"authorFileTypeContributionMap":{"bobowoo2468":{"java":939,"md":212,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":11}},"authorContributionVariance":{"bobowoo2468":4674.3755},"authorDisplayNameMap":{"bobowoo2468":"CS2113T-F11-3 WOO ..TUAN"}}
