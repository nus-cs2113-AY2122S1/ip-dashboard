[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"Duke is a desktop application for **keeping track of tasks** via a **Command Line Interface (CLI)**.","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"* Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"* Features","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"  * Adding a todo: `todo`","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"  * Adding a deadline: `deadline`","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"  * Adding an event: `event`","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"  * Listing all tasks: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"  * Checking off a task: `done`","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"  * Finding a task by keyword: `find`","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"  * Deleting a task: `delete`","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"  * Exiting the program: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"* Command Summary","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"## Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"1. Ensure you have **Java 11** or above installed on your computer.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"2. Download the latest Duke.jar from [here](https://github.com/jerrelllzw/ip/releases).","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Duke.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"4. Open your command prompt and navigate to your _home folder_ as chosen in step 3.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"5. Type `java -jar ip.jar` in the command prompt and press enter to run Duke.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"6. Type a command in Duke\u0027s command box and press enter to execute it.","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"7. Refer to the **Features** below for details of each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"**Notes about the command format:**","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"* For commands that do not take in parameters, supplying a parameter will result in an error.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"e.g. entering `list 3` will result in an error.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"Adds a todo to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"`todo read book` Adds the task \"read book\" to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"  [T][ ] read book","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":" Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE`","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"`deadline finish essay /by Mon 9pm` Adds a task \"finish essay\" with the deadline \"Mon 9pm\" to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"jerrelllzw"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"jerrelllzw"},"content":"  [D][ ] finish essay (by: Mon 9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"jerrelllzw"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"jerrelllzw"},"content":"### Adding an event: `event`","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"jerrelllzw"},"content":"Adds an event to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"jerrelllzw"},"content":"Format: `event TASK_DESCRIPTION /at DATE`","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"jerrelllzw"},"content":"`event school dance /at Jan 28th 7-9pm` Adds an event \"school dance\" with the date \"Jan 28th 7-9pm\" to the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"jerrelllzw"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"jerrelllzw"},"content":"  [E][ ] school dance (at: Jan 28th 7-9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"jerrelllzw"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"jerrelllzw"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"jerrelllzw"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"jerrelllzw"},"content":"Format: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"jerrelllzw"},"content":"`list`","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"jerrelllzw"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"jerrelllzw"},"content":" 1.[T][ ] read book","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"jerrelllzw"},"content":" 2.[D][ ] finish essay (by: Mon 9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"jerrelllzw"},"content":" 3.[E][ ] school dance (at: Jan 28th 7-9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"jerrelllzw"},"content":"### Checking off a task: `done`","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"jerrelllzw"},"content":"Marks a task as done.","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"jerrelllzw"},"content":"Format: `done TASK_NUMBER`","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"jerrelllzw"},"content":"`done 2` Marks the second task \"finish essay\" in the task list as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"jerrelllzw"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"jerrelllzw"},"content":"  [D][X] finish essay (by: Mon 9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"jerrelllzw"},"content":"### Finding a task by keyword: `find`","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"jerrelllzw"},"content":"Finds tasks with a description that contain the keyword.","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"jerrelllzw"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"jerrelllzw"},"content":"`find school` Finds tasks with a description that contain the keyword \"school\".","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"jerrelllzw"},"content":" Here are the matching tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"jerrelllzw"},"content":" 1.[E][ ] school dance (at: Jan 28th 7-9pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"jerrelllzw"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"jerrelllzw"},"content":"Deletes a task in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"jerrelllzw"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"jerrelllzw"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"jerrelllzw"},"content":"`delete 1` Deletes the first task in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"jerrelllzw"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"jerrelllzw"},"content":"  [T][ ] read book","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"jerrelllzw"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"jerrelllzw"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"jerrelllzw"},"content":"Exits the program.","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"jerrelllzw"},"content":"Format: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"jerrelllzw"},"content":"Example: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"jerrelllzw"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"jerrelllzw"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"jerrelllzw"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"jerrelllzw"},"content":"## Command Summary","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"jerrelllzw"},"content":"| Command | Format |","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"jerrelllzw"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"jerrelllzw"},"content":"| Todo | `todo TASK_DESCRIPTION` |","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"jerrelllzw"},"content":"| Deadline | `deadline TASK_DESCRIPTION /by DEADLINE` |","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"jerrelllzw"},"content":"| Event | `event TASK_DESCRIPTION /at DATE` |","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"jerrelllzw"},"content":"| List | `list` |","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"jerrelllzw"},"content":"| Done | `done TASK_NUMBER` |","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"jerrelllzw"},"content":"| Find | `find KEYWORD` |","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"jerrelllzw"},"content":"| Delete | `delete TASK_NUMBER` |","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"jerrelllzw"},"content":"| Bye | `bye` |","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"jerrelllzw":157,"-":13}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"D | 1 | finish essay | Mon 9pm","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"E | 0 | school dance | Jan 28th 7-9pm","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"T | 0 | asidnas","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"jerrelllzw":3}},{"path":"src/main/java/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"import task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"public class ChatBot {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"     * Executes the command given.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"     * @param parsedUserInput Parsed user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"     * @param command Input command.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"    public static void executeCommand (ArrayList\u003cTask\u003e tasks, String[] parsedUserInput, String command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"        switch (command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"        case \"list\":","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"            TaskList.printTaskList(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"        case \"done\":","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"            int doneTaskNumber \u003d Integer.parseInt(parsedUserInput[1]) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"            TaskList.markAsDone(tasks, doneTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"            Storage.updateDoneTaskInFile(doneTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"            int deleteTaskNumber \u003d Integer.parseInt(parsedUserInput[1]) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"            TaskList.deleteTask(tasks, deleteTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"            Storage.updateDeleteTaskInFile(deleteTaskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"        case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"            Task newTask \u003d TaskList.createTask(parsedUserInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"            TaskList.addTask(tasks, newTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"            Storage.saveTaskInFile(parsedUserInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"        case \"find\":","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"            String keyword \u003d parsedUserInput[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"            TaskList.findTask(tasks, keyword);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"            isRunning \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"     * Runs the Chatbot.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"    public static void run(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"        String userInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"        while (isRunning) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"jerrelllzw"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"jerrelllzw"},"content":"                Parser.spaceErrorChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"jerrelllzw"},"content":"                String[] parsedUserInput \u003d Parser.parseUserInput(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"jerrelllzw"},"content":"                String command \u003d parsedUserInput[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"jerrelllzw"},"content":"                executeCommand(tasks, parsedUserInput, command);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printSpaceError();","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"jerrelllzw"},"content":"            } catch (StringIndexOutOfBoundsException d) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printCommandError();","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"jerrelllzw":72}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"import task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printGreeting();","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Storage.loadFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"        ChatBot.run(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printFarewell();","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jerrelllzw":9,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":" * Represents all possible Duke errors.","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":" * Deals with printing error messages to the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"     * Prints an error message when there is a space error in the user\u0027s input","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"    public static void printSpaceError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \"☹ OOPS!!! Please check your spacings again!:-)\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     * Prints an error message when the command entered has an incorrect format.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"    public static void printFormatError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \"☹ OOPS!!! Please check your command format again! :-)\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"     * Prints an error message when the task number entered is out of scope.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"    public static void printIndexError() {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \"☹ OOPS!!! Please check your task number again! :-)\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"     * Prints an error message when an invalid command is entered.","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"    public static void printCommandError() {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \"☹ OOPS!!! Sorry, I don\u0027t know what that means! :-(\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"     * Prints an error message when a required file does not exist.","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"    public static void printFileError() {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \"☹ OOPS!!! Please check your working directory again! :-)\\n\";","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"jerrelllzw":47}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":" * Contains all String parsing related methods.","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":" * Deals with user inputs and Duke\u0027s storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"     * Checks whether the last character of the user\u0027s input is a space.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the last character of a user\u0027s input is a space.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"    public static boolean lastCharacterSpaceChecker(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"        int lastCharacterIndex \u003d userInput.length() - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"        String lastCharacter \u003d userInput.substring(lastCharacterIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"        if (lastCharacter.equals(\" \")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"     * Checks whether there are consecutive spaces in the user\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether there are consecutive spaces in a user\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"    public static boolean multipleSpacesChecker(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"        for (String word : splitUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"            if (word.equals(\"\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"                return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"     * Checks whether there is a space error in the user\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"     * @throws DukeException If there is a space error in the user\u0027s input.","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"    public static void spaceErrorChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"        boolean lastCharacterIsSpace \u003d lastCharacterSpaceChecker(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"        boolean hasMultipleSpaces \u003d multipleSpacesChecker(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"        if (lastCharacterIsSpace || hasMultipleSpaces) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s list/bye command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s list/bye command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"jerrelllzw"},"content":"    public static void listOrByeFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength \u003e 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s done/delete command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s done/delete command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"jerrelllzw"},"content":"    public static void doneOrDeleteFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength !\u003d 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"jerrelllzw"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"jerrelllzw"},"content":"                Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"jerrelllzw"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"jerrelllzw"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s todo command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s todo command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"jerrelllzw"},"content":"    public static void todoFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength \u003c 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s deadline command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s deadline command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"jerrelllzw"},"content":"    public static void deadlineFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength \u003c 4) {","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"jerrelllzw"},"content":"        } else if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"jerrelllzw"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"jerrelllzw"},"content":"            int spaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"jerrelllzw"},"content":"            int slashIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"jerrelllzw"},"content":"            if (spaceIndex + 1 \u003d\u003d slashIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"jerrelllzw"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s event command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s event command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"jerrelllzw"},"content":"    public static void eventFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength \u003c 4) {","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"jerrelllzw"},"content":"        } else if (!userInput.contains(\"/at\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"jerrelllzw"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"jerrelllzw"},"content":"            int spaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"jerrelllzw"},"content":"            int slashIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"jerrelllzw"},"content":"            if (spaceIndex + 1 \u003d\u003d slashIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"jerrelllzw"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"jerrelllzw"},"content":"     * Checks the format of the user\u0027s find command input.","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether the format of the user\u0027s find command input is correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"jerrelllzw"},"content":"    public static void findFormatChecker(String userInput) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"jerrelllzw"},"content":"        int userInputLength \u003d splitUserInput.length;","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"jerrelllzw"},"content":"        if (userInputLength !\u003d 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"jerrelllzw"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"jerrelllzw"},"content":"     * Extracts important information from the user\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"jerrelllzw"},"content":"     * @param userInput User\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"jerrelllzw"},"content":"     * @return List containing the user\u0027s command, task description and task details.","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"jerrelllzw"},"content":"    public static String[] parseUserInput(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"jerrelllzw"},"content":"        String[] parsedUserInput \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"jerrelllzw"},"content":"        String command \u003d splitUserInput[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"jerrelllzw"},"content":"        switch (command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"jerrelllzw"},"content":"        case \"list\":","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"jerrelllzw"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"jerrelllzw"},"content":"                listOrByeFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"jerrelllzw"},"content":"        case \"done\":","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"jerrelllzw"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"jerrelllzw"},"content":"                doneOrDeleteFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"jerrelllzw"},"content":"                int doneSpaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"jerrelllzw"},"content":"                String doneDetail \u003d userInput.substring(doneSpaceIndex + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[1] \u003d doneDetail;","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"jerrelllzw"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"jerrelllzw"},"content":"                todoFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"jerrelllzw"},"content":"                int spaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"jerrelllzw"},"content":"                String detail \u003d userInput.substring(spaceIndex + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[1] \u003d detail;","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"jerrelllzw"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"jerrelllzw"},"content":"                deadlineFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"jerrelllzw"},"content":"                int spaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"jerrelllzw"},"content":"                int slashIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"jerrelllzw"},"content":"                String detail \u003d userInput.substring(spaceIndex + 1, slashIndex - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"jerrelllzw"},"content":"                String deadlineBy \u003d userInput.substring(slashIndex + 4);","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[1] \u003d detail;","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[2] \u003d deadlineBy;","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"jerrelllzw"},"content":"        case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"jerrelllzw"},"content":"                eventFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"jerrelllzw"},"content":"                int spaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"jerrelllzw"},"content":"                int slashIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"jerrelllzw"},"content":"                String detail \u003d userInput.substring(spaceIndex + 1, slashIndex - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"jerrelllzw"},"content":"                String eventAt \u003d userInput.substring(slashIndex + 4);","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[1] \u003d detail;","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[2] \u003d eventAt;","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"jerrelllzw"},"content":"        case \"find\":","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"jerrelllzw"},"content":"            try {","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"jerrelllzw"},"content":"                findFormatChecker(userInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"jerrelllzw"},"content":"                int doneSpaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"jerrelllzw"},"content":"                String keyword \u003d userInput.substring(doneSpaceIndex + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d command;","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[1] \u003d keyword;","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"jerrelllzw"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":243,"author":{"gitId":"jerrelllzw"},"content":"                parsedUserInput[0] \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"jerrelllzw"},"content":"                DukeException.printFormatError();","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":246,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"jerrelllzw"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printCommandError();","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"jerrelllzw"},"content":"            parsedUserInput[0] \u003d \"invalid\";","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"jerrelllzw"},"content":"        return parsedUserInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"jerrelllzw"},"content":"     * Converts a line in the storage file to parsedUserInput\u0027s format.","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"jerrelllzw"},"content":"     * @param fileLine Line in the storage file to be parsed.","lastModifiedDate":"2021-09-22"},{"lineNumber":259,"author":{"gitId":"jerrelllzw"},"content":"     * @return List containing the user\u0027s command, task description and task details.","lastModifiedDate":"2021-09-22"},{"lineNumber":260,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"jerrelllzw"},"content":"    public static String[] parseFileLine(String fileLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"jerrelllzw"},"content":"        String[] splitFileLine \u003d fileLine.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":263,"author":{"gitId":"jerrelllzw"},"content":"        String[] parsedFileLine \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"jerrelllzw"},"content":"        String fileLineDescriptionAndDetails \u003d fileLine.substring(8);","lastModifiedDate":"2021-09-22"},{"lineNumber":265,"author":{"gitId":"jerrelllzw"},"content":"        int lineIndex \u003d fileLineDescriptionAndDetails.indexOf(\"|\");","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"jerrelllzw"},"content":"        String category \u003d splitFileLine[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"jerrelllzw"},"content":"        switch (category) {","lastModifiedDate":"2021-09-22"},{"lineNumber":268,"author":{"gitId":"jerrelllzw"},"content":"        case \"T\":","lastModifiedDate":"2021-09-22"},{"lineNumber":269,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[0] \u003d \"todo\";","lastModifiedDate":"2021-09-22"},{"lineNumber":270,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[1] \u003d fileLineDescriptionAndDetails;","lastModifiedDate":"2021-09-22"},{"lineNumber":271,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":272,"author":{"gitId":"jerrelllzw"},"content":"        case \"D\":","lastModifiedDate":"2021-09-22"},{"lineNumber":273,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[0] \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":274,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[1] \u003d fileLineDescriptionAndDetails.substring(0, lineIndex - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":275,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[2] \u003d fileLineDescriptionAndDetails.substring(lineIndex + 2);","lastModifiedDate":"2021-09-22"},{"lineNumber":276,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":277,"author":{"gitId":"jerrelllzw"},"content":"        case \"E\":","lastModifiedDate":"2021-09-22"},{"lineNumber":278,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[0] \u003d \"event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":279,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[1] \u003d fileLineDescriptionAndDetails.substring(0, lineIndex - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":280,"author":{"gitId":"jerrelllzw"},"content":"            parsedFileLine[2] \u003d fileLineDescriptionAndDetails.substring(lineIndex + 2);","lastModifiedDate":"2021-09-22"},{"lineNumber":281,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":282,"author":{"gitId":"jerrelllzw"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"jerrelllzw"},"content":"        return parsedFileLine;","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"jerrelllzw":288}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"import task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":" * Contains all storage related methods.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":" * Deals reading, writing and deleting Duke\u0027s storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"    public static final String FILE_PATH \u003d getFilePath();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the file path the user\u0027s working directory.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"     * @return File path in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"    public static String getFilePath() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"        String workingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"        Path rawFilePath \u003d Paths.get(workingDirectory + File.separator + \"duke.txt\");","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"        String filePath \u003d String.valueOf(rawFilePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"        return filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"     * Creates an array list of tasks based on the contents of a storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"     * @throws FileNotFoundException If the file to be read does not exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"    public static void readFile(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"            String fileLine \u003d scanner.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"            String[] parsedFileLine \u003d Parser.parseFileLine(fileLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"            Task newTask \u003d TaskList.createTask(parsedFileLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"            String[] splitFileLine \u003d fileLine.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"            String isDone \u003d splitFileLine[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"            if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"                tasks.get(tasks.size() - 1).setDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"     * Creates a new storage file in the user\u0027s working directory.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"    public static void createNewFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"jerrelllzw"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"jerrelllzw"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"jerrelllzw"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printFileError();","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"jerrelllzw"},"content":"     * Reads a storage file in the user\u0027s working directory.","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"jerrelllzw"},"content":"     * If the file does not exist, creates a new one.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"jerrelllzw"},"content":"     * @return Array list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"jerrelllzw"},"content":"    public static ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"jerrelllzw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"jerrelllzw"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"jerrelllzw"},"content":"            readFile(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"jerrelllzw"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"jerrelllzw"},"content":"            createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"jerrelllzw"},"content":"        return tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"jerrelllzw"},"content":"     * Converts a task into storage file format.","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"jerrelllzw"},"content":"     * @param parsedUserInput Parsed user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"jerrelllzw"},"content":"     * @return Specifics of the task in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"jerrelllzw"},"content":"    public static String convertToFileLine (String[] parsedUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"jerrelllzw"},"content":"        String fileLine \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"jerrelllzw"},"content":"        String fileLineCategory;","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"jerrelllzw"},"content":"        String fileLineDescription \u003d parsedUserInput[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"jerrelllzw"},"content":"        String category \u003d parsedUserInput[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"jerrelllzw"},"content":"        switch (category) {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"jerrelllzw"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"jerrelllzw"},"content":"            fileLineCategory \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"jerrelllzw"},"content":"            fileLine \u003d fileLineCategory + \" | 0 | \" + fileLineDescription;","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"jerrelllzw"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"jerrelllzw"},"content":"            fileLineCategory \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"jerrelllzw"},"content":"            fileLine \u003d fileLineCategory + \" | 0 | \" + fileLineDescription;","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"jerrelllzw"},"content":"            String fileLineDeadlineBy \u003d parsedUserInput[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"jerrelllzw"},"content":"            fileLine \u003d fileLine + \" | \" + fileLineDeadlineBy;","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"jerrelllzw"},"content":"        case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"jerrelllzw"},"content":"            fileLineCategory \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"jerrelllzw"},"content":"            fileLine \u003d fileLineCategory + \" | 0 | \" + fileLineDescription;","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"jerrelllzw"},"content":"            String fileLineEventAt \u003d parsedUserInput[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"jerrelllzw"},"content":"            fileLine \u003d fileLine + \" | \" + fileLineEventAt;","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"jerrelllzw"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"jerrelllzw"},"content":"        return fileLine;","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"jerrelllzw"},"content":"     * Saves a task to the storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"jerrelllzw"},"content":"     * @param parsedUserInput Parsed user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"jerrelllzw"},"content":"    public static void saveTaskInFile(String[] parsedUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"jerrelllzw"},"content":"        String convertedUserInput \u003d convertToFileLine(parsedUserInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"jerrelllzw"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"jerrelllzw"},"content":"            String filePath \u003d Storage.getFilePath();","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"jerrelllzw"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.write(convertedUserInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.write(\"\\r\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printFileError();","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the new storage contents after updating a task\u0027s done status in storage file format.","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be updated.","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"jerrelllzw"},"content":"     * @return Storage contents with the updated task in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"jerrelllzw"},"content":"     * @throws FileNotFoundException If the storage file does not exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"jerrelllzw"},"content":"    public static String getUpdatedDoneFile(int taskNumber) throws FileNotFoundException {","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"jerrelllzw"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"jerrelllzw"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"jerrelllzw"},"content":"        String updatedDoneFile \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"jerrelllzw"},"content":"        int lineNumber \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"jerrelllzw"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"jerrelllzw"},"content":"            if (lineNumber \u003d\u003d taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"jerrelllzw"},"content":"                String oldFileLine \u003d scanner.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"jerrelllzw"},"content":"                String newFileLine \u003d oldFileLine.substring(0, 4) + \"1\" + oldFileLine.substring(5);","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"jerrelllzw"},"content":"                updatedDoneFile \u003d updatedDoneFile + newFileLine + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"jerrelllzw"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"jerrelllzw"},"content":"                updatedDoneFile \u003d updatedDoneFile + scanner.nextLine() + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"jerrelllzw"},"content":"            lineNumber++;","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"jerrelllzw"},"content":"        return updatedDoneFile;","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"jerrelllzw"},"content":"     * Updates a task\u0027s done status in the storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be updated.","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"jerrelllzw"},"content":"    public static void updateDoneTaskInFile(int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"jerrelllzw"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"jerrelllzw"},"content":"            String updatedFile \u003d getUpdatedDoneFile(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"jerrelllzw"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.write(updatedFile);","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printFileError();","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the new storage contents after deleting a task.","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"jerrelllzw"},"content":"     * @return Storage contents without the deleted task.","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"jerrelllzw"},"content":"     * @throws FileNotFoundException If the storage file does not exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"jerrelllzw"},"content":"    public static String getUpdatedDeleteFile(int taskNumber) throws FileNotFoundException {","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"jerrelllzw"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"jerrelllzw"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"jerrelllzw"},"content":"        String updatedDeleteFile \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"jerrelllzw"},"content":"        int lineNumber \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"jerrelllzw"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"jerrelllzw"},"content":"            if (lineNumber \u003d\u003d taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"jerrelllzw"},"content":"                scanner.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"jerrelllzw"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"jerrelllzw"},"content":"                updatedDeleteFile \u003d updatedDeleteFile + scanner.nextLine() + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"jerrelllzw"},"content":"            lineNumber++;","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"jerrelllzw"},"content":"        return updatedDeleteFile;","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"jerrelllzw"},"content":"     * Deletes a task in the storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"jerrelllzw"},"content":"    public static void updateDeleteTaskInFile(int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"jerrelllzw"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"jerrelllzw"},"content":"            String updatedFile \u003d getUpdatedDeleteFile(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"jerrelllzw"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.write(updatedFile);","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"jerrelllzw"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printFileError();","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"jerrelllzw":214}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"import task.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"import task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":" * Contains all task list related methods.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":" * Deals the user\u0027s input commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"     * Prints a task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \" Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"            message \u003d message + \" \" + taskIndex + \".\" + task + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"     * Marks a task from a task list as done based on the task number entered.","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be marked as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"    public static void markAsDone(ArrayList\u003cTask\u003e tasks, int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"            tasks.get(taskNumber).setDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"            String message \u003d \" Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"                    + \"  \" + tasks.get(taskNumber) + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"            Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printIndexError();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"     * Deletes a task from a task list based on the task number entered.","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"     * @param taskNumber task.Task number of the task to be deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"jerrelllzw"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"            Task deletedTask \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"            tasks.remove(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"            String message \u003d \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"                    + \"  \" + deletedTask + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"                    + \" Now you have \" + tasks.size() +\" tasks in the list.\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"jerrelllzw"},"content":"            Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"jerrelllzw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"jerrelllzw"},"content":"            DukeException.printIndexError();","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"jerrelllzw"},"content":"     * Creates a new task based on the user\u0027s input.","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"jerrelllzw"},"content":"     * @param parsedUserInput Parsed user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"jerrelllzw"},"content":"     * @return New task.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"jerrelllzw"},"content":"    public static Task createTask(String[] parsedUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"jerrelllzw"},"content":"        String category \u003d parsedUserInput[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"jerrelllzw"},"content":"        String description \u003d parsedUserInput[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"jerrelllzw"},"content":"        String details \u003d parsedUserInput[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"jerrelllzw"},"content":"        Task newTask \u003d new Task(\"initialize\");","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"jerrelllzw"},"content":"        switch (category) {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"jerrelllzw"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"jerrelllzw"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"jerrelllzw"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"jerrelllzw"},"content":"            newTask \u003d new Deadline(description, details);","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"jerrelllzw"},"content":"        case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"jerrelllzw"},"content":"            newTask \u003d new Event(description, details);","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"jerrelllzw"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"jerrelllzw"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"jerrelllzw"},"content":"        return newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"jerrelllzw"},"content":"     * Adds a new task to a task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"jerrelllzw"},"content":"     * @param newTask task.Task to be added to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"jerrelllzw"},"content":"    public static void addTask(ArrayList\u003cTask\u003e tasks, Task newTask) {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"jerrelllzw"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"jerrelllzw"},"content":"                + \"  \" + newTask + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"jerrelllzw"},"content":"                + \" Now you have \" + tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"jerrelllzw"},"content":"     * Checks whether a keyword is in a task\u0027s string format.","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"jerrelllzw"},"content":"     * @param wordsInTask List of words of a task\u0027s string format.","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"jerrelllzw"},"content":"     * @param keyword Word that is used to check.","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"jerrelllzw"},"content":"     * @return Boolean representing whether a keyword is in a task\u0027s string format.","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"jerrelllzw"},"content":"    public static boolean keywordChecker(String[] wordsInTask, String keyword) {","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"jerrelllzw"},"content":"        for (String word : wordsInTask) {","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"jerrelllzw"},"content":"            if (word.equals(keyword)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"jerrelllzw"},"content":"                return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"jerrelllzw"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"jerrelllzw"},"content":"     * Prints a matching tasks list.","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"jerrelllzw"},"content":"    public static void printMatchingTasksList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \" Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"jerrelllzw"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"jerrelllzw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"jerrelllzw"},"content":"            message \u003d message + \" \" + taskIndex + \".\" + task + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"jerrelllzw"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"jerrelllzw"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"jerrelllzw"},"content":"     * Finds all tasks with descriptions that contain the keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"jerrelllzw"},"content":"     * @param tasks Array list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"jerrelllzw"},"content":"     * @param keyword Word that is used to find matching tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"jerrelllzw"},"content":"    public static void findTask(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"jerrelllzw"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"jerrelllzw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"jerrelllzw"},"content":"            String[] wordsInTask \u003d task.getDescription().split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"jerrelllzw"},"content":"            boolean keywordInTask \u003d keywordChecker(wordsInTask, keyword);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"jerrelllzw"},"content":"            if (keywordInTask) {","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"jerrelllzw"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"jerrelllzw"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"jerrelllzw"},"content":"        printMatchingTasksList(matchingTasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"jerrelllzw":154}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":" * Contains all UI related methods.","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":" * Deals the visuals of Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"    public static final String LINE \u003d \"------------------------------------------------------------\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     * Prints a message to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        System.out.println(LINE + message + LINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"                + LOGO);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \" Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"                + \" What can I do for you?\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"        printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"     * Prints a farewell message to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"    public static void printFarewell() {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"        String message \u003d \" Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"        printMessage(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"jerrelllzw":42}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"package task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" * An extension of the task.Task class.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":" * Contains a description of the task as well as the details the task\u0027s deadline.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"     * Constructs an instance of task.Deadline.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     * @param by task.Deadline of the task.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        this.category \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"        String categoryIcon \u003d this.getCategoryIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"        return categoryIcon + statusIcon + \" \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jerrelllzw":30}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"package task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" * An extension of the task.Task class.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":" * Contains a description of the event as well as the details of when the event takes place.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"    protected String at;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"     * Constructs an instance of task.Event.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     * @param at Details of when the event takes place.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"        this.category \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"        String categoryIcon \u003d this.getCategoryIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"        return categoryIcon + statusIcon + \" \" + description + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jerrelllzw":30}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"package task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" * Represents a user\u0027s task. Contains a description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"    protected String category;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"     * Constructs an instance of task.Task.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"     * @return Status of the task in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"jerrelllzw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"jerrelllzw"},"content":"        return description;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"jerrelllzw"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jerrelllzw"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"jerrelllzw"},"content":"     * @return Status icon of the task in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"jerrelllzw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jerrelllzw"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jerrelllzw"},"content":"            return \"[X]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jerrelllzw"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jerrelllzw"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jerrelllzw"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"jerrelllzw"},"content":"     * Gets the category icon of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"jerrelllzw"},"content":"     * @return Category icon of the task in String format.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"jerrelllzw"},"content":"    public String getCategoryIcon() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"jerrelllzw"},"content":"        return \"[\" + category + \"]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jerrelllzw":57}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerrelllzw"},"content":"package task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jerrelllzw"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"jerrelllzw"},"content":" * An extension of the task.Task class.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jerrelllzw"},"content":" * Contains a description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"jerrelllzw"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"jerrelllzw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jerrelllzw"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"jerrelllzw"},"content":"     * Constructs an instance of task.ToDo.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jerrelllzw"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"jerrelllzw"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"jerrelllzw"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"jerrelllzw"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jerrelllzw"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jerrelllzw"},"content":"        this.category \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jerrelllzw"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jerrelllzw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jerrelllzw"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jerrelllzw"},"content":"        String categoryIcon \u003d this.getCategoryIcon();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jerrelllzw"},"content":"        return categoryIcon + statusIcon + \" \" + description;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jerrelllzw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jerrelllzw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jerrelllzw"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jerrelllzw":26}}]
