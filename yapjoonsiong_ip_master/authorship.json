[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"Duke is a **desktop app for managing your tasks, optimized for use via a Command Line Interface** (CLI). If you can type","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"fast, Duke can get your task management done faster than traditional GUI apps. It is the perfect app for busy people!","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"1. Features","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"   1. Adding a todo: `todo`","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"   2. Adding an event: `event`","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"   3. Adding a deadline: `deadline`","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"   4. List all tasks: `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"   5. Marking a task as done: `done`","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"   6. Deleting a task: `delete`","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"   7. Finding a task with a keyword: `find`","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"2. Command Summary","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"**Command format:**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. (eg. `todo` `TASK_DESCRIPTION`, `TASK_DESCRIPTION` is ","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"the description of the ","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"task supplied by the user.)","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) is not acceptable.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"   e.g. if the command specifies `list 123`, there will be an error.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"**Adding a todo**","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"Adds a todo to your list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"`todo lunch`","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"`todo deliver parcel`","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"**Adding an Event**","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"Adds an event to your list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"format: `event TASK_DESCRIPTION /at TIME_DESCRIPTION`","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"`event family dinner /at sunday`","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"`event concert /at friday night`","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"**Adding a Deadline**","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"Adds a deadline to your list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"format: `deadline TASK_DESCRIPTION /by TIME_DESCRIPTION`","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"`deadline assignment /by sunday night`","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"`deadline complete report /by monday`","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"**Listing Tasks**","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"Shows a list of all tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"Format: `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"**Mark Task as Done**","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"Marks the task with the corresponding number in the list as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"Format: `done TASK_NUMBER`","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"`done 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"**Delete Task**","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"Deletes the task with the corresponding number in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"`delete 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"**Find Task**","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"Finds all tasks containing user input keyword in their descriptions","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"Example input:","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"`find lunch`","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"**Bye**","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"Exits the program.","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"Format: `bye`","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"## Command Summary","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"------ | ----------------","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"todo | `todo TASK_DESCRIPTION` eg. `todo deliver parcel`","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"event | `event TASK_DESCRIPTION /at TIME_DESCRIPTION` eg. `event concert /at friday night`","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"deadline | `deadline TASK_DESCRIPTION /by TIME_DESCRIPTION` eg. `deadline assignment /by sunday night`","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"list | `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"done | `done TASK_NUMBER` eg. `done 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"delete | `delete TASK_NUMBER` eg. `delete 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"find | `find KEYWORD` eg. `find lunch`","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"bye | `bye`","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"yapjoonsiong":112,"-":23}},{"path":"src/main/java/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"public class AddTask extends Command{","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    private Task task;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for command for user to add a new task. Task can be either a normal task, an Event or a Deadline","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks list of existing tasks for task to be added to","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     * @param task Task to be added. Either be a normal task, an Event or a Deadline","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with the user","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"     * @param storage updates \"data/duke.txt\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    public AddTask(Tasks tasks, Task task, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        ui.add(task, tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":26}},{"path":"src/main/java/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class Bye extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor when user wants to close the application.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"    public Bye(Ui ui) {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        ui.exit();","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"        return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":15}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":" * Represents a command made by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"        return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"     * Represents a Deadline added by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"     * @param description Description of task with a deadline.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"     * @param by Description of the deadline of the task","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        return this.by;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    public String getType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        return \"D\";","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        return \"[D]\" + super.getStatus() + super.getDescription() + \" (by:\" + by + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"yapjoonsiong":30}},{"path":"src/main/java/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"public class Delete extends Command{","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"    private Task task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for command for user to delete a task from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks list of all existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with user.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"     * @param storage updates \"data/duke.txt\" file","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    public Delete(Tasks tasks, int index, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.task \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        ui.delete(task, tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        tasks.delete(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":28}},{"path":"src/main/java/Done.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"public class Done extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"    private Task task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for command when the user marks a task as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks List of all existing tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"     * @param index Index of task to be marked done","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with user.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"     * @param storage updates \"data/duke.txt\" file","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    public Done(Tasks tasks, int index, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        tasks.get(index).markComplete();","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        this.task \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        ui.done(task, tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        task.markComplete();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Random;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.File;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":" * Duke is a friendly note-taking bot.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":" * Duke keeps track of all your tasks in a reader-friendly format,","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":" * even after you close the application","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":" * @author  Yap Joon Siong","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":" * @version 1.0","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":" * Cool @since   2021-09-28","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"    private static File save;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks \u003d new Tasks();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"    private Duke(String filePath) throws IOException {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        File directory \u003d new File (\"data\");","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            directory.mkdir();","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"    private void run() throws IOException {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        ui.greet();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"                Command c \u003d Parser.parse(fullCommand, tasks, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"                c.execute();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yapjoonsiong":50,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"        super(message);","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"     * Represents an Event made by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"     * @param description Description of Event.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"     * @param at Description of when the event will take place.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    public Event (String description, String at) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    public void setAt(String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        return this.at;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    public String getType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"        return \"E\";","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        return \"[E]\" + super.getStatus() + super.getDescription() + \" (at:\" + at + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"yapjoonsiong":27}},{"path":"src/main/java/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class Find extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"    private String keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for command when the user wants to search for a tasks containing a certain keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks List of all existing tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with user.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     * @param keyword keyword to be searched in all existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    public Find(Tasks tasks, Ui ui, String keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        ui.printMatching(tasks, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":20}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"public class List extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"    private Tasks tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for command to print the list of tasks to the terminal","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks list of all existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Handles interaction with the user","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    public List(Tasks tasks, Ui ui) {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    public void execute() {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        ui.printList(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":19}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":" * Processes all user inputs.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"     * Returns a Command depending on the input from the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"     * DukeException is thrown if it is unable to understand the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input Input from user","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks List of Existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"     * @param ui Ui object to handle responses to the user","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"     * @param storage object used to save existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"     * @return Executable command.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"     * @throws DukeException throws an exception when there is an error with the user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    public static Command parse(String input, Tasks tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        if (input.contentEquals(\"bye\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            return new Bye(ui);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"            String taskDescription \u003d input.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"            if (taskDescription.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            Task task \u003d new Task(taskDescription);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"            return new AddTask(tasks, task, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"            input \u003d input.replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"            String[] parsedInput \u003d input.split(\"/at\");","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            if (parsedInput.length \u003c 2 || parsedInput[1].trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"            Task task \u003d new Event(parsedInput[0], parsedInput[1].trim());","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"            return new AddTask(tasks, task, ui,storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            input \u003d input.replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            String[] parsedInput \u003d input.split(\"/by\");","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"            if (parsedInput.length \u003c 2 || parsedInput[1].trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"            Task task \u003d new Deadline(parsedInput[0], parsedInput[1].trim());","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"            return new AddTask(tasks, task, ui,storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"            String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"            if (parsedInput.length \u003c 2) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Sorry done ____ cannot  be empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            if (Integer.parseInt(parsedInput[1]) \u003e tasks.size() || Integer.parseInt(parsedInput[1]) \u003c 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"That is not in the list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"            int index \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            return new Done(tasks, index, ui,storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"            if (parsedInput.length \u003c 2) {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Sorry delete ____ cannot  be empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"            if (Integer.parseInt(parsedInput[1]) \u003e tasks.size() || Integer.parseInt(parsedInput[1]) \u003c 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"That is not in the list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"            int index \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"            return new Delete(tasks, index, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.startsWith(\"find \")){","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"            String keyword \u003d input.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"                throw new DukeException(\"Sorry find ____ cannot  be empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"            return new Find(tasks, ui, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (input.contentEquals(\"list\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"            return new List(tasks, ui);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        } else{","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"            throw new DukeException(\"Sorry I do not understand\");","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":81}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":" * Loads and writes all data into a text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    private static File save;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    private static Tasks loadFile;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    private static String path;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    public Storage(String filePath){","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        path \u003d filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"     * Returns a list of saved tasks from \"data/duke.txt\"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"     * Creates a file according to the file path if file is not found.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"     * Throws IOException if an error occurs.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    public static Tasks load() {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            save \u003d new File (path);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            if (!save.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"                save.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"            loadFile \u003d new Tasks();","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"                String[] parts \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"                String type \u003d parts[0].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"                String completion \u003d parts[1].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"                switch (type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"                case \"T\":","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"                    loadFile.add(new Task(description));","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"                    break;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"                case \"D\":","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"                    String by \u003d parts[3].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"                    loadFile.add(new Deadline(description, by));","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"                    break;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"                case \"E\":","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"                    String at \u003d parts[3].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"                    loadFile.add(new Event(description, at));","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"                    break;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"                if (completion.equals(\"[X]\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"                    loadFile.get(i - 1).markComplete();","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"                i++;","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        return loadFile;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"     * Writes the contents of the list of Tasks in Duke to a .txt file \"duke.txt\"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"     * The data is stored as a formatted text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks list of existing tasks in Duke to be stored.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"    public void writeToFile(Tasks tasks) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"            FileWriter fw \u003d new FileWriter(save);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"                fw.write(tasks.get(i).getType() + \" | \" + tasks.get(i).getStatus() + \" | \" + tasks.get(i).getDescription() + \" | \" + tasks.get(i).getTime() + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"            fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":82}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":" * Represents a task made by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"    protected String description;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"    protected boolean complete;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for Task","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        this.complete \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.complete \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    public String getStatus() {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"        if (complete) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"            return \"[X]\";","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"        return description;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"    public String getType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        return \"T\";","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        return \"[T]\" + getStatus() + description;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        return \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"yapjoonsiong":40}},{"path":"src/main/java/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":" * Represents the list of Tasks made by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"public class Tasks {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"     * Constructor for the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    public Tasks() {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"     * @param task The task to be added","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"     * Returns the number of tasks in the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    public int size() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"     * Returns the task at the corresponding index in the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"     * @param index The index of the task to be returned","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"     * Prints all existing tasks in the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"    public void print() {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"    public void delete(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"        tasks.remove(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"     * Returns the number of incomplete tasks in the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"    public int tasksIncomplete() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        int incompleteTasks \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"            if (!tasks.get(i).complete) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"                incompleteTasks ++;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        return incompleteTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"yapjoonsiong":64}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Random;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":" * Prints all program responses to the terminal.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    private static String logo \u003d \"                       ./((((((((((((((/.                    \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"            \"                  /(((/.  .,*////*,.   *((((                \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"            \"               (#(*  (.       ,((*.     #. ,#(#             \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"            \"            .((/ .*    (*     ,   ./((((,  ,, *((,          \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"            \"           ((/ /   .(        (##        (((,  ( *((.        \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"            \"         .(( ..  .,         #####         .((,  , #(*       \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"            \"        .(( ,   #          ####( ,,         /((  / ((,      \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"            \"        ((  ,  (         ,####* /##(         *(( .. ((      \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"            \"        (( /  ..        (####,  #####         #(. # ((.     \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"            \"        /              %####     #####        #(.    #      \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"            \"        ,  *   ,                  /####,      ((  (  /      \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"            \"         (  *  /    ,###################(    ((* ,  ,       \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"            \"         .   ,  *  /######################  ((* ..  ,       \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            \"           ,  #   (                       (((  (   .        \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"            \"            (   (   ,/                 (((/  *.  #          \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"            \"              (   *,    ,(*.  ,/((#((((,  ./   #            \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"            \"                 #    (*              ,(    (.              \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"            \"                    ,#                  (*                  \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            \"                           .,.   ,.                         \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            \"                                                            \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"            \"                                                            \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"            \"      ,/,     ,//      //////*    //      */. */.    */////*\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"            \"      /@*    (@#@\u0026            @@  .@\u0026    %@*  #@*  \u0026@       \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"            \"      /@*   #@* .@@    @@@@@@@@*   .@@  @@,   #@*  .@@@@@@@.\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            \"      @@.  %@,    @@   @@   #@(      @@\u0026@.    #@*         @\u0026\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"            \" */**.    */.      /*  **    ./*      */      ,*.  ,******  \";","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"    private static void showLine() {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"    private static String addTaskSalutation(String item) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        String out \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        switch(rand.nextInt(3)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"            case 0:","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"                out \u003d \"Right away sir. I have added \" + item + \" to your list of tasks.\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"            case 1:","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"                out \u003d \"Understood sir. \" + item + \" has been added to your list of tasks.\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            case 2:","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"                out \u003d \"Sir, I can confirm that \" + item + \" has been added to your list of tasks.\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"            default:","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"        return out;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"     * Reads and returns user input","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"     * @return user input","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"    public static String readCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        Scanner sc\u003d new Scanner(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"    public static void greet() {","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"\\n\" + logo);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"\\tHello Sir,\\n\" + \"\\tWhat can I do for you?\\n\"); // greet","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"     * Prints all existing tasks in Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks List of Existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"    public void printList(Tasks tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"List so far: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"        tasks.print();","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"     * Prints tasks that have descriptions containing the input keyword","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"     * @param tasks List of Existing tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"     * @param keyword User input keyword to search for corresponding tasks containing the keyword","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"    public void printMatching(Tasks tasks, String keyword){","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        int num \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"                System.out.println(num + \". \" + tasks.get(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"                num++;","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"    public static void exit() {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"Goodbye Sir. I shall be at your service again whenever you require.\\n\"); //exit message","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"    public void delete(Task task, Tasks tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"        if (task.complete) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(\"\\tSir, as per your request, I have deleted the task:\\n\\t\" + task + \"\\n\\tNow you have \" + (tasks.size() - 1) + \" tasks in the list, \" + tasks.tasksIncomplete() + \" incomplete tasks.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(\"\\tSir, as per your request, I have deleted the task:\\n\\t\" + task + \"\\n\\tNow you have \" + (tasks.size() - 1) + \" tasks in the list, \" + (tasks.tasksIncomplete() - 1)+ \" incomplete tasks.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"    public void done(Task task, Tasks tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"\\tAs you wish sir. I have marked this task as done:\\n\\t\" + task + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list, \" + tasks.tasksIncomplete() + \" incomplete tasks.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"    public void add(Task task, Tasks tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"\\t\" + addTaskSalutation(task.getDescription()) + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list, \" + tasks.tasksIncomplete() + \" incomplete tasks.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yapjoonsiong":129}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"deadline task1 /by day","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"event task2 /at day","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"yapjoonsiong":9}}]
