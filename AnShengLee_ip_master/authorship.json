[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"  1. Click `Open`.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"  1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"  1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"   ```","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"AnShengLee":9,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"# Individual Project (iP) User Guide","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"This iP, also known as DUKE, is a desktop application that helps users to keep track of 3 types of tasks via a","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"Command Line Interface (CLI). The 3 types of tasks are:","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"- ToDos","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"- Deadlines","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"- Events","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"## Table of Contents","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"- [Setting Up](#setting-up)","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    - [Adding a ToDo Task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    - [Adding a Deadline Task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    - [Adding an Event Task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    - [Listing All Tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"    - [Setting a Task as Done: `done`](#setting-a-task-as-done-done)","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    - [Deleting a Task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    - [Finding a Task: `find`](#finding-a-task-find)","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    - [Ending the Program: `bye`](#ending-the-program-bye)","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    - [Saving Tasks to Hard Drive (Automatic)](#saving-tasks-to-hard-drive-automatic)","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    - [Change of Date Format (Automatic)](#change-of-date-format-automatic)","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"## Setting Up","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"1. Ensure you have Java `11` installed in your computer.","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/AnShengLee/ip/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"3. Copy the file to the folder you want to use as the home folder for your DUKE.","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"4. Run the application by opening a command line in that folder and entering the following command: `java -jar ip.jar`.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"5. Type the available commands in the command line and press Enter to execute it.","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"6. Refer to [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"### Note","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"- Words in `UPPER_CASE` are parameters to be given by the user.","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"### Adding a ToDo Task: `todo`","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"Adds a ToDo task for DUKE to keep track.","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"- If an empty or blank task description is given, the ToDo task will not be","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"  added and a warning will be given.","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"Example: `todo read book`","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"### Adding a Deadline Task: `deadline`","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"Adds a Deadline task for DUKE to keep track.","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE`","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"- If any parameters given is empty or blank, the Deadline task will not be","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"  added and a warning will be given.","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"Example: `deadline read book /by 21 feb`","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"### Adding an Event Task: `event`","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"Adds an Event task for DUKE to keep track.","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"Format: `event TASK_DESCRIPTION /at EVENT_DETAILS`","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"- If any parameters given is empty or blank, the Event task will not be","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"  added and a warning will be given.","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"Example: `event read book /at 21 feb bishan library`","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"### Listing All Tasks: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"Shows a list of all tasks DUKE is currently tracking.","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"Format: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"- All the tasks shown will be indexed starting from 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"- If there are no tasks, DUKE will let the user know.","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"How the list will look like:","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"![list example](ip_list_example.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"Each task has their index, done status and the task itself. A task that is set as done will have an `X` just like","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"task 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"### Setting a Task as Done: `done`","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"Sets a task that DUKE is tracking as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"Format: `done INDEX_OF_TASK`","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"- Sets task at specified `INDEX_OF_TASK` as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"- The index refers to the index number shown in the displayed tasks list.","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"- The index must be a **positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"- If the index of task given is out of range, nothing will happen and a warning will be given.","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"Example: `list` followed by `done 2` sets the second task as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"Deletes a task. DUKE will then stop tracking that particular task.","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"Format: `delete INDEX_OF_TASK`","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"- Deletes the task at specified `INDEX_OF_TASK`.","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"- The index refers to the index number shown in the displayed tasks list.","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"- The index must be a **positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"- If the index of task given is out of range, nothing will happen and a warning will be given.","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"Example: `list` followed by `delete 3` deletes the third task and DUKE will not track it anymore.","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"### Finding a Task: `find`","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"Finds tasks with `TASK_DESCRIPTION` that contain a keyword given by user.","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"- The search is case-insensitive. e.g, `ball` will match `Ball`.","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"- Only accepts 1 keyword else a warning will be thrown.","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"- Only `TASK_DESCRIPTION` field of tasks is searched.","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"- Non-full words can be matched e.g., `ball` will match `football`.","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"- DUKE will notify user if there are no related tasks.","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"Example: `find ball` returns `pump ball`, `football`, `basketball` and `Ball race`","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"![find example](find_example.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"### Ending the Program: `bye`","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"Ends the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"Format: `bye`","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"### Saving Tasks to Hard Drive (Automatic)","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"When the program starts, it looks for a data file called `DukeData.txt` and loads all the data there into the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"If there is no `DukeData.txt` file, one will be created in the same folder as `ip.jar`.","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"After every command input by user, all the tasks in the program will be saved into `DukeData.txt` to ensure data","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"integrity when DUKE crashes. If there are errors, user will be notified. No notification will be shown if there","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"are no errors.","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"Right before the program ends, another final save will be done. User will be notified if it is","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"a success or a failure.","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"### Change of Date Format (Automatic)","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"Dates given in the form of `yyyy-mm-dd` (e.g., 2121-11-12) will be printed in the form of `MMM dd yyyy`","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"(e.g., Nov 12 2121). This is done to increase readability for the user.","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"This feature is only available for dates keyed in as:","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"- `DESCRIPTION` for Deadline tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"- `EVENT_DETAILS` for Event tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"Here is how it will look like:","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"![date example](date_example.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"## Command Summary","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"| Action | Format, Examples |","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"| Add ToDo | `todo TASK_DESCRIPTION` \u003cbr /\u003e e.g., `todo read book` |","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"| Add Deadline | `deadline TASK_DESCRIPTION /by DEADLINE` \u003cbr /\u003e e.g., `deadline read book /by 21 feb` |","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"| Add Event | `event TASK_DESCRIPTION /at EVENT_DETAILS` \u003cbr /\u003e e.g., `event read book /at 21 feb bishan library` |","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"| List | `list` |","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"| Set Done | `done INDEX_OF_TASK` \u003cbr /\u003e e.g., `done 2` |","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"| Delete | `delete INDEX_OF_TASK` \u003cbr /\u003e e.g., `delete 2` |","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"| Find | `find KEYWORD` \u003cbr /\u003e e.g., `find ball` |","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"| End | `bye` |","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"AnShengLee":140,"-":21}},{"path":"src/main/java/duke/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeBlankDescriptionsException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeInvalidTaskIndexException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeMissingDataException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":" * Loads data in DukeData.txt into the program on start up.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":" * If DukeData.txt cannot be found, one will be created.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":" * It will update/save into DukeData.txt after every user command. The save will be silent.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":" * Only error message will be sent.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":" * A final save will be done when the program is terminating.","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"public class DataManager {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    private static final String FILENAME \u003d \"./DukeData.txt\";","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"    private static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"    private static final String NEWLINE \u003d \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"     * Adds all entries in DukeData.txt into TaskManager.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"    public static void load() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"        boolean hasCorruptedLines \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"            FileInputStream fis \u003d new FileInputStream(FILENAME);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"            Scanner sc \u003d new Scanner(fis);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"                data \u003d Parser.processFileData(data);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"                String[] dataParts;","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"                try {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"                    dataParts \u003d Parser.splitToDataParts(data);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"                    addTaskEntry(dataParts);","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"                } catch (DukeMissingDataException | ArrayIndexOutOfBoundsException | DukeBlankDescriptionsException","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"                        | DukeInvalidTaskIndexException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"                    hasCorruptedLines \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"            sc.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"            if (hasCorruptedLines) {","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"                UserInterface.showFileCorrupted();","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"            } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"                UserInterface.showLoadSuccess();","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"            UserInterface.showMissingDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Strings to be passed into TaskManager functions.","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeBlankDescriptionsException If dataParts[DESCRIPTION_INDEX] is blank.","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeInvalidTaskIndexException  If wrong Task index is passed into TaskManager.setDone(int taskIndex).","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"    private static void addTaskEntry(String[] dataParts) throws DukeBlankDescriptionsException","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"            , DukeInvalidTaskIndexException {","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"        if (Parser.isTodoEntry(dataParts)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"            TaskManager.addTask(Command.ADD_TO_DO, dataParts[DESCRIPTION_INDEX]);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"            if (Parser.isDoneEntry(dataParts)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"                TaskManager.setDone(TaskManager.getNumOfTasks());","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isDeadlineEntry(dataParts)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"            Parser.processDeadlineDescription(dataParts);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"            TaskManager.addTask(Command.ADD_DEADLINE, dataParts[DESCRIPTION_INDEX]);","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"            if (Parser.isDoneEntry(dataParts)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"                TaskManager.setDone(TaskManager.getNumOfTasks());","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"            Parser.processEventDescription(dataParts);","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"            TaskManager.addTask(Command.ADD_EVENT, dataParts[DESCRIPTION_INDEX]);","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"            if (Parser.isDoneEntry(dataParts)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"                TaskManager.setDone(TaskManager.getNumOfTasks());","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"     * Transfers all current Tasks in TaskManager (in their toString() format) into DukeData.txt.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"     * Will notify user whether the save was successful or not.","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"    public static void save() {","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"        FileWriter writer;","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"            writer \u003d new FileWriter(FILENAME);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"            BufferedWriter buffer \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"            Iterator\u003cTask\u003e i \u003d TaskManager.createIterator();","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"            while (i.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"                buffer.write(String.valueOf(i.next()));","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"                buffer.write(NEWLINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"            buffer.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"            UserInterface.showSaveSuccess();","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"            UserInterface.showSaveError();","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"     * Transfers all current Tasks in TaskManager (in their toString() format) into DukeData.txt.","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"     * Successful saves are silent.","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"     * User will be notified if save was not successful.","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"    public static void saveWithoutSuccessMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"        FileWriter writer;","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"            writer \u003d new FileWriter(FILENAME);","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"            BufferedWriter buffer \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"            Iterator\u003cTask\u003e i \u003d TaskManager.createIterator();","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"            while (i.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"                buffer.write(String.valueOf(i.next()));","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"                buffer.write(NEWLINE);","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"            buffer.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"            UserInterface.showSaveErrorWithLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"AnShengLee":130}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":" * Contains the entry point of the program.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":" * Controls overall flow of program.","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"        UserInterface.showGreet();","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"        DataManager.load();","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"            Command userCommand \u003d UserInterface.interpretUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"            UserInterface.executeCommand(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"            DataManager.saveWithoutSuccessMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"        DataManager.save();","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AnShengLee":21,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeMissingDataException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":" * Deals with String processing, usually input from users and DukeData.txt.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"public class Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    private static final String DELETE_KEYWORD \u003d \"delete\";","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    private static final String DONE_KEYWORD \u003d \"done\";","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"    private static final String EVENT_KEYWORD \u003d \"event\";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    private static final String DEADLINE_KEYWORD \u003d \"deadline\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    private static final String TO_DO_KEYWORD \u003d \"todo\";","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    private static final String LIST_KEYWORD \u003d \"list\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    private static final String BYE_KEYWORD \u003d \"bye\";","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    private static final int TOTAL_DATA_PARTS \u003d 3;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    private static final int DONE_INDEX \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    private static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    private static final String FIND_KEYWORD \u003d \"find\";","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted a delete command.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted a delete command.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isDeleteCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        return DELETE_KEYWORD.equals(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted a set done command.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted a set done command.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isSetDoneCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"        return DONE_KEYWORD.equals(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted an add Event command.","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted an add Event command.","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isAddEventCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"        return EVENT_KEYWORD.equals(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted an add Deadline command.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted an add Deadline command.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isAddDeadlineCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"        return DEADLINE_KEYWORD.equals(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted an add ToDo command.","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted an add ToDo command.","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isAddToDoCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"        return TO_DO_KEYWORD.equals(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted a list command.","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted a list command.","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isListCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"        return userInput.replaceAll(\" \", \"\").equals(LIST_KEYWORD);","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted an exit command.","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted an exit command.","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isExitCommand(String userInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"        return userInput.replaceAll(\" \", \"\").equals(BYE_KEYWORD);","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"     * If user inputted a find command.","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput The input given by user.","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns true if user inputted a find command.","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isFindCommand(String userInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"        return userInput.replaceAll(\" \", \"\").equals(FIND_KEYWORD);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"     * Returns a processed String that can be easily split into parts later.","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"     * @param data String to be processed.","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"     * @return A processed String.","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"    public static String processFileData(String data) {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"        data \u003d data.replace(\u0027]\u0027, \u0027,\u0027);","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"        data \u003d data.replace(\u0027[\u0027, \u0027 \u0027);","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"        return data;","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"     * Returns an array of Strings each representing a characteristic of the Task class.","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"     * If String given cannot be split into 3 parts, String is considered corrupted. Exception will be thrown.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"     * @param data String to be split.","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"     * @return Split data.","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeMissingDataException If data cannot be split into 3 parts.","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"    public static String[] splitToDataParts(String data) throws DukeMissingDataException {","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"        String[] dataParts \u003d data.split(\",\");","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"        if (dataParts.length \u003c TOTAL_DATA_PARTS) {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeMissingDataException();","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"        for (int i \u003d 0; i \u003c TOTAL_DATA_PARTS; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"            dataParts[i] \u003d dataParts[i].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"        return dataParts;","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"     * If entry is a ToDo entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"     * Done by checking the TASK_TYPE_INDEX of dataParts.","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Data obtained from DukeData.txt that is split into key parts.","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"     * @return True if entry is a ToDo entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isTodoEntry(String[] dataParts) {","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"        return dataParts[TASK_TYPE_INDEX].equals(\"T\");","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"     * If entry is a Deadline entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"     * Done by checking the TASK_TYPE_INDEX of dataParts.","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Data obtained from DukeData.txt that is split into key parts.","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"     * @return True if entry is a Deadline entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isDeadlineEntry(String[] dataParts) {","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"        return dataParts[TASK_TYPE_INDEX].equals(\"D\");","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"     * If entry is an Event entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"     * Done by checking the TASK_TYPE_INDEX of dataParts.","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Data obtained from DukeData.txt that is split into key parts.","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"     * @return True if entry is an Event entry.","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isDoneEntry(String[] dataParts) {","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"        return dataParts[DONE_INDEX].equals(\"X\");","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"     * Changes Deadline description field in dataParts.","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Contains Strings that needs to be processed.","lastModifiedDate":"2021-09-18"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"    public static void processDeadlineDescription(String[] dataParts) {","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"        dataParts[DESCRIPTION_INDEX] \u003d dataParts[DESCRIPTION_INDEX].replace(\")\", \"\");","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"        dataParts[DESCRIPTION_INDEX] \u003d dataParts[DESCRIPTION_INDEX].replace(\"(by:\", \"/by\");","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"     * Changes Event description field in dataParts.","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"AnShengLee"},"content":"     * This function is mainly used by DataManager to process each data entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"AnShengLee"},"content":"     * @param dataParts Contains Strings that needs to be processed.","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"AnShengLee"},"content":"    public static void processEventDescription(String[] dataParts) {","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"AnShengLee"},"content":"        dataParts[DESCRIPTION_INDEX] \u003d dataParts[DESCRIPTION_INDEX].replace(\")\", \"\");","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"AnShengLee"},"content":"        dataParts[DESCRIPTION_INDEX] \u003d dataParts[DESCRIPTION_INDEX].replace(\"(at:\", \"/at\");","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"AnShengLee"},"content":"     * Returns task index given by user in int format so can use methods that take in int.","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"AnShengLee"},"content":"     * @param word Index given by user in String format.","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"AnShengLee"},"content":"     * @return Task index given by user in int format.","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"AnShengLee"},"content":"    public static int getTaskIndex(String word) {","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"AnShengLee"},"content":"        return Integer.parseInt(word.replaceAll(\" \", \"\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"AnShengLee"},"content":"     * Returns an array of Strings where first String is user command.","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"AnShengLee"},"content":"     * So that methods that take in commands only can be used.","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"AnShengLee"},"content":"     * @param line Full input given by user.","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"AnShengLee"},"content":"     * @return Returns an array of Strings where first String is user command.","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"AnShengLee"},"content":"    public static String[] splitCommandAndRemainder(String line) {","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"AnShengLee"},"content":"        return line.split(\" \", 2);","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"AnShengLee"},"content":"     * Splits a sentence into individual words.","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"AnShengLee"},"content":"     * @param sentence The sentence that will be split into individual words.","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"AnShengLee"},"content":"     * @return An array of Strings each String is a word in the sentence.","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"AnShengLee"},"content":"    public static String[] splitIntoWords(String sentence) {","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"AnShengLee"},"content":"        return sentence.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":235,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":236,"author":{"gitId":"AnShengLee"},"content":"     * Splits the full description given by user further into to description field and the by/at field.","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"     * Usually done on full description of Deadlines and Events.","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":239,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of Deadline or Event.","lastModifiedDate":"2021-09-21"},{"lineNumber":240,"author":{"gitId":"AnShengLee"},"content":"     * @param splitBy     The String to split at.","lastModifiedDate":"2021-09-21"},{"lineNumber":241,"author":{"gitId":"AnShengLee"},"content":"     * @return An array of String of size 2. First String is the description. Second is the by/at field.","lastModifiedDate":"2021-09-21"},{"lineNumber":242,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":243,"author":{"gitId":"AnShengLee"},"content":"    public static String[] splitDescription(String description, String splitBy) {","lastModifiedDate":"2021-09-21"},{"lineNumber":244,"author":{"gitId":"AnShengLee"},"content":"        return description.split(splitBy, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":245,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":246,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"AnShengLee"},"content":"     * Returns true.","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"AnShengLee"},"content":"     * If the given String has only 1 word.","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"AnShengLee"},"content":"     * ","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"AnShengLee"},"content":"     * @param string The String that we are checking.","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"AnShengLee"},"content":"     * @return True if the given String only has 1 word.","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"AnShengLee"},"content":"    public static boolean isOneWord(String string) {","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"AnShengLee"},"content":"        String[] words \u003d string.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"AnShengLee"},"content":"        return words.length \u003d\u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"AnShengLee":258}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeBlankDescriptionsException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeInvalidTaskIndexException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":" * Contains all Tasks given by user.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":" * Tasks are stored in an ArrayList.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":" * Contains methods that work on Tasks such as searching and adding.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    private static final int TASK_DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    private static final int BY_OR_AT_INDEX \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    private static int numOfTasks \u003d 0;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"    public static Task getLatestTask() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"        return tasks.get(getIndexForArray(numOfTasks));","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"    public static Task getTask(int num) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"        return tasks.get(getIndexForArray(num));","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"    public static int getNumOfTasks() {","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"        return numOfTasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"     * Sets task as Done.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"     * If taskIndex given is valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"     * @param taskIndex Index of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeInvalidTaskIndexException If wrong index is passed into the function.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"    public static void setDone(int taskIndex) throws DukeInvalidTaskIndexException {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"        if (isCorrectIndex(taskIndex)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"            tasks.get(getIndexForArray(taskIndex)).markDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeInvalidTaskIndexException();","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"     * Returns an iterator that iterates all available Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"    public static Iterator\u003cTask\u003e createIterator() {","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"        return tasks.iterator();","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"     * Prints out all Task, separated by new line into standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(\"List is empty!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Here are your items: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(i + 1 + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"    private static boolean isCorrectIndex(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d numOfTasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"     * Adds a Task into the ArrayList.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"     * @param type        The type of Task we are adding.","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeBlankDescriptionsException If the description is empty.","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"    public static void addTask(Command type, String description) throws DukeBlankDescriptionsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"        switch (type) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"        case ADD_TO_DO:","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"            addToDo(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"            addDeadline(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"        case ADD_EVENT:","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"            addEvent(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"     * Returns the Task that got deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"     * If the Task index given is valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"     * @param taskIndex The index of Task we are deleting.","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"     * @return The deleted Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"     * @throws DukeInvalidTaskIndexException If the index given exceeds the range of current number of Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"    public static Task delete(int taskIndex) throws DukeInvalidTaskIndexException {","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"        if (isCorrectIndex(taskIndex)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"            Task deleting \u003d tasks.get(getIndexForArray(taskIndex));","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"            tasks.remove(getIndexForArray(taskIndex));","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"            numOfTasks--;","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"            return deleting;","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeInvalidTaskIndexException();","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"    private static void addToDo(String description) throws DukeBlankDescriptionsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"        if (!description.isBlank()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"            tasks.add(new ToDo(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"            numOfTasks++;","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeBlankDescriptionsException();","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"    private static void addEvent(String description) throws DukeBlankDescriptionsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"        String[] descriptions \u003d Parser.splitDescription(description, \" /at \");","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"        if (hasBlankEntry(descriptions)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeBlankDescriptionsException();","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"        tasks.add(new Event(descriptions[TASK_DESCRIPTION_INDEX], descriptions[BY_OR_AT_INDEX]));","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"        numOfTasks++;","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"    private static void addDeadline(String description) throws DukeBlankDescriptionsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"        String[] descriptions \u003d Parser.splitDescription(description, \" /by \");","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"        if (hasBlankEntry(descriptions)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"            throw new DukeBlankDescriptionsException();","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"        tasks.add(new Deadline(descriptions[TASK_DESCRIPTION_INDEX], descriptions[BY_OR_AT_INDEX]));","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"        numOfTasks++;","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"    private static boolean hasBlankEntry(String[] descriptions) {","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"        return descriptions[TASK_DESCRIPTION_INDEX].isBlank() || descriptions[BY_OR_AT_INDEX].isBlank();","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"     * Prints out a list of all Tasks that contains the term given by user.","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"     * @param term The search term given by user to find related Task.","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"    public static void printRelatedTask(String term) {","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"        if (term.isBlank()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(\"No search term given!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"        if (!Parser.isOneWord(term)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(\"Please give only 1 keyword.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"        ArrayList\u003cTask\u003e relatedTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"                .filter((t) -\u003e t.getDescription().toLowerCase().contains(term))","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"        if (relatedTasks.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(\"No related tasks.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"            for (int i \u003d 0; i \u003c relatedTasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"                System.out.println(i + 1 + \".\" + relatedTasks.get(i));","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"    private static int getIndexForArray(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"        return index - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":183}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeBlankDescriptionsException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import duke.exception.DukeInvalidTaskIndexException;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":" * Deals with sending messages and receiving input from users.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    private static final int USER_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    private static final int REMAINING_USER_INPUT_INDEX \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    private static String[] userInputs;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"     * Executes the command give.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"     * If command given is invalid, user will be notified through standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"     * @param userCommand The command given by the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"    public static void executeCommand(Command userCommand) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"        if (userCommand \u003d\u003d Command.EXIT) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"            showExitMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"            Duke.isRunning \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"        } else if (userCommand \u003d\u003d Command.LIST) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"            showList();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"        } else if (userCommand \u003d\u003d Command.INVALID) {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"            showInvalidCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"        ","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"        if (userInputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"            showWrongFormat();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"        ","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"        if (userCommand \u003d\u003d Command.ADD_TO_DO || userCommand \u003d\u003d Command.ADD_DEADLINE","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"                || userCommand \u003d\u003d Command.ADD_EVENT) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"            addTask(userCommand, userInputs[REMAINING_USER_INPUT_INDEX]);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"        } else if (userCommand \u003d\u003d Command.DONE) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"            setDone();","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"        } else if (userCommand \u003d\u003d Command.DELETE) {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"            deleteTask();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"        } else if (userCommand \u003d\u003d Command.FIND) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"            findTask();","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"        } ","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"    private static void findTask() {","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"        TaskManager.printRelatedTask(userInputs[REMAINING_USER_INPUT_INDEX]);","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"    private static void deleteTask() {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"            int taskIndex \u003d Parser.getTaskIndex(userInputs[REMAINING_USER_INPUT_INDEX]);","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"            showItemDeleted(TaskManager.delete(taskIndex));","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"        } catch (DukeInvalidTaskIndexException | NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"            showInvalidIndex();","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"            showWrongFormat();","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"    private static void setDone() {","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"            int taskIndex \u003d Parser.getTaskIndex(userInputs[REMAINING_USER_INPUT_INDEX]);","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"            TaskManager.setDone(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"            showItemSetDone(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"        } catch (DukeInvalidTaskIndexException | NumberFormatException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"            showInvalidIndex();","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"            showWrongFormat();","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"     * Interprets the command given by the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"     * @return The command given by the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"    public static Command interpretUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"        if (Parser.isExitCommand(userInput)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"            return Command.EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isListCommand(userInput)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"            return Command.LIST;","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"        userInputs \u003d Parser.splitCommandAndRemainder(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"        if (Parser.isAddToDoCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"            return Command.ADD_TO_DO;","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isAddDeadlineCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"            return Command.ADD_DEADLINE;","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isAddEventCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"            return Command.ADD_EVENT;","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isSetDoneCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"            return Command.DONE;","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isDeleteCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"            return Command.DELETE;","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"        } else if (Parser.isFindCommand(userInputs[USER_COMMAND_INDEX])) {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"            return Command.FIND;","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"        return Command.INVALID;","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"    private static void addTask(Command addCommand, String line) {","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"            TaskManager.addTask(addCommand, line);","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"            showItemAdded();","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"        } catch (DukeBlankDescriptionsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"            showWrongFormat();","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"    private static void printLine() {","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"     * Prints a greeting to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"    public static void showGreet() {","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Greetings from\\n\" + LOGO);","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"        System.out.print(\"Hello! I\u0027m DUKE\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"    private static void showInvalidCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Invalid command!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"    private static void showItemSetDone(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Got it. I\u0027ve set this task as done:\\n\" + TaskManager.getTask(taskIndex));","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"    private static void showInvalidIndex() {","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Invalid index\");","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"    private static void showList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"        TaskManager.printTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"    private static void showExitMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"    private static void showItemAdded() {","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + TaskManager.getLatestTask());","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Now you have \" + TaskManager.getNumOfTasks() + \" task(s)\");","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"    private static void showWrongFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Wrong format!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Missing some description or wrong command format.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"Loaded saved data successfully!\" to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"    public static void showLoadSuccess() {","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Loaded saved data successfully!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"Data saved Successfully!\" to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"AnShengLee"},"content":"    public static void showSaveSuccess() {","lastModifiedDate":"2021-09-11"},{"lineNumber":201,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Data saved Successfully!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":203,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":205,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"Error saving data. Some or all data maybe lost.\" to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":206,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":207,"author":{"gitId":"AnShengLee"},"content":"    public static void showSaveError() {","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Error saving data. Some or all data maybe lost.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":209,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":210,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"Error saving data. Some or all data maybe lost.\" to standard output.","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"AnShengLee"},"content":"     * A line will be printed to act as a separator.","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"AnShengLee"},"content":"    public static void showSaveErrorWithLine() {","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Error saving data. Some or all data maybe lost.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":221,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"Missing data file. An empty one is created.\" to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":222,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":223,"author":{"gitId":"AnShengLee"},"content":"    public static void showMissingDataFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":224,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Missing data file. An empty one is created.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":225,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":226,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":228,"author":{"gitId":"AnShengLee"},"content":"    private static void showItemDeleted(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":229,"author":{"gitId":"AnShengLee"},"content":"        UserInterface.printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":230,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Noted! I\u0027ve deleted this task:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":231,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":232,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"Now you have \" + TaskManager.getNumOfTasks() + \" tasks\");","lastModifiedDate":"2021-09-11"},{"lineNumber":233,"author":{"gitId":"AnShengLee"},"content":"        UserInterface.printLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":234,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":235,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":236,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"     * Prints \"DukeData.txt has missing data. Some Tasks might be lost.\" to standard output.","lastModifiedDate":"2021-09-14"},{"lineNumber":238,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":239,"author":{"gitId":"AnShengLee"},"content":"    public static void showFileCorrupted() {","lastModifiedDate":"2021-09-14"},{"lineNumber":240,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(\"DukeData.txt has missing data. Some Tasks might be lost.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":241,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":242,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":243,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":243}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * Contains all the possible commands the user can give stored as constants.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"public enum Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"    EXIT,","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"    LIST,","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    ADD_TO_DO,","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    ADD_DEADLINE,","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"    ADD_EVENT,","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    DONE,","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    INVALID,","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    DELETE,","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    FIND","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":16}},{"path":"src/main/java/duke/exception/DukeBlankDescriptionsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * An Exception that will be thrown if description of Task given by user is an empty or blank String.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"public class DukeBlankDescriptionsException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"AnShengLee":7}},{"path":"src/main/java/duke/exception/DukeInvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * An Exception that will be thrown if index given by user for done and delete commands are invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" * For example, the index is out of range.","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"public class DukeInvalidTaskIndexException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"AnShengLee":8}},{"path":"src/main/java/duke/exception/DukeMissingDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * An Exception that will be thrown if a data entry read from DukeData.txt has less than 3 piece of essential info.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" * The 3 essential information are task type, done status and description.","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"public class DukeMissingDataException extends Exception {","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"AnShengLee":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":" * An extension of Task class.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":" * On top of having a description field like Tasks, Deadlines have a date and/or time field.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"     * Constructs a Deadline instance.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of a Deadline given by user.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"     * @param by          Usually a date or time by which the Deadline has to be done.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"        convertDateFormat(by);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"    private void convertDateFormat(String by) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        String[] words \u003d Parser.splitIntoWords(by);","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"                date \u003d LocalDate.parse(words[i]);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"                words[i] \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"                this.by \u003d String.join(\" \", words);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"            } catch (DateTimeException ignored) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"                // Continue to check if other words are legitimate dates.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"                // If all words are not legitimate dates the by variable will be printed exactly the same way the user ","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"                // gave. ","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":" * An extension of Task class.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":" * On top of having a description field like Tasks, Events have a date and/or time field.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":" * It is expected that users will use this if they maybe have a location to specify.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"     * Constructs an Event instance.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of an Event given by user.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"     * @param at          Usually has a date or time by which the Event has to be done.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"        convertDateFormat(at);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"    private void convertDateFormat(String at) {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"        String[] words \u003d Parser.splitIntoWords(at);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"                date \u003d LocalDate.parse(words[i]);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"                words[i] \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"                this.at \u003d String.join(\" \", words);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"            } catch (DateTimeException ignored) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"                // Continue to check is other words are legitimate dates.","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"                // If all words are not legitimate dates the by variable will be printed exactly the same way the user ","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"                // gave.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * A Task that contains a description field.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"    private final String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"     * Constructs a Task instance.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of a Task given by user.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"     * Returns Status of task in String format.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"     * @return Status of task in String format.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"        return getStatus() + \" \" + getDescription();","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"AnShengLee":44}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * An extension of Task class.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" * This class only has a description field.","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":" * A user is expected to use this if their task is not urgent or not specific.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"     * Constructs a ToDo instance.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"     * @param description The description of a ToDo given by user.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"AnShengLee":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"event         ","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"todo lol","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"deadline lol /by lol","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"event     /at qwe","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"event qwe /at qwer","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"done 4","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"delete 4","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"done    4","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"done   3","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"delete 3","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"done 1","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"regaregaeg","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    gergerag","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"deadline fasg /by rthath","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"done 2","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"delete 2","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"AnShengLee":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AnShengLee":2,"-":19}}]
