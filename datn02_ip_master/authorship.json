[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"public class Duke {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"    public Duke() {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    public static String runCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"            msg \u003d Parser.parse(command).run();","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"            return msg;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"    public void run() {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"        String command;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"        String resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"        ui.greet();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"            command \u003d ui.readCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"            resultMsg \u003d runCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"            ui.print(resultMsg);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"            isExit \u003d Parser.isExit(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"datn02":41,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"datn02":7}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    private Task task;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    public AddCommand(Task t) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        this.task \u003d t;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"            TaskList.getInstance().add(this.task);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"            String resultMsg \u003d \"Gotcha. Do this while you\u0027re at it:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\t\" + task.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"                    + \"\\tNow you have \" + (TaskList.getInstance().getTaskListSize())","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"                    + \" tasks in the list.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"            return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Cannot write task to memory!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"public interface Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"    String run() throws DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":6}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"            Task removedTask \u003d TaskList.getInstance().delete(taskNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"            String resultMsg \u003d \"Noted. I have removed this thing:\\n \"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"                    + \"\\t\" + removedTask.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"            return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Cannot delete task from memory!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Task number not exist!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":27}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    private int taskDoneNumber;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    public DoneCommand(int taskDoneNumber) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        this.taskDoneNumber \u003d taskDoneNumber;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"        String resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"            TaskList.getInstance().setDone(taskDoneNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"            resultMsg \u003d \"Good job. You may now enjoy the rest of \"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"                    + \"your suffering:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"                    + \"\\t\" + TaskList.getInstance().getTaskInfo(taskDoneNumber - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"            return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Err I cannot set this as done in memory\");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Task number not exist!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"public class ExitCommand implements Command{","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"        String resultMsg \u003d \"So long!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"        return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":11}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    private String keyword;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"        int i;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        String resultMsg;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"        ArrayList\u003cTask\u003e taskList \u003d TaskList.getInstance().getTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) taskList.stream()","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"                .filter((t) -\u003e t.getTaskDescription().contains(keyword))","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"            resultMsg \u003d \"No matching task and keyword found.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"            return resultMsg;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        resultMsg \u003d \"Here are the matching tasks with you query:\" + \u0027\\n\u0027 + \u0027\\t\u0027;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"        for (i \u003d 0; i \u003c filteredTasks.size() - 1; i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"            resultMsg +\u003d (i + 1) + \".\"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"                    + filteredTasks.get(i).toString() + \u0027\\n\u0027 + \u0027\\t\u0027;","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"        resultMsg \u003d resultMsg + filteredTasks.size() + \".\"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"                + filteredTasks.get(i).toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"        return resultMsg;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"datn02":40}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"        String resultMsg \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"        int i;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        if (TaskList.getInstance().getTaskListSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"            resultMsg \u003d \"Nothing\";","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"            return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        for (i \u003d 0; i \u003c TaskList.getInstance().getTaskListSize() - 1; i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"            resultMsg +\u003d (i + 1) + \".\"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"                    + TaskList.getInstance().getTaskInfo(i) + \u0027\\n\u0027 + \u0027\\t\u0027;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        resultMsg \u003d resultMsg + TaskList.getInstance().getTaskListSize() + \".\"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"                + TaskList.getInstance().getTaskInfo(i);","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"        return resultMsg;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":24}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"public class TaskList {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    private TaskStorage storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    private static TaskList instance \u003d null;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    public TaskList() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"            storage \u003d new TaskStorage();","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"            taskList \u003d storage.readTasksFromMemory();","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Cannot read tasks from memory!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    public static TaskList getInstance() throws DukeException{","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"            instance \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        return instance;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"    public void add(Task task) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"        storage.writeTasksToMemory(taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"    public Task delete(int taskNumber) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"        Task removedTask \u003d taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"        storage.writeTasksToMemory(taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"datn02"},"content":"        return removedTask;","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"datn02"},"content":"    public void setDone(int taskNumber) throws IOException, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"datn02"},"content":"        taskList.get(taskNumber - 1).setDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"datn02"},"content":"        storage.writeTasksToMemory(taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"datn02"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"datn02"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"datn02"},"content":"    public String getTaskInfo(int taskIndex) throws DukeException{","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"datn02"},"content":"            return taskList.get(taskIndex).toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"datn02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Task number not exist!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"datn02"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"datn02"},"content":"        return taskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":64}},{"path":"src/main/java/duke/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"public class TaskStorage {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    static final String DATA_FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"    static final String SPACE_SEPARATOR \u003d \"\\\\|\";","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    static final String DATE_TIME_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"    static private final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"    private File dataFile;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"    public TaskStorage() throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"        File dataDir \u003d new File(dataFile.getParent());","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"datn02"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"datn02"},"content":"    public void writeTasksToMemory(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"datn02"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"datn02"},"content":"        FileWriter fw \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"datn02"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"datn02"},"content":"            data +\u003d taskToString(t) + System.lineSeparator();","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"datn02"},"content":"        fw.write(data);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"datn02"},"content":"        fw.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"datn02"},"content":"    public ArrayList\u003cTask\u003e readTasksFromMemory() {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"datn02"},"content":"        ArrayList\u003cTask\u003e extractedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"datn02"},"content":"            Scanner scanner \u003d new Scanner(this.dataFile);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"datn02"},"content":"            while(scanner.hasNextLine()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"datn02"},"content":"                Task task \u003d readTask(scanner.nextLine());","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"datn02"},"content":"                extractedTasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"datn02"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"datn02"},"content":"            System.out.println(\"\\tI cannot open the file!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"datn02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"datn02"},"content":"            System.out.println(\"\\tWrong task format\");","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"datn02"},"content":"        return extractedTasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"datn02"},"content":"    private String taskToString(Task t) {","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"datn02"},"content":"        if (t instanceof ToDos) {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"datn02"},"content":"            ToDos todoTask \u003d (ToDos) t;","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"datn02"},"content":"            return String.format(\"todo|%s|%b\", todoTask.getTaskDescription(),","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"datn02"},"content":"                    todoTask.isDone());","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"datn02"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"datn02"},"content":"            Event eventTask \u003d (Event) t;","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"datn02"},"content":"            return String.format(\"event|%s|%s|%b\", eventTask.getTaskDescription(),","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"datn02"},"content":"                    eventTask.getDate(), eventTask.isDone());","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"datn02"},"content":"        } else if (t instanceof  Deadline) {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"datn02"},"content":"            Deadline deadlineTask \u003d (Deadline) t;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"datn02"},"content":"            return String.format(\"deadline|%s|%s|%b\", deadlineTask.getTaskDescription(),","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"datn02"},"content":"                    deadlineTask.getDate(), deadlineTask.isDone());","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"datn02"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"datn02"},"content":"            return null;","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"datn02"},"content":"    private Task readTask(String string) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"datn02"},"content":"        String[] detail \u003d string.split(SPACE_SEPARATOR);","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"datn02"},"content":"        switch (detail[0]) {","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"datn02"},"content":"        case \"event\":","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"datn02"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"datn02"},"content":"                LocalDateTime date \u003d LocalDateTime.parse(detail[2], dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"datn02"},"content":"                return new Event(detail[1], date, Boolean.parseBoolean(detail[3]));","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"datn02"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Not the right format. Not sure I can read that.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"datn02"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"datn02"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"datn02"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(detail[2], dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"datn02"},"content":"                return new Deadline(detail[1], deadline, Boolean.parseBoolean(detail[3]));","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"datn02"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Not the right format. Not sure I can read that.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"datn02"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"datn02"},"content":"            return new ToDos(detail[1], Boolean.parseBoolean(detail[2]));","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"datn02"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Not the right format. Not sure I can read that.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"datn02":120}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        return this.deadline.format(dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", isDone ? \"X\" : \" \", this.taskDescription,","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"                this.deadline.format(dateTimeFormat));","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    public Event(String description, LocalDateTime date, boolean isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        return this.date.format(dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", isDone ? \"X\" : \" \", this.taskDescription,","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"                this.date.format(dateTimeFormat));","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":22}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    protected String taskDescription;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    protected final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.taskDescription);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"datn02":35}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        return String.format(\"[T][%s] %s\", isDone ? \"X\" : \" \", this.taskDescription);","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":14}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.util;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"public class Parser {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"    static private final String INVALID_COMMAND \u003d \"Yo check your typing man. I don\u0027t get it.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DEADLINE_SEPARATOR \u003d \"/by\";","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EVENT_SEPARATOR \u003d \"/at\";","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"    static private final String DATE_TIME_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"    static private final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"    static private final String SPACE_SEPARATOR \u003d \" \";","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"    static private final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"datn02"},"content":"    static private final int EVENT_DEADLINE_ARGUMENT_COUNT \u003d 2;","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"datn02"},"content":"    public static boolean isExit(String command) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"datn02"},"content":"        return (command.equals(COMMAND_EXIT));","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"datn02"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"datn02"},"content":"        String[] words \u003d command.split(SPACE_SEPARATOR);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"datn02"},"content":"        switch (words[0]) {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"datn02"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"datn02"},"content":"            return parseListCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"datn02"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"datn02"},"content":"            return parseTodoCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"datn02"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"datn02"},"content":"            return parseEventCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"datn02"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"datn02"},"content":"            return parseDeadlineCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"datn02"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"datn02"},"content":"            return parseDoneCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"datn02"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"datn02"},"content":"            return parseDeleteCommand(command);","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"datn02"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"datn02"},"content":"            return parseExitCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"datn02"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"datn02"},"content":"            return parseFindCommand(command);","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"datn02"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"datn02"},"content":"            throw new DukeException(INVALID_COMMAND);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"datn02"},"content":"    private static Command parseDeleteCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_DELETE.length()).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Nothing to delete!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"datn02"},"content":"            int taskDeleteNumber \u003d Integer.parseInt(detail);","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"datn02"},"content":"            return new DeleteCommand(taskDeleteNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"datn02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Uhm that definitely not a number bro. Pick again.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"datn02"},"content":"    private static Command parseFindCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_FIND.length()).trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Nothing to find!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"datn02"},"content":"        return new FindCommand(detail);","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"datn02"},"content":"    private static Command parseExitCommand() {","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"datn02"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"datn02"},"content":"    private static Command parseListCommand() {","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"datn02"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"datn02"},"content":"    private static Command parseTodoCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_TODO.length()).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Bro please let me know what thing you gonna do\");","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"datn02"},"content":"        return new AddCommand(new ToDos(detail, false));","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"datn02"},"content":"    private static Command parseDeadlineCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_DEADLINE.length()).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"datn02"},"content":"        String[] contentAndDate \u003d detail.split(COMMAND_DEADLINE_SEPARATOR);","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0 || contentAndDate.length \u003c\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\t\\\"deadline [description] /by [deadline]\\\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"datn02"},"content":"            if (contentAndDate.length !\u003d EVENT_DEADLINE_ARGUMENT_COUNT","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"datn02"},"content":"                    || contentAndDate[i].equals(EMPTY_STRING)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"datn02"},"content":"                        + \"\\t\\t\\\"deadline [description] /by [deadline]\\\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"datn02"},"content":"            contentAndDate[i] \u003d contentAndDate[i].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"datn02"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(contentAndDate[1], dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"datn02"},"content":"            return new AddCommand(new Deadline(contentAndDate[0], deadline, false));","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"datn02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Please write the date in this format: \" + DATE_TIME_FORMAT + \u0027\\n\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\te.g: 20 Sep 2021 23:59\");","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"datn02"},"content":"    private static Command parseEventCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_EVENT.length()).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"datn02"},"content":"        String[] contentAndDate \u003d detail.split(COMMAND_EVENT_SEPARATOR);","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0 || contentAndDate.length \u003c\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\t\\\"event [description] /at [date]\\\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"datn02"},"content":"            if (contentAndDate.length !\u003d EVENT_DEADLINE_ARGUMENT_COUNT","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"datn02"},"content":"                    || contentAndDate[i].equals(EMPTY_STRING)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"datn02"},"content":"                        + \"\\t\\t\\\"event [description] /at [date]\\\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"datn02"},"content":"            contentAndDate[i] \u003d contentAndDate[i].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"datn02"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(contentAndDate[1], dateTimeFormat);","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"datn02"},"content":"            return new AddCommand(new Event(contentAndDate[0], date, false));","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"datn02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Please write the date in this format: \" + DATE_TIME_FORMAT + \u0027\\n\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\te.g: 20 Sep 2021 23:59\");","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"datn02"},"content":"    private static Command parseDoneCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_DONE.length()).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Bro don\u0027t you say you\u0027ve done all that.\\n\" +","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"datn02"},"content":"                    \"\\tPick a number with your done task!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"datn02"},"content":"            int taskDoneNumber \u003d Integer.parseInt(detail);","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"datn02"},"content":"            return new DoneCommand(taskDoneNumber);","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"datn02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Uhm that definitely not a number bro. Pick again.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"datn02":189}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"package duke.util;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"public class Ui {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    private static final String SEPARATING_LINE \u003d \"\\t-------------------------------------\";","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    private static final String GREET_MESSAGE \u003d \"Yo what\u0027s up I\u0027m Jesse. Need help?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    private static final String BYE_MESSAGE \u003d \"So long!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    public void print(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"        System.out.println(SEPARATING_LINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"        System.out.println(\"\\t\" + msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        System.out.println(SEPARATING_LINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    public void greet() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"        print(GREET_MESSAGE);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    public void bye() {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"        print(BYE_MESSAGE);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"    public Ui() {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"deadline do assignment /by Tuesday 12am","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"todo go sleep","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"event go outside /at Friday 7pm","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"todo cleanup code","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"todo buy groceries","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"todo","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"event","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"deadline","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"deadline finish 2027 /by Monday","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"deadline /by Sunday","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"deadline upload file /by","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"event /at UTown","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"event go CCA /at Monday 7pm","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"done 1","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"done 3","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"done 6","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"done 7","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"done 123","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"done -12","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"done","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"done abc","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"asdhj","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"datn02":1,"-":20}}]
