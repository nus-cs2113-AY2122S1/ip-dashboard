[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    private String date;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", isDone ? \"X\" : \" \", this.taskDescription, this.date);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"        String command;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"        ui.greet();","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        while (true) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"            command \u003d ui.readCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"            if (parser.isExit(command)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"            msg \u003d runCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"            ui.print(msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        ui.bye();","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    public static String runCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"            msg \u003d Parser.parse(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"            return msg;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"datn02":29,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"datn02":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    private String date;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", isDone ? \"X\" : \" \", this.taskDescription, this.date);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public class Parser {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"    static private final String INVALID_COMMAND \u003d \"Yo check your typing man. I don\u0027t get it.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_DEADLINE_SEPARATOR \u003d \"/by\";","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    static private final String COMMAND_EVENT_SEPARATOR \u003d \"/at\";","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    static private final String SPACE_SEPARATOR \u003d \" \";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"    static private final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"    static private final int EVENT_DEADLINE_ARGUMENT_COUNT \u003d 2;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"    static private final int MAX_NUMBER \u003d 100;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"    private static Task[] userTasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    static private int userTaskIndex;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    public Parser() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        userTasks \u003d new Task[MAX_NUMBER];","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"        userTaskIndex \u003d 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"    public static String parse(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"        String[] words \u003d command.split(SPACE_SEPARATOR);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"        if (words[0].equals(COMMAND_LIST)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"datn02"},"content":"            return parseListCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"datn02"},"content":"        } else if (words[0].equals(COMMAND_TODO)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"datn02"},"content":"            return parseTodoCommand(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"datn02"},"content":"        } else if (words[0].equals(COMMAND_EVENT)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"datn02"},"content":"            return parseEventCommand(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"datn02"},"content":"        } else if (words[0].equals(COMMAND_DEADLINE)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"datn02"},"content":"            return parseDeadlineCommand(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"datn02"},"content":"        } else if (words[0].equals(COMMAND_DONE)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"datn02"},"content":"            return parseDoneCommand(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"datn02"},"content":"        else {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"datn02"},"content":"            throw new DukeException(INVALID_COMMAND);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"datn02"},"content":"    public boolean isExit(String command) {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"datn02"},"content":"        return (command.equals(COMMAND_EXIT));","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"datn02"},"content":"    private static String parseListCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"datn02"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"datn02"},"content":"        if (userTaskIndex \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"datn02"},"content":"            msg \u003d \"Nothing.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"datn02"},"content":"            return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c userTaskIndex - 1; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"datn02"},"content":"            msg +\u003d (i + 1) + \".\"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"datn02"},"content":"                    + userTasks[i].toString() + \u0027\\n\u0027 + \u0027\\t\u0027;","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"datn02"},"content":"        msg \u003d msg + userTaskIndex + \".\"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"datn02"},"content":"                + userTasks[userTaskIndex - 1].toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"datn02"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"datn02"},"content":"    private static String parseTodoCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_TODO.length()).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Bro please let me know what thing you gonna do\");","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"datn02"},"content":"        userTasks[userTaskIndex] \u003d new ToDos(detail);","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"datn02"},"content":"        msg \u003d \"Gotcha. Do this while you\u0027re at it:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"datn02"},"content":"                + \"\\t\\t\" + userTasks[userTaskIndex].toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"datn02"},"content":"                + \"\\tNow you have \" + (userTaskIndex + 1)","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"datn02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"datn02"},"content":"        userTaskIndex++;","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"datn02"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"datn02"},"content":"    private static String parseDeadlineCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_DEADLINE.length()).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"datn02"},"content":"        String[] contentAndDate \u003d detail.split(COMMAND_DEADLINE_SEPARATOR);","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\t\\\"deadline [description] /by [deadline]\\\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"datn02"},"content":"            if (contentAndDate.length !\u003d EVENT_DEADLINE_ARGUMENT_COUNT","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"datn02"},"content":"                    || contentAndDate[i].equals(EMPTY_STRING)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"datn02"},"content":"                        + \"\\t\\t\\\"deadline [description] /by [deadline]\\\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"datn02"},"content":"            contentAndDate[i] \u003d contentAndDate[i].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"datn02"},"content":"        userTasks[userTaskIndex] \u003d new Deadline(contentAndDate[0], contentAndDate[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"datn02"},"content":"        msg \u003d \"Gotcha. I beg you to do this:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"datn02"},"content":"                + \"\\t\\t\" + userTasks[userTaskIndex].toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"datn02"},"content":"                + \"\\tNow you have \" + (userTaskIndex + 1)","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"datn02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"datn02"},"content":"        userTaskIndex++;","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"datn02"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"datn02"},"content":"    private static String parseEventCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_EVENT.length()).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"datn02"},"content":"        String[] contentAndDate \u003d detail.split(COMMAND_EVENT_SEPARATOR);","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"datn02"},"content":"                    + \"\\t\\t\\\"event [description] /at [date]\\\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"datn02"},"content":"            if (contentAndDate.length !\u003d EVENT_DEADLINE_ARGUMENT_COUNT","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"datn02"},"content":"                    || contentAndDate[i].equals(EMPTY_STRING)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Invalid format. Enter by this format:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"datn02"},"content":"                        + \"\\t\\t\\\"event [description] /at [date]\\\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"datn02"},"content":"        for (int i \u003d 0; i \u003c contentAndDate.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"datn02"},"content":"            contentAndDate[i] \u003d contentAndDate[i].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"datn02"},"content":"        userTasks[userTaskIndex] \u003d new Event(contentAndDate[0], contentAndDate[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"datn02"},"content":"        msg \u003d \"Gotcha. You wanna attend this:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"datn02"},"content":"                + \"\\t\\t\" + userTasks[userTaskIndex].toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"datn02"},"content":"                + \"\\tNow you have \" + (userTaskIndex + 1)","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"datn02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"datn02"},"content":"        userTaskIndex++;","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"datn02"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"datn02"},"content":"    private static String parseDoneCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"datn02"},"content":"        String msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"datn02"},"content":"        String detail \u003d command.substring(COMMAND_DONE.length()).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"datn02"},"content":"        if (detail.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"datn02"},"content":"            throw new DukeException(\"Bro don\u0027t you say you\u0027ve done all that.\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"datn02"},"content":"                    \"\\tPick a number with your done task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"datn02"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"datn02"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"datn02"},"content":"                int taskDoneNumber \u003d Integer.parseInt(detail);","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"datn02"},"content":"                userTasks[taskDoneNumber - 1].setDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"datn02"},"content":"                msg \u003d \"Good job. You may now enjoy the rest of \"","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"datn02"},"content":"                        + \"your suffering:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"datn02"},"content":"                        + \"\\t\" + userTasks[taskDoneNumber - 1].toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"datn02"},"content":"                return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"datn02"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Uhm that definitely not a dumber bro. Pick again.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"datn02"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"datn02"},"content":"                throw new DukeException(\"Task number not exist!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"datn02"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"datn02"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":179}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    protected String taskDescription;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.taskDescription);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"datn02":25}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"        return String.format(\"[T][%s] %s\", isDone ? \"X\" : \" \", this.taskDescription);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":9}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"public class Ui {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"    private static final String SEPARATING_LINE \u003d \"\\t-------------------------------------\";","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"    private static final String GREET_MESSAGE \u003d \"Yo what\u0027s up I\u0027m Jesse. Need help?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"    private static final String BYE_MESSAGE \u003d \"So long!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"    public void print(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"        System.out.println(SEPARATING_LINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"        System.out.println(\"\\t\" + msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"        System.out.println(SEPARATING_LINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"    public void greet() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"        print(GREET_MESSAGE);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"    public void bye() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"        print(BYE_MESSAGE);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"datn02"},"content":"    public Ui() {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"datn02"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"datn02"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"datn02"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"datn02"},"content":"deadline do assignment /by Tuesday 12am","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"datn02"},"content":"todo go sleep","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"datn02"},"content":"event go outside /at Friday 7pm","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"datn02"},"content":"todo cleanup code","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"datn02"},"content":"todo buy groceries","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"datn02"},"content":"todo","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"datn02"},"content":"event","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"datn02"},"content":"deadline","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"datn02"},"content":"deadline finish 2027 /by Monday","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"datn02"},"content":"deadline /by Sunday","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"datn02"},"content":"deadline upload file /by","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"datn02"},"content":"event /at UTown","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"datn02"},"content":"event go CCA /at Monday 7pm","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"datn02"},"content":"done 1","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"datn02"},"content":"done 3","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"datn02"},"content":"done 6","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"datn02"},"content":"done 7","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"datn02"},"content":"done 123","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"datn02"},"content":"done -12","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"datn02"},"content":"done","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"datn02"},"content":"done abc","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"datn02"},"content":"asdhj","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"datn02"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"datn02"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"datn02":27}}]
