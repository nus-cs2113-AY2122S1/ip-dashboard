[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"1.[T][ ] soemthing","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"2.[E][X] [E][X] [E][X] [E][X] another thing (at: : : : somewhere)","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"3.[D][X] [D][ ] [D][ ] [D][ ] soemthing else (by: : : : today)","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"4.[T][ ] eatthing","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"import duke.exception.AtEmptyException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"import duke.exception.ByEmptyException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"import duke.exception.NumberOutOfBoundsException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"    private static final String SAD_FACE \u003d \"\\uD83D\\uDE41\";","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"    private Ui dukeUi;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    private Storage dukeStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"    private TaskList dukeTask;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"    public Duke () {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"        dukeUi \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"        dukeStorage \u003d new Storage();","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"        dukeTask \u003d new TaskList(dukeStorage.taskArrayList);","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"    public void run(){","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"        dukeUi.printLogo();","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"        dukeStorage.loadFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"        dukeUi.printGreeting(\"Hello! I\u0027m Duke\", \"What can I do for you?\");","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"        while (true) {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"            String userInput \u003d dukeUi.getUserInput();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"            Ui.printReply(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"daknam2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"daknam2001"},"content":"        new Duke().run();","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"daknam2001":34,"-":2}},{"path":"src/main/java/duke/exception/AtEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class AtEmptyException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"        return \" \\\"at:\\\" cannot be empty.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"daknam2001":8}},{"path":"src/main/java/duke/exception/ByEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class ByEmptyException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"        return \" \\\"by:\\\" cannot be empty.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"daknam2001":8}},{"path":"src/main/java/duke/exception/NumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class NumberOutOfBoundsException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"        return \" OOPS! There is no task with this number: \";","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"daknam2001":8}},{"path":"src/main/java/duke/extract/Extract.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.extract;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public abstract class Extract {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    protected static final int START_OF_STRING \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    protected static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":6}},{"path":"src/main/java/duke/extract/ExtractDeadlineDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.extract;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class ExtractDeadlineDescription extends Extract{","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"     * Extracts the description of a deadline in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"     * @param deadlineInfo String array that contains deadline description and deadline due time","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"     * @param dividerPosition index of \"/by\" in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"    public static void extract(String userInput, String[] deadlineInfo, int dividerPosition){","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DESCRIPTION_INDEX] \u003d userInput.substring(START_OF_STRING, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DESCRIPTION_INDEX] \u003d deadlineInfo[DESCRIPTION_INDEX].replace(\"deadline\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DESCRIPTION_INDEX] \u003d deadlineInfo[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":15}},{"path":"src/main/java/duke/extract/ExtractDueTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.extract;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class ExtractDueTime extends Extract {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    public static final int DUE_TIME_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"     * Extracts the due time of a deadline in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"     * @param deadlineInfo String array that contains deadline description and deadline due time","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"     * @param dividerPosition index of \"/by\" in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    public static void extract(String userInput, String[] deadlineInfo, int dividerPosition){","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        int charAfterDividerPosition \u003d dividerPosition + 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DUE_TIME_INDEX] \u003d userInput.substring(charAfterDividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DUE_TIME_INDEX] \u003d deadlineInfo[DUE_TIME_INDEX].replace(\"by\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DUE_TIME_INDEX] \u003d deadlineInfo[DUE_TIME_INDEX].trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":18}},{"path":"src/main/java/duke/extract/ExtractEventDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.extract;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class ExtractEventDescription extends Extract {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"     * Extracts the description of an event in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"     * @param eventInfo String array that contains event description and event location","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"     * @param dividerPosition index of \"/at\" in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"    public static void extract(String userInput, String[] eventInfo, int dividerPosition){","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"        eventInfo[DESCRIPTION_INDEX] \u003d userInput.substring(START_OF_STRING, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"        eventInfo[DESCRIPTION_INDEX] \u003d eventInfo[DESCRIPTION_INDEX].replace(\"event\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        eventInfo[DESCRIPTION_INDEX] \u003d eventInfo[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":15}},{"path":"src/main/java/duke/extract/ExtractLocation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.extract;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class ExtractLocation extends Extract {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    private static final int LOCATION_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"     * Extracts the location of an event in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"     * @param eventInfo String array that contains event description and event location","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"     * @param dividerPosition index of \"/at\" in the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    public static void extract(String userInput, String[] eventInfo, int dividerPosition){","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        int charAfterDividerPosition \u003d dividerPosition + 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"        eventInfo[LOCATION_INDEX] \u003d userInput.substring(charAfterDividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"        eventInfo[LOCATION_INDEX] \u003d eventInfo[LOCATION_INDEX].replace(\"at\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"        eventInfo[LOCATION_INDEX] \u003d eventInfo[LOCATION_INDEX].trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractDeadlineDescription;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractDueTime;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractEventDescription;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractLocation;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"import duke.exception.AtEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"import duke.exception.ByEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":" * Splits the user input","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"public class Parser {","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"    private static final int NUMBER_OF_INFO_PARAM \u003d 2;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"    private static final int DUE_TIME_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"    private static final int LOCATION_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"     * Returns only the description of the todo task","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"     * @return description of the todo task","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"     * @throws StringIndexOutOfBoundsException required field is left empty by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"    public static String splitTodo(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"        String todoTask \u003d userInput.replace(\"todo\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"        todoTask \u003d todoTask.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"        if (todoTask.equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"        return todoTask;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"daknam2001"},"content":"     * Returns an array with deadline information","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"daknam2001"},"content":"     * @return String array that contains deadline description and deadline due time","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"daknam2001"},"content":"     * @throws StringIndexOutOfBoundsException required field is left empty by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"daknam2001"},"content":"     * @throws ByEmptyException \"by\" field is left empty","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"daknam2001"},"content":"    public static String[] splitDeadline(String userInput) throws StringIndexOutOfBoundsException,","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"daknam2001"},"content":"            ByEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"daknam2001"},"content":"        String[] deadlineInfo \u003d new String[NUMBER_OF_INFO_PARAM];","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"daknam2001"},"content":"        int dividerPosition \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"daknam2001"},"content":"        ExtractDeadlineDescription.extract(userInput, deadlineInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"daknam2001"},"content":"        ExtractDueTime.extract(userInput, deadlineInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"daknam2001"},"content":"        if (deadlineInfo[DUE_TIME_INDEX].equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"daknam2001"},"content":"            throw new ByEmptyException();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"daknam2001"},"content":"        return deadlineInfo;","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"daknam2001"},"content":"     * Returns an array with event information","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"daknam2001"},"content":"     * @return String array that contains event description and event location","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"daknam2001"},"content":"     * @throws StringIndexOutOfBoundsException required field is left empty by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"daknam2001"},"content":"     * @throws AtEmptyException \"at\" field is left empty","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"daknam2001"},"content":"    public static String[] splitEvent(String userInput) throws StringIndexOutOfBoundsException,","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"daknam2001"},"content":"            AtEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"daknam2001"},"content":"        String[] eventInfo \u003d new String[NUMBER_OF_INFO_PARAM];","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"daknam2001"},"content":"        int dividerPosition \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"daknam2001"},"content":"        ExtractEventDescription.extract(userInput, eventInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"daknam2001"},"content":"        ExtractLocation.extract(userInput, eventInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"daknam2001"},"content":"        if (eventInfo[LOCATION_INDEX].equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"daknam2001"},"content":"            throw new AtEmptyException();","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"daknam2001"},"content":"        return eventInfo;","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"daknam2001"},"content":"     * Returns keyword that the user is finding","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"daknam2001"},"content":"     * @return keyword that the user is finding","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"daknam2001"},"content":"     * @throws StringIndexOutOfBoundsException required field is left empty by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"daknam2001"},"content":"    public static String splitKeyword(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"daknam2001"},"content":"        String keyword \u003d userInput.replace(\"find\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"daknam2001"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"daknam2001"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"daknam2001"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"daknam2001"},"content":"        return keyword;","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":86}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractDeadlineDescription;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractDueTime;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractEventDescription;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"import duke.extract.ExtractLocation;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"import duke.exception.AtEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"import duke.exception.ByEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"import duke.task.Event;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"import java.io.File;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"public class Storage {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"    public static final String SAD_FACE \u003d \"\\uD83D\\uDE41\";","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"    private static final int START_OF_STRING \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"    private static final int NUMBER_OF_INFO_PARAM \u003d 2;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"    private static final int DUE_TIME_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"    private static final int LOCATION_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"    private static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"    private static final String FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"    private static final String FOLDERPATH \u003d \"data\";","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"    private static final int INDEX_OF_TASK_TYPE \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"    private static final int START_OF_DESCRIPTION \u003d 7;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"    private static final char TODO_SYMBOL \u003d \u0027T\u0027;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"daknam2001"},"content":"    private static final char DEADLINE_SYMBOL \u003d \u0027D\u0027;","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"daknam2001"},"content":"    private static final char EVENT_SYMBOL \u003d \u0027E\u0027;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"daknam2001"},"content":"    public static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"daknam2001"},"content":"    public Storage(){","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"daknam2001"},"content":"     * Loads a saved copy of the task list","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"daknam2001"},"content":"    public static void loadFile() {","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"daknam2001"},"content":"        try {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"daknam2001"},"content":"            createFolder();","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"daknam2001"},"content":"            createFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"daknam2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"daknam2001"},"content":"        } catch (ByEmptyException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"daknam2001"},"content":"        } catch (AtEmptyException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"daknam2001"},"content":"    private static void createFolder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"daknam2001"},"content":"        File folder \u003d new File(FOLDERPATH);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"daknam2001"},"content":"        if (folder.mkdir()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Folder created: \" + folder.getName());","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"daknam2001"},"content":"    private static void createFile() throws IOException, ByEmptyException, AtEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"daknam2001"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"daknam2001"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"daknam2001"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"daknam2001"},"content":"            readFile(f);","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"daknam2001"},"content":"     * Updates the text file with the current task list","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"daknam2001"},"content":"    public static void writeToFile() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"daknam2001"},"content":"        try {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"daknam2001"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"daknam2001"},"content":"            for (Task t : taskArrayList) {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"daknam2001"},"content":"                fw.write(t.taskNum + \".\" + t + System.lineSeparator());","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"daknam2001"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"daknam2001"},"content":"            fw.close();","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"File \\\"duke.txt\\\" updated\");","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"daknam2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"daknam2001"},"content":"    private static void readFile(File f) throws FileNotFoundException, ByEmptyException, AtEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"daknam2001"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"daknam2001"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"daknam2001"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"daknam2001"},"content":"            int fullStopPosition \u003d line.indexOf(\".\");","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"daknam2001"},"content":"            String lineWithoutNum \u003d line.substring(fullStopPosition + 1);","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"daknam2001"},"content":"            int readNumber \u003d Integer.parseInt(line.substring(START_OF_STRING, fullStopPosition));","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"daknam2001"},"content":"            readTaskType(lineWithoutNum, readNumber);","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"File Loaded: \" + Task.taskCount + \" Tasks\");","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"daknam2001"},"content":"    private static void readTaskType(String lineWithoutNum, int readNumber) throws ByEmptyException, AtEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"daknam2001"},"content":"        char taskType \u003d lineWithoutNum.charAt(INDEX_OF_TASK_TYPE);","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"daknam2001"},"content":"        switch (taskType) {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"daknam2001"},"content":"        case TODO_SYMBOL:","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.add(new Todo(lineWithoutNum.substring(START_OF_DESCRIPTION)));","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"daknam2001"},"content":"        case DEADLINE_SYMBOL:","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"daknam2001"},"content":"            String[] deadlineInfo \u003d splitFileDeadline(lineWithoutNum);","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.add(new Deadline(deadlineInfo[DESCRIPTION_INDEX], deadlineInfo[DUE_TIME_INDEX]));","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"daknam2001"},"content":"        case EVENT_SYMBOL:","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"daknam2001"},"content":"            String[] eventInfo \u003d splitFileEvent(lineWithoutNum);","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.add(new Event(eventInfo[DESCRIPTION_INDEX], eventInfo[LOCATION_INDEX]));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"daknam2001"},"content":"        readDoneMark(lineWithoutNum, readNumber);","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"daknam2001"},"content":"    private static String[] splitFileDeadline(String userInput) throws StringIndexOutOfBoundsException,","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"daknam2001"},"content":"            ByEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"daknam2001"},"content":"        String[] deadlineInfo \u003d new String[NUMBER_OF_INFO_PARAM];","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"daknam2001"},"content":"        int dividerPosition \u003d userInput.indexOf(\"(by:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"daknam2001"},"content":"        ExtractDeadlineDescription.extract(userInput, deadlineInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"daknam2001"},"content":"        ExtractDueTime.extract(userInput, deadlineInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"daknam2001"},"content":"        int INDEX_OF_CLOSING_BRACKET \u003d deadlineInfo[DUE_TIME_INDEX].length() - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"daknam2001"},"content":"        deadlineInfo[DUE_TIME_INDEX] \u003d deadlineInfo[DUE_TIME_INDEX].substring(START_OF_STRING, INDEX_OF_CLOSING_BRACKET);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"daknam2001"},"content":"        if (deadlineInfo[DUE_TIME_INDEX].equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"daknam2001"},"content":"            throw new ByEmptyException();","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"daknam2001"},"content":"        return deadlineInfo;","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"daknam2001"},"content":"    private static String[] splitFileEvent(String userInput) throws StringIndexOutOfBoundsException,","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"daknam2001"},"content":"            AtEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"daknam2001"},"content":"        String[] eventInfo \u003d new String[NUMBER_OF_INFO_PARAM];","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"daknam2001"},"content":"        int dividerPosition \u003d userInput.indexOf(\"(at:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"daknam2001"},"content":"        ExtractEventDescription.extract(userInput, eventInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"daknam2001"},"content":"        ExtractLocation.extract(userInput, eventInfo, dividerPosition);","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"daknam2001"},"content":"        int INDEX_OF_CLOSING_BRACKET \u003d eventInfo[LOCATION_INDEX].length() - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"daknam2001"},"content":"        eventInfo[LOCATION_INDEX] \u003d eventInfo[LOCATION_INDEX].substring(START_OF_STRING, INDEX_OF_CLOSING_BRACKET);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"daknam2001"},"content":"        if (eventInfo[LOCATION_INDEX].equals(\"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"daknam2001"},"content":"            throw new AtEmptyException();","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"daknam2001"},"content":"        return eventInfo;","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"daknam2001"},"content":"    private static void readDoneMark(String lineWithoutNum, int readNumber) {","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"daknam2001"},"content":"        int INDEX_OF_DONE_MARK \u003d 4;","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"daknam2001"},"content":"        if (lineWithoutNum.charAt(INDEX_OF_DONE_MARK) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.get(readNumber - 1).isDone \u003d true;","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":152}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    protected String by;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"daknam2001":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"daknam2001":15}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.task;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"    protected String description;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    public boolean isDone;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"    public int taskNum;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"        taskCount++;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"        taskNum \u003d taskCount;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"     * Retrieves the status icon for the task","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"     * @return X symbol if task is done, or a whitespace if task is not done","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"daknam2001":32}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"daknam2001":13}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.tasklist;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"import duke.exception.AtEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"import duke.exception.ByEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"import duke.exception.NumberOutOfBoundsException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"import duke.task.Event;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"public class TaskList{","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"    public static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"    public static final int DUE_TIME_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"    public static final int LOCATION_INDEX \u003d 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"daknam2001"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"daknam2001"},"content":"    public static String number;","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"daknam2001"},"content":"    public static String inputCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"daknam2001"},"content":"    public static ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"daknam2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e storageArrayList){","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"daknam2001"},"content":"        taskArrayList \u003d storageArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"daknam2001"},"content":"     * Performs actions based on user commands","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"daknam2001"},"content":"     * @throws NumberOutOfBoundsException number input by user not in task list","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"daknam2001"},"content":"     * @throws StringIndexOutOfBoundsException required field is left empty by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"daknam2001"},"content":"     * @throws AtEmptyException \"at\" field is left empty","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"daknam2001"},"content":"     * @throws ByEmptyException \"by\" field is left empty","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"daknam2001"},"content":"    public static void processUserInput(String userInput) throws NumberOutOfBoundsException,","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"daknam2001"},"content":"            StringIndexOutOfBoundsException, AtEmptyException, ByEmptyException {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"daknam2001"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"daknam2001"},"content":"        inputCommand \u003d splitInput[DESCRIPTION_INDEX];","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"daknam2001"},"content":"        switch (inputCommand) {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"daknam2001"},"content":"            performListTask();","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"daknam2001"},"content":"            int inputNum \u003d handleIntConversion(userInput, COMMAND_DONE);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"daknam2001"},"content":"            performMarkTaskDone(inputNum);","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"daknam2001"},"content":"            Storage.writeToFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"daknam2001"},"content":"            String todoTask \u003d Parser.splitTodo(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"daknam2001"},"content":"            performAddTodo(todoTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"daknam2001"},"content":"            Storage.writeToFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"daknam2001"},"content":"            String[] deadlineInfo \u003d Parser.splitDeadline(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"daknam2001"},"content":"            performAddDeadline(deadlineInfo[DESCRIPTION_INDEX], deadlineInfo[LOCATION_INDEX]);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"daknam2001"},"content":"            Storage.writeToFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"daknam2001"},"content":"            String[] eventInfo \u003d Parser.splitEvent(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"daknam2001"},"content":"            performAddEvent(eventInfo[DESCRIPTION_INDEX], eventInfo[DUE_TIME_INDEX]);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"daknam2001"},"content":"            Storage.writeToFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"daknam2001"},"content":"            inputNum \u003d handleIntConversion(userInput, COMMAND_DELETE);","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"daknam2001"},"content":"            performDelete(inputNum);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"daknam2001"},"content":"            Storage.writeToFile();","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"daknam2001"},"content":"            String keyword \u003d Parser.splitKeyword(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"daknam2001"},"content":"            findKeyword(keyword);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"daknam2001"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"daknam2001"},"content":"            Ui.exitProgram();","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"daknam2001"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"daknam2001"},"content":"        default:","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"daknam2001"},"content":"            Ui.printInvalidInput();","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"daknam2001"},"content":"    private static void performListTask() {","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"daknam2001"},"content":"        for (Task t : taskArrayList) {","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"daknam2001"},"content":"            System.out.println(INDENT + t.taskNum + \".\" + t);","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"daknam2001"},"content":"    private static int handleIntConversion(String userInput, String command) {","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"daknam2001"},"content":"        number \u003d userInput.replace(command, \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"daknam2001"},"content":"        number \u003d number.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"daknam2001"},"content":"        return Integer.parseInt(number);","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"daknam2001"},"content":"    private static void performMarkTaskDone(int inputNum) throws NumberOutOfBoundsException {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"daknam2001"},"content":"        int doneTaskIndex \u003d inputNum - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"daknam2001"},"content":"        boolean isValidNum \u003d (inputNum \u003e DESCRIPTION_INDEX) \u0026\u0026 (inputNum \u003c\u003d Task.taskCount);","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"daknam2001"},"content":"        if (isValidNum) {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.get(doneTaskIndex).markAsDone();","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"daknam2001"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"daknam2001"},"content":"            System.out.println(INDENT + taskArrayList.get(doneTaskIndex).taskNum + \".\" + taskArrayList.get(doneTaskIndex));","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"daknam2001"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"daknam2001"},"content":"            throw new NumberOutOfBoundsException();","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"daknam2001"},"content":"    private static void performDelete(int inputNum) throws NumberOutOfBoundsException {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"daknam2001"},"content":"        int deleteTaskIndex \u003d inputNum - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"daknam2001"},"content":"        boolean isValidNum \u003d (inputNum \u003e DESCRIPTION_INDEX) \u0026\u0026 (inputNum \u003c\u003d Task.taskCount);","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"daknam2001"},"content":"        if (isValidNum) {","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"daknam2001"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"daknam2001"},"content":"            System.out.println(INDENT + taskArrayList.get(deleteTaskIndex).taskNum + \".\" + taskArrayList.get(deleteTaskIndex));","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.remove(deleteTaskIndex);","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"daknam2001"},"content":"            decrementTaskCount();","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"daknam2001"},"content":"            updateTaskNum(deleteTaskIndex);","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list\");","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"daknam2001"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"daknam2001"},"content":"            throw new NumberOutOfBoundsException();","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"daknam2001"},"content":"    private static void decrementTaskCount() {","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"daknam2001"},"content":"        Task.taskCount \u003d Task.taskCount - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"daknam2001"},"content":"    private static void updateTaskNum(int deleteTaskNum) {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"daknam2001"},"content":"        for (int i \u003d deleteTaskNum; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"daknam2001"},"content":"            taskArrayList.get(i).taskNum \u003d taskArrayList.get(i).taskNum - 1;","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"daknam2001"},"content":"    private static void findKeyword(String keyword){","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Here are the matching tasks in the list:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"daknam2001"},"content":"        boolean isThereMatchingTask \u003d false;","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"daknam2001"},"content":"        for (Task t: taskArrayList){","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"daknam2001"},"content":"            if (t.toString().contains(keyword)){","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"daknam2001"},"content":"                System.out.println(INDENT + t.taskNum + \".\" + t);","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"daknam2001"},"content":"                isThereMatchingTask \u003d true;","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"daknam2001"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"daknam2001"},"content":"        if (!isThereMatchingTask){","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"daknam2001"},"content":"            System.out.println(\"Search Complete. There are no matching tasks in the list.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"daknam2001"},"content":"    private static void performAddTodo(String todoTask) {","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"daknam2001"},"content":"        taskArrayList.add(new Todo(todoTask));","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"daknam2001"},"content":"        System.out.println(INDENT + taskArrayList.get(Task.taskCount - 1));","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list\");","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"daknam2001"},"content":"    private static void performAddDeadline(String description, String by) {","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":179,"author":{"gitId":"daknam2001"},"content":"        taskArrayList.add(new Deadline(description, by));","lastModifiedDate":"2021-10-01"},{"lineNumber":180,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":181,"author":{"gitId":"daknam2001"},"content":"        System.out.println(INDENT + taskArrayList.get(Task.taskCount - 1));","lastModifiedDate":"2021-10-01"},{"lineNumber":182,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list\");","lastModifiedDate":"2021-10-01"},{"lineNumber":183,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":184,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"daknam2001"},"content":"    private static void performAddEvent(String description, String at) {","lastModifiedDate":"2021-10-01"},{"lineNumber":186,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":187,"author":{"gitId":"daknam2001"},"content":"        taskArrayList.add(new Event(description, at));","lastModifiedDate":"2021-10-01"},{"lineNumber":188,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"daknam2001"},"content":"        System.out.println(INDENT + taskArrayList.get(Task.taskCount - 1));","lastModifiedDate":"2021-10-01"},{"lineNumber":190,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list\");","lastModifiedDate":"2021-10-01"},{"lineNumber":191,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":192,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":192}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"package duke.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"import duke.exception.AtEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"import duke.exception.ByEmptyException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"import duke.exception.NumberOutOfBoundsException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"public class Ui {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"    public static final String SAD_FACE \u003d \"\\uD83D\\uDE41\";","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"    public Ui(){","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"     * Prints the Duke Logo","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"    public void printLogo() {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"daknam2001"},"content":"     * Prints a greeting to the user","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"daknam2001"},"content":"     * @param s First line of the greeting","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"daknam2001"},"content":"     * @param s2 Second Lind of the greeting","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"daknam2001"},"content":"    public static void printGreeting(String s, String s2) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"daknam2001"},"content":"        System.out.println(s);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"daknam2001"},"content":"        System.out.println(s2);","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"daknam2001"},"content":"     * Retrieves and trims the input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"daknam2001"},"content":"     * @return trimmed user input as a String","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"daknam2001"},"content":"    public static String getUserInput() {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"daknam2001"},"content":"        System.out.println(\"Enter command: \");","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"daknam2001"},"content":"        String input \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"daknam2001"},"content":"        while (input.trim().isEmpty()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"daknam2001"},"content":"            input \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"daknam2001"},"content":"        return input;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"daknam2001"},"content":"     * Prints a reply to the user and informs the user when an invalid command is given","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"daknam2001"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"daknam2001"},"content":"    public static void printReply(String userInput) {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"daknam2001"},"content":"        try {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"daknam2001"},"content":"            TaskList.processUserInput(userInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"daknam2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + \" OOPS! The character you entered is not a number: \" + TaskList.number);","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"daknam2001"},"content":"        } catch (NumberOutOfBoundsException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + e.getMessage() + TaskList.number);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"daknam2001"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + \" The description of \" + \"\\\"\" + TaskList.inputCommand + \"\\\"\" + \" is not \" +","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"daknam2001"},"content":"                    \"complete\");","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"daknam2001"},"content":"        } catch (AtEmptyException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"daknam2001"},"content":"        } catch (ByEmptyException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"daknam2001"},"content":"            System.out.println(SAD_FACE + e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"daknam2001"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"daknam2001"},"content":"     * Tells the user that a command was not given","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"daknam2001"},"content":"    public static void printInvalidInput() {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"daknam2001"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"daknam2001"},"content":"        System.out.println(SAD_FACE + \" OOPS! I\u0027m sorry, but I don\u0027t know what that means \" + SAD_FACE);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"daknam2001"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"daknam2001"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"daknam2001"},"content":"     * Terminates Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"daknam2001"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"daknam2001"},"content":"    public static void exitProgram() {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"daknam2001"},"content":"        printGreeting(\"Bye. Hope to see you again soon!\", HORIZONTAL_LINE);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"daknam2001"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"daknam2001"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"daknam2001"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":91}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"1.[T][ ] homework","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"2.[T][ ] english essay","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"3.[D][X] coding assignment (by: today midnight)","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"4.[E][ ] business meeting (at: my house)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"daknam2001":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daknam2001"},"content":"first task","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"daknam2001"},"content":"done 1","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"daknam2001"},"content":"todo homework","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"daknam2001"},"content":"todo       english essay","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"done    3","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"daknam2001"},"content":"deadline proposal /by tomorrow 9pm","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"deadline     coding assignment    /by    today midnight","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"daknam2001"},"content":"deadline    submit essay /","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"daknam2001"},"content":"deadline submit homework /by","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"daknam2001"},"content":"done   4","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"daknam2001"},"content":"delete 3","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"daknam2001"},"content":"event business meeting /at my house","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"daknam2001"},"content":"event     wedding dinner    /at    hotel","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"event   attend class  /at","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"daknam2001"},"content":"event  go home /","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"daknam2001"},"content":"find","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"daknam2001"},"content":"find something","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"daknam2001"},"content":"find at","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"daknam2001"},"content":"find T","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"daknam2001"},"content":"done 6","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"daknam2001"},"content":"delete 6","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"daknam2001"},"content":"delete 5","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"daknam2001"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"daknam2001"},"content":"bye","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"daknam2001":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"daknam2001"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"daknam2001"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\tasklist\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\extract\\*.java","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"daknam2001"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daknam2001":3,"-":18}}]
