[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"[T] | 1 | read book","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"[D] | 0 | network assignment | 22 sept","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"[E] | 0 | exam cs2106 | 29 sept 2.15pm-3.15pm","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"[T] | 1 | return book","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"[E] | 0 | exam cs2105 | 4th oct 2-4pm","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"Woolicious98":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import duke.file.FileHandler;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    final static String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    final static String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    final static String SET_DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    final static String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    final static String ADD_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    final static String ADD_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    final static String ADD_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    final static String NO_FORMAT_TAG \u003d \" \u003cno additional input required\u003e\";","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    final static String TASK_NUMBER_TAG \u003d \" \u003ctask number(can be seen using the list command, eg. 1)\u003e\";","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    final static String EXIT_FORMAT \u003d EXIT_COMMAND + NO_FORMAT_TAG;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    final static String LIST_FORMAT \u003d LIST_COMMAND + NO_FORMAT_TAG;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    final static String DONE_FORMAT \u003d SET_DONE_COMMAND + TASK_NUMBER_TAG;","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    final static String DELETE_FORMAT \u003d DELETE_COMMAND + TASK_NUMBER_TAG;","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    final static String TODO_FORMAT \u003d ADD_TODO_COMMAND + \" \u003ctask description\u003e\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    final static String DEADLINE_FORMAT \u003d ADD_EVENT_COMMAND + \" \u003ctask description\u003e /by \u003cdue date\u003e\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    final static String EVENT_FORMAT \u003d ADD_DEADLINE_COMMAND + \" \u003ctask description\u003e /at \u003cstart date\u003e\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    final static String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    final static String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * Main function to run the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @param args Arguments from console input","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        getMenu();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        printExitMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Prints the exit message when user quits the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"     * Prints the welcome message when user first runs the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        printLogoMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * Prints the logo of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    public static void printLogoMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * Print a format error message with the given format usage.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @param format Constant string containing the format usage of the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    public static void printFormatErrorMessage(String format) {","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Error: Incorrect format detected.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Usage: \" + format);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * Method to process user command accordingly.","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * @param fileHandler FileHandler to contain and extract tasks list information.","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     * @param taskManager TaskManager object that handles all task related action.","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs  Raw user inputs from scanner.","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * @return Whether if the exit command has been triggered.","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    public static boolean processInput(FileHandler fileHandler, TaskManager taskManager, String userInputs) {","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        boolean isNotExit \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        boolean hasChange \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        switch (getUserCommand(userInputs)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        case ADD_TODO_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"            addToDoTask(taskManager, userInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"            hasChange \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        case ADD_EVENT_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"            addEventTask(taskManager, userInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            hasChange \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        case ADD_DEADLINE_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            addDeadlineTask(taskManager, userInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"            hasChange \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        case SET_DONE_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"                int taskIndex \u003d getTaskIndexFromUserInputs(userInputs);","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"                taskManager.setTaskToDone(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"                hasChange \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"            } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"                printFormatErrorMessage(DONE_FORMAT);","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"                int taskIndex \u003d getTaskIndexFromUserInputs(userInputs);","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"                taskManager.deleteTask(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"                hasChange \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"            } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"                printFormatErrorMessage(DELETE_FORMAT);","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"            taskManager.printAllTasks();","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        case EXIT_COMMAND:","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"            isNotExit \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"            return isNotExit;","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"            System.out.println(\"Error: Command not found.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        if (hasChange) {","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"                fileHandler.writeToFile(FILE_NAME, taskManager.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"                System.out.println(\"Error: An error has occurred when writing to file.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        return isNotExit;","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"     * Get the menu for user to input commands for the bot to perform.","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"    public static void getMenu() {","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        FileHandler fileHandler \u003d new FileHandler(FILE_DIRECTORY);","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"        //load data","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"Loading data from %s...\\n\", FILE_NAME);","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        fileHandler.loadToTaskManager(FILE_NAME, taskManager);","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Finish loading.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        String userInputs;","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"        boolean hasNotExit;","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        do {","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"            userInputs \u003d in.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"            hasNotExit \u003d processInput(fileHandler, taskManager, userInputs);","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"        } while (hasNotExit);","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"     * Get the first element of a String after a split by spaces.","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs Raw user inputs from scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"     * @return String containing the command given by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"    public static String getUserCommand(String userInputs) {","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"            return userInputs.split(\" \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"            return userInputs;","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"     * Method to extract the information after a valid bot command. For example \"todo read book\" will give \"read book\".","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs Raw user inputs from scanner.","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"     * @return The string after a valid bot command.","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"    public static String getUserPayload(String userInputs) {","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"        if (userInputs \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"            return userInputs;","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"        String[] payload \u003d userInputs.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"        payload[0] \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"        return String.join(\" \", payload).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"     * Method to extract an integer output from user inputs. If an invalid format has been detected, -1 will be return","lastModifiedDate":"2021-08-29"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"     * instead.","lastModifiedDate":"2021-08-29"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs Raw user inputs from scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"     * @return An integer representing an index in the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"    public static int getTaskIndexFromUserInputs(String userInputs) throws InvalidTaskNumberException {","lastModifiedDate":"2021-09-06"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"        int result \u003d -1;","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"            result \u003d Integer.parseInt(userInputs.split(\" \")[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"        if (result \u003c 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"     * Method to create a ToDo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"     * @param taskManager TaskManager object that handles the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs  Raw user inputs from scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"    public static void addToDoTask(TaskManager taskManager, String userInputs) {","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        String payload \u003d getUserPayload(userInputs);","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"        if (isStringEmpty(payload)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(TODO_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        taskManager.createToDoTask(payload);","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"     * Method to create a Deadline Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"     * @param taskManager TaskManager object that handles the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs  Raw user inputs from scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":240,"author":{"gitId":"Woolicious98"},"content":"    public static void addDeadlineTask(TaskManager taskManager, String userInputs) {","lastModifiedDate":"2021-08-29"},{"lineNumber":241,"author":{"gitId":"Woolicious98"},"content":"        String payload \u003d getUserPayload(userInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"        if (isStringEmpty(payload)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(DEADLINE_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":244,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":245,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":246,"author":{"gitId":"Woolicious98"},"content":"        String[] taskInfo \u003d payload.split(\"/by\");","lastModifiedDate":"2021-08-29"},{"lineNumber":247,"author":{"gitId":"Woolicious98"},"content":"        if (taskInfo.length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":248,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(DEADLINE_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":249,"author":{"gitId":"Woolicious98"},"content":"        } else if (isAnyStringEmpty(taskInfo)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":250,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(DEADLINE_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":251,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"Woolicious98"},"content":"            taskManager.createDeadlineTask(taskInfo[0], taskInfo[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":253,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":256,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":257,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"     * Method to create an Event task.","lastModifiedDate":"2021-09-12"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":260,"author":{"gitId":"Woolicious98"},"content":"     * @param taskManager TaskManager object that handles the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"     * @param userInputs  Raw user inputs from scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"    public static void addEventTask(TaskManager taskManager, String userInputs) {","lastModifiedDate":"2021-08-29"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"        String payload \u003d getUserPayload(userInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"        if (isStringEmpty(payload)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(EVENT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"        String[] taskInfo \u003d payload.split(\"/at\");","lastModifiedDate":"2021-08-29"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"        if (taskInfo.length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(EVENT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":272,"author":{"gitId":"Woolicious98"},"content":"        } else if (isAnyStringEmpty(taskInfo)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"            printFormatErrorMessage(EVENT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":274,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":275,"author":{"gitId":"Woolicious98"},"content":"            taskManager.createEventTask(taskInfo[0], taskInfo[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":278,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"     * Check if a string is empty. Returning true if it does not exist or is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"     * @param s Given string to check.","lastModifiedDate":"2021-08-29"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"     * @return boolean if the string is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isStringEmpty(String s) {","lastModifiedDate":"2021-08-29"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"        return (s \u003d\u003d null || s.isEmpty());","lastModifiedDate":"2021-08-29"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"     * Check if any string in a given string array is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"     * @param strings Given String array.","lastModifiedDate":"2021-08-29"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"     * @return True if any of a string in the string array is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isAnyStringEmpty(String[] strings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"        boolean isEmpty \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"        for (String s : strings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"            if (isStringEmpty(s.trim())) {","lastModifiedDate":"2021-08-29"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"                isEmpty \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"        return isEmpty;","lastModifiedDate":"2021-08-29"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Woolicious98":299,"-":8}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public InvalidTaskNumberException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Woolicious98":11}},{"path":"src/main/java/duke/file/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.file;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"public class FileHandler {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    private String fileDirectory;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public FileHandler(String fileDirectory) {","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    public void writeToFile(String fileName, String contents) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        File directory \u003d new File(fileDirectory);","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        directory.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        FileWriter fw \u003d new FileWriter(new File(fileDirectory, fileName));","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        fw.write(contents);","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Pass inputs from file to task manager to process into the tasks list.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param fileName    Given file name that contains the many tasks information.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param taskManager TaskManager that handles any task related operation.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public void loadToTaskManager(String fileName, TaskManager taskManager) {","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        File f \u003d new File(fileDirectory, fileName);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"                taskManager.addTaskFromFile(s.nextLine());","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"            System.out.printf(\"Notice: File %s not found.\\n\", fileName);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"Woolicious98":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    final private static String FLAG_TYPE \u003d \"[D]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    private String dueDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"        this.dueDate \u003d dueDate.trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + super.getStatusIcon();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Get all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @return String containing all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return getDescription() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + \" | \" + getDoneStatus() + \" | \" + this.getDescription() + \" | \" + dueDate;","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Woolicious98":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    final private static String FLAG_TYPE \u003d \"[E]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    private String startDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public Event(String description, String startDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"        this.startDate \u003d startDate.trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + super.getStatusIcon();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Get all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @return String containing all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return getDescription() + \" (at: \" + startDate + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + \" | \" + getDoneStatus() + \" | \" + this.getDescription() + \" | \" + startDate;","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Woolicious98":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"     * Status of whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    private String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"            return \"1\";","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        return \"0\";","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        return description;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * Get all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @return String containing all information of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        return description;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Returns a string depending on the isDone status. If the task isDone is true, \"X\" is return. Else \" \" is return.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @return isDone status icon","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        String isDoneFlag \u003d \"[ ]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            isDoneFlag \u003d \"[X]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        return isDoneFlag;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        return \" \" + \" | \" + getDoneStatus() + \" | \" + description;","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Woolicious98":63}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.io.OutputStream;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    private int totalNumberOfTasks \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    public TaskManager() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * Create a ToDo task and add into tasks list","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    public void createToDoTask(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Create an Event task and add into tasks list","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param date        Start date for the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public void createEventTask(String description, String date) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        Task newTask \u003d new Event(description, date);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * Create a deadline task and add into tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @param date        Due date for the deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    public void createDeadlineTask(String description, String date) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        Task newTask \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * Add the given task into the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"     * @param task Task to be added into tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        tasksList.add(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        totalNumberOfTasks++;","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        printTask(totalNumberOfTasks - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"Now you have %d tasks in the list\" + System.lineSeparator(), totalNumberOfTasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * Print all task status in the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    public void printAllTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfTasks; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"            System.out.printf(\"%s.\", i + 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            printTask(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"There are currently %d tasks in your list.\\n\", totalNumberOfTasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * Print an individual task status in the tasks list, with reference to its index number.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @param taskIndex The task index number in the tasks list to be printed out.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    public void printTask(int taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"%s %s\" + System.lineSeparator(),","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"                tasksList.get(taskIndex).getStatusIcon(),","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"                tasksList.get(taskIndex).getTaskInfo()","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * Set a given task to be marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     * @param taskNumber The task index number in the tasks list to be set as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    public void setTaskToDone(int taskNumber) {","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e totalNumberOfTasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"            System.out.println(\"Error: task not found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        tasksList.get(taskIndex).setDone(true);","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        printTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"     * Delete the task given by its index in the taskList.","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * @param taskNumber Specified task number by list command. Its taskIndex will be taskNumber - 1.","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e totalNumberOfTasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"            System.out.println(\"Error: task not found.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        String taskDescription \u003d","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"                tasksList.get(taskIndex).getStatusIcon() + \" \" + tasksList.get(taskIndex).getTaskInfo();","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        tasksList.remove(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"        totalNumberOfTasks -\u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"Now you have %d tasks in the list\" + System.lineSeparator(), totalNumberOfTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        String separator \u003d \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfTasks; i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"            data +\u003d tasksList.get(i) + System.lineSeparator();","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        return data;","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"     * Add given string content from file input into the tasks list.","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"     * @param contents A task information given by a file input.","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"    public void addTaskFromFile(String contents) {","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        String[] contentArray \u003d contents.split(\"\\\\|\");","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        PrintStream originalStream \u003d System.out;","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        PrintStream noOutputStream \u003d new PrintStream(new OutputStream() {","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"            public void write(int b) {","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"                // NO-OP","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"        });","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"        System.setOut(noOutputStream);","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"        switch (contentArray[0].trim()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"        case \"[T]\":","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"            if (contentArray.length \u003c 3) {","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"                hasError \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"            createToDoTask(contentArray[2].trim());","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        case \"[D]\":","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"            if (contentArray.length \u003c 4) {","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"                hasError \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"            createDeadlineTask(contentArray[2].trim(), contentArray[3].trim());","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        case \"[E]\":","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"            if (contentArray.length \u003c 4) {","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"                hasError \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"            createEventTask(contentArray[2].trim(), contentArray[3].trim());","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"            hasError \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"        System.setOut(originalStream);","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"        if (hasError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"            printInvalidFileInput(contents);","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"            if (contentArray[1].trim().equals(\"1\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"                isDone \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"            tasksList.get(totalNumberOfTasks - 1).setDone(isDone);","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"     * Method to print the content in which causes the invalid error when inputing data from text file.","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"     * @param s The input that trigger the error.","lastModifiedDate":"2021-09-12"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"    private void printInvalidFileInput(String s) {","lastModifiedDate":"2021-09-12"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"        System.out.printf(\"Error: Invalid input \\\"%s\\\"\\n\", s);","lastModifiedDate":"2021-09-12"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"Woolicious98":196}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    final private static String FLAG_TYPE \u003d \"[T]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + super.getStatusIcon();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"        return FLAG_TYPE + \" | \" + getDoneStatus() + \" | \" + this.getDescription();","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Woolicious98":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"todo borrow book","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"deadline return book","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"done 0","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"done 2","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"done X","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"add book","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"exit","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Woolicious98":17}}]
